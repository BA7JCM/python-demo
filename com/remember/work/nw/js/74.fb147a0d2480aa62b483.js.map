{"version":3,"file":"static/js/74.fb147a0d2480aa62b483.js","sources":["webpack:///src/components/landsource/mappart.vue"],"sourcesContent":["<template>\r\n  <div class=\"mapcontain\">\r\n    <el-select v-model=\"mapId\" placeholder=\"\" :disabled=\"!(gisdata.length > 0)\" :class=\"[gisdata.length ? '':'noopts']\"\r\n               @change=\"selectChange\">\r\n      <el-option v-for=\"item in gisdata\" :key=\"item.id\" :label=\"item.gisName\" :value=\"item.id\"></el-option>\r\n      <!-- 自定义下拉框头部 -->\r\n      <template v-slot:prefix>\r\n        <div class=\"select-input\">{{gisName}}</div>\r\n      </template>\r\n    </el-select>\r\n    <div id=\"mapcon\"></div>\r\n    <div class=\"tuli\"><img :src=\"tulistr\" alt=\"\"/></div>\r\n    <div class=\"updatetime\" v-if=\"updatetime\">数据更新时间：{{updatetime | znDateFormat(\"yyyy.MM.dd\")}}</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import \"../../assets/js/geojson-utils.js\";\r\nimport { getFeature } from '@/common/fn/index';\r\nimport { getStorage, setStorage } from '@/utils/storage';\r\nimport areaIdMapAmap from '@/common/data/areaIdMapAmap.js'\r\n// import landSource from \"@/pages/landSource\";\r\n\r\n/**\r\n   * 用于映射地图颗粒度\r\n   * @type {{\"230382\": number}}\r\n   */\r\nconst zoomSnapMapping = {\r\n  230382: 0.1, // 密山颗粒度\r\n  130624: 0.1 // 抚平\r\n};\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      areaid: '',\r\n      map: null,\r\n      allpolygon: [],\r\n      bigpolygon: null,\r\n      imageOverlay: null,\r\n      mapId: '暂无遥感',\r\n      mapType: 0,\r\n      tulistr: '',\r\n      updatetime: undefined,\r\n      polygonready: false,\r\n      pointLat: undefined,\r\n      pointLng: undefined,\r\n      gisName: '',\r\n      mapZoom: 13\r\n    };\r\n  },\r\n  props: ['gisdata', 'gisget'],\t// 保存所有echarts对象组\r\n  mounted () {\r\n    this.setAreaId();\r\n\r\n    this.$nextTick(async () => {\r\n      const storageMapId = getStorage('landSource_mapId');\r\n      await this._initMap('mapcon');\r\n      if (this.gisdata.length !== 0) {\r\n        this.mapId = this.gisdata.some(gis => gis.id === storageMapId)\r\n          ? storageMapId\r\n          : this.gisdata[0].id;\r\n        this.selectChange(this.mapId);\r\n      }\r\n    });\r\n  },\r\n  methods: {\r\n    // 初始化地图\r\n    async _initMap (el) {\r\n      // 获取高德json\r\n      const district = await getFeature({ areaId: areaIdMapAmap[this.areaid] || this.areaid, child: false });\r\n      this.map = L.map(el, {\r\n        center: [0, 0],\r\n        zoom: 9,\r\n        zoomSnap: 0.1,\r\n        layers: [],\r\n        zoomControl: false,\r\n        attributionControl: false,\r\n        dragging: false,\r\n        touchZoom: false,\r\n        scrollWheelZoom: false,\r\n        doubleClickZoom: false,\r\n        boxZoom: false,\r\n        tap: false,\r\n        keyboard: false,\r\n        maxZoom: 21,\r\n        minZoom: 5\r\n        // trackResize: false\r\n      })\r\n        .on('click', ({ latlng }) => {\r\n          this.$router.push({\r\n            path: '/home/plotlist',\r\n            query: {\r\n              lat: this.pointLat || latlng.lat,\r\n              lng: this.pointLng || latlng.lng,\r\n              mapId: this.mapId,\r\n              mapType: this.mapType,\r\n              mapZoom: this.mapZoom\r\n            }\r\n          });\r\n        })\r\n        .on('resize', () => {\r\n          this.drawProvinceFn();\r\n        });\r\n      this.drawPolygon(district.features);\r\n\r\n      this.drawProvinceFn();\r\n    },\r\n\r\n    // 绘制轮廓\r\n    drawPolygon (features) {\r\n      features.forEach((item, index) => {\r\n        this.allpolygon[index] = L.geoJSON(item, {\r\n          style () {\r\n            return {\r\n              color: '#6fcbdf',\r\n              fillColor: '#009cba',\r\n              fillOpacity: 0.6,\r\n              fillRule: 'evenodd',\r\n              className: 'polygonbox',\r\n              lineJoin: 'miter',\r\n              weight: 1\r\n            };\r\n          }\r\n        }).addTo(this.map);\r\n      });\r\n    },\r\n\r\n    // 计算所有图形的中心点和zoom大小\r\n    drawProvinceFn () {\r\n      // 所有多边形居中\r\n      const allPointer = []; let zoom; let center;\r\n\r\n      this.allpolygon.forEach(item => {\r\n        const pb = item.getBounds();\r\n        allPointer.push([pb._southWest.lat, pb._southWest.lng]);\r\n        allPointer.push([pb._northEast.lat, pb._northEast.lng]);\r\n      });\r\n      // 获取所有板块集合的坐标\r\n      this.bigpolygon = L.polygon(allPointer, {}).getBounds();\r\n\r\n      zoom = this.map.getBoundsZoom(this.bigpolygon);\r\n\r\n      center = this.bigpolygon.getCenter();\r\n\r\n      this.map.setView(center, zoom);\r\n\r\n      // 添加卫星层\r\n      // ----zyj\r\n      // let This = this;\r\n      // if (this.areaid === \"310000\") {//上海\r\n      //   var wximgurl = require(\"../../assets/images/yaogan/weixing.png\");\r\n      //   imgOverlay = L.imageOverlay(wximgurl, this.bigpolygon, { interactive: true, zIndex: 998 }).addTo(this.map);\r\n      // } else\r\n      // let imgOverlay = null;\r\n      // console.log('添加卫星层');\r\n      // console.log('areaid:'+this.areaid);\r\n      // zyj----\r\n      if (this.areaid === '130529') { // 巨鹿\r\n        L.imageOverlay(\r\n          require('../../assets/images/yaogan/julu_weixing.png'),\r\n          this.bigpolygon,\r\n          {\r\n            interactive: true,\r\n            zIndex: 998\r\n          }).addTo(this.map);\r\n      }\r\n    },\r\n\r\n    // 叠加遥感卫星图\r\n    addRemoteImg (gisUrl) {\r\n      if (gisUrl) {\r\n        this.togglePolygon(false);\r\n        // 叠加遥感图层\r\n        if (!this.imageOverlay) {\r\n          this.imageOverlay = L.imageOverlay(gisUrl, this.bigpolygon, { interactive: true, zIndex: 999 });\r\n          this.imageOverlay.addTo(this.map);\r\n        } else {\r\n          this.imageOverlay.setUrl(gisUrl);\r\n        }\r\n      } else {\r\n        this.togglePolygon(true);\r\n        this.imageOverlay.setUrl('');\r\n      }\r\n    },\r\n    // 是否显示JSON绘制的图形\r\n    togglePolygon (isShow) {\r\n      this.allpolygon.forEach(item => {\r\n        item.setStyle({\r\n          weight: isShow ? 1 : 0,\r\n          fillOpacity: isShow ? 0.3 : 0\r\n        });\r\n      });\r\n    },\r\n\r\n    setAreaId () {\t// 获取区域名称\r\n      const govSubject = getStorage('govGovernmentSubjectVO');\r\n      if (!govSubject) {\r\n        return this.$router.replace({ path: '/login' });\r\n      }\r\n      switch (govSubject.subjectLevel) {\r\n        case 1:\r\n          this.areaid = govSubject.provinceId;\r\n          break;\r\n        case 2:\r\n          this.areaid = govSubject.cityId;\r\n          break;\r\n        default:\r\n          this.areaid = govSubject.countyId;\r\n          break;\r\n      }\r\n    },\r\n\r\n    // event 选择事件\r\n    selectChange (mapId) {\r\n      const targetItem = this.gisdata.filter(item => item.id === mapId);\r\n      const item = targetItem[0];\r\n      if (!item) return false;\r\n      setStorage('landSource_mapId', mapId);\r\n      this.gisName = item.gisName;\r\n      this.mapType = item.mapType;\r\n      this.mapZoom = item.zoom;\r\n      this.pointLat = item.pointLat;\r\n      this.pointLng = item.pointLng;\r\n      this.tulistr = item.demoImgUrl;\r\n      this.updatetime = item.dataUpdateTime;\r\n      this.addRemoteImg(item.gisImgUrl);\r\n    }\r\n  },\r\n  watch: {},\r\n  computed: {}\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n  .mapcontain {\r\n    position: relative;\r\n  }\r\n\r\n  .mapcontain {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  #mapcon {\r\n    width: 100%;\r\n    height: 90%;\r\n    margin-top: 3%;\r\n  }\r\n\r\n  .leaflet-container {\r\n    background: none;\r\n  }\r\n\r\n  .leaflet-container .leaflet-overlay-pane svg g {\r\n    position: relative;\r\n  }\r\n\r\n  .leaflet-container .leaflet-overlay-pane svg g div {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n  }\r\n\r\n  .box-main .tuli {\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: -4.5vh;\r\n    left: 5px;\r\n    max-width: 150px;\r\n  }\r\n\r\n  .box-main .tuli img {\r\n    max-width: 100%;\r\n  }\r\n\r\n  .box-main .updatetime {\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: -3.5vh;\r\n    width: 100%;\r\n    text-align: center;\r\n    font-size: 12px;\r\n    color: #00F6FF;\r\n    z-index: 999;\r\n  }\r\n\r\n  /deep/ .el-popper {\r\n    margin-right: 2px;\r\n    border-radius: 10px;\r\n  }\r\n\r\n  /deep/ .el-select-dropdown__item {\r\n    text-align: center;\r\n    color: #9DD1D7;\r\n  }\r\n\r\n  /deep/ .el-select-dropdown {\r\n    background: rgba(0, 0, 0, 0.8);\r\n    border: none;\r\n  }\r\n\r\n  /deep/ .el-popper .popper__arrow {\r\n    left: 49% !important;\r\n  }\r\n\r\n  /deep/ .el-select-dropdown__item.selected, /deep/ .el-select-dropdown__item.hover, /deep/ .el-select-dropdown__item:hover {\r\n    background: rgba(0, 246, 255, 0.18);\r\n    color: #00F6FF;\r\n  }\r\n\r\n  /deep/ .el-select {\r\n    margin: -47px auto 0;\r\n    width: 258px;\r\n    display: block;\r\n    height: 40px;\r\n  }\r\n\r\n  /deep/ .el-select .el-input .el-select__caret {\r\n    color: #00f7ff;\r\n  }\r\n\r\n  /deep/ .el-input--suffix .el-input__inner {\r\n    background: none;\r\n    border: none;\r\n    color: #00F6FF;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    text-align: center;\r\n    padding-right: 15px;\r\n    caret-color: transparent;\r\n    color: transparent;\r\n    text-shadow: 0 0 0 #00F6FF;\r\n  }\r\n\r\n  /deep/ .el-select .el-input__inner:focus {\r\n    color: #00F6FF;\r\n  }\r\n\r\n  /deep/ .el-popper[x-placement^=bottom] .popper__arrow::after, /deep/ .el-popper[x-placement^=bottom] .popper__arrow {\r\n    border-bottom-color: rgba(0, 0, 0, 0.8);\r\n  }\r\n\r\n  .noopts /deep/ .el-input__suffix {\r\n    display: none;\r\n  }\r\n\r\n  .noopts /deep/ .el-input--suffix .el-input__inner {\r\n    cursor: default;\r\n  }\r\n\r\n  /* zyj-2019-9-16-修改地图下拉框 */\r\n  .mapcontain >>> .el-select > .el-input {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-flow: row nowrap;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .mapcontain >>> .el-select .el-input--suffix .el-input__inner {\r\n    display: none;\r\n    width: 0;\r\n  }\r\n\r\n  .mapcontain >>> .el-select.noopts .el-input--suffix .el-input__inner {\r\n    display: block;\r\n    width: auto;\r\n  }\r\n\r\n  .mapcontain >>> .el-input__prefix, .mapcontain >>> .el-input__suffix {\r\n    position: inherit;\r\n  }\r\n\r\n  .mapcontain >>> .select-input {\r\n    color: #00F6FF;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    text-align: center;\r\n    padding-right: 15px;\r\n    caret-color: transparent;\r\n    color: transparent;\r\n    text-shadow: 0 0 0 #00F6FF;\r\n  }\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/landsource/mappart.vue"],"mappings":"AA2BA","sourceRoot":""}