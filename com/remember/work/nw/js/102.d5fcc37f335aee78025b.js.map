{"version":3,"file":"static/js/102.d5fcc37f335aee78025b.js","sources":["webpack:///src/recycle-bin/gmap-废弃.vue"],"sourcesContent":["<template>\n\t<!-- 基于高德地图和leaflet的地图下钻 -->\n\t<div>\n\t\t<div class=\"gmap\" id=\"gmap\" ref=\"gmap\"></div>\n\t</div>\n</template>\n\n<script>\nimport {getFeature} from '@/common/fn';\n\nexport default {\n\tname: 'gmap',\n\tdata() {\n\t\treturn {\n\t\t\tgmap: null,\n\t\t\tallPolygon: [],\n\t\t\t// 防止触发feature事件的时候触发了map上的事件，此变量用作开关\n\t\t\tisFeatureClick: false,\n\t\t\t// 记录当前下钻的adcode\n\t\t\tadCodes: [100000],\n\t\t\tsub: true\n\t\t};\n\t},\n\tmounted() {\n\t\tthis.$nextTick(() => {\n\t\t\tthis._initMap();\n\t\t});\n\t},\n\tmethods: {\n\t\t// 初始化地图\n\t\t_initMap() {\n\t\t\tthis.gmap = L.map(this.gmapEl, {\n\t\t\t\tcenter: [0, 0],\n\t\t\t\tzoom: 9,\n\t\t\t\tzoomSnap: 0.1,\n\t\t\t\tlayers: [],\n\t\t\t\tzoomControl: false,\n\t\t\t\tattributionControl: false,\n\t\t\t\tdragging: true,\n\t\t\t\ttouchZoom: false,\n\t\t\t\tscrollWheelZoom: true,\n\t\t\t\tdoubleClickZoom: false,\n\t\t\t\tboxZoom: false,\n\t\t\t\ttap: false,\n\t\t\t\tkeyboard: false,\n\t\t\t\tmaxZoom: 21,\n\t\t\t\tminZoom: 5\n\t\t\t}).on('click', e => {\n\t\t\t\tif (!this.isFeatureClick) {\n\t\t\t\t\t// console.log(\"gmap\", e);\n\t\t\t\t\t// console.log(this.removeCode());\n\t\t\t\t\tthis.drawPolygon(this.removeCode());\n\t\t\t\t}\n\t\t\t\tthis.isFeatureClick = false;\n\t\t\t});\n\t\t\tthis.drawPolygon(this.adCodes[0]);\n\t\t},\n\n\t\t// 绘制轮廓\n\t\tasync drawPolygon(areaId) {\n\t\t\t// 获取高德json\n\t\t\tconst district = await getFeature({areaId});\n\t\t\t// console.log(areaId);\n\t\t\tconst features = district.features;\n\t\t\tthis.sub = district.sub;\n\t\t\tthis.allPolygon.forEach(item => {\n\t\t\t\titem.remove();\n\t\t\t});\n\t\t\tthis.allPolygon = [];\n\t\t\tfeatures.forEach((item, index) => {\n\t\t\t\tthis.allPolygon[index] = L.geoJSON(item, {\n\t\t\t\t\tstyle() {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tcolor: '#ffc777',\n\t\t\t\t\t\t\tfillColor: '#47473b',\n\t\t\t\t\t\t\tfillOpacity: 0.6,\n\t\t\t\t\t\t\tfillRule: 'evenodd',\n\t\t\t\t\t\t\tclassName: 'polygonbox',\n\t\t\t\t\t\t\tlineJoin: 'miter',\n\t\t\t\t\t\t\tweight: 1\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t\t.on('click', ({latlng: targetLatlng, layer}) => {\n\t\t\t\t\t\tthis.isFeatureClick = true;\n\t\t\t\t\t\t// console.log(layer.feature.properties.adcode);\n\t\t\t\t\t\tthis.drawPolygon(layer.feature.properties.adcode);\n\t\t\t\t\t\tthis.addAdCode(layer.feature.properties.adcode);\n\t\t\t\t\t})\n\t\t\t\t\t.addTo(this.gmap);\n\t\t\t});\n\t\t\tthis.drawProvinceFn();\n\t\t},\n\n\t\t// 计算所有图形的中心点和zoom大小\n\t\tdrawProvinceFn() {\n\t\t\t// 所有多边形居中\n\t\t\tconst allPointer = [];\n\t\t\tlet zoom;\n\t\t\tlet center;\n\t\t\tlet bigPolygon;\n\n\t\t\tthis.allPolygon.forEach(item => {\n\t\t\t\tconst pb = item.getBounds();\n\t\t\t\tallPointer.push([pb._southWest.lat, pb._southWest.lng]);\n\t\t\t\tallPointer.push([pb._northEast.lat, pb._northEast.lng]);\n\t\t\t});\n\t\t\t// 获取所有板块集合的坐标\n\t\t\tbigPolygon = L.polygon(allPointer, {}).getBounds();\n\n\t\t\tzoom = this.gmap.getBoundsZoom(bigPolygon);\n\n\t\t\tcenter = bigPolygon.getCenter();\n\n\t\t\tthis.gmap.setView(center, zoom);\n\t\t},\n\n\t\t// 增加adCode\n\t\taddAdCode(adcode) {\n\t\t\tif (!this.sub) return false;\n\t\t\tthis.adCodes = [...this.adCodes, adcode];\n\t\t},\n\t\t// 删除adCode\n\t\tremoveCode() {\n\t\t\tif (this.adCodes.length > 1) {\n\t\t\t\tthis.adCodes.pop();\n\t\t\t\treturn this.adCodes.slice(-1)[0];\n\t\t\t} else {\n\t\t\t\treturn this.adCodes[0];\n\t\t\t}\n\t\t}\n\t},\n\tcomputed: {\n\t\tgmapEl() {\n\t\t\treturn this.$refs.gmap;\n\t\t}\n\t}\n};\n</script>\n\n<style scoped lang=\"less\">\n.gmap {\n\tposition: fixed;\n\ttop: 0;\n\tright: 0;\n\tbottom: 0;\n\tleft: 0;\n\tz-index: 9999;\n\tbackground-color: #000;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/recycle-bin/gmap-废弃.vue"],"mappings":"AAUA","sourceRoot":""}