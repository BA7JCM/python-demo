{"version":3,"file":"static/js/vendor.a58a24e107fad0188e1b.js","sources":["webpack:///./node_modules/_core-js@2.6.11@core-js/modules/_string-repeat.js","webpack:///./node_modules/_@better-scroll_pull-up@2.0.0-beta.6@@better-scroll/pull-up/dist/pull-up.esm.js","webpack:///./node_modules/_@better-scroll_core@2.0.0-beta.6@@better-scroll/core/dist/core.esm.js","webpack:///./node_modules/_@better-scroll_observe-dom@2.0.0-beta.6@@better-scroll/observe-dom/dist/observe-dom.esm.js","webpack:///./node_modules/_is-buffer@2.0.4@is-buffer/index.js","webpack:///./node_modules/_@better-scroll_scroll-bar@2.0.0-beta.6@@better-scroll/scroll-bar/dist/scroll-bar.esm.js","webpack:///./node_modules/_@better-scroll_mouse-wheel@2.0.0-beta.6@@better-scroll/mouse-wheel/dist/mouse-wheel.esm.js","webpack:///./node_modules/_js-cookie@2.2.1@js-cookie/src/js.cookie.js"],"sourcesContent":["'use strict';\nvar toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n\nmodule.exports = function repeat(count) {\n  var str = String(defined(this));\n  var res = '';\n  var n = toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError(\"Count can't be negative\");\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;\n  return res;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.6.11@core-js/modules/_string-repeat.js\n// module id = +HiE\n// module chunks = 139","/*!\n * better-scroll / pull-up\n * (c) 2016-2020 ustbhuangyi\n * Released under the MIT License.\n */\nvar sourcePrefix = 'plugins.pullUpLoad';\r\nvar propertiesMap = [\r\n    {\r\n        key: 'finishPullUp',\r\n        name: 'finish'\r\n    },\r\n    {\r\n        key: 'openPullUp',\r\n        name: 'open'\r\n    },\r\n    {\r\n        key: 'closePullUp',\r\n        name: 'close'\r\n    }\r\n];\r\nvar propertiesProxyConfig = propertiesMap.map(function (item) {\r\n    return {\r\n        key: item.key,\r\n        sourceKey: sourcePrefix + \".\" + item.name\r\n    };\r\n});\n\nvar PullUp = /** @class */ (function () {\r\n    function PullUp(bscroll) {\r\n        this.bscroll = bscroll;\r\n        this.watching = false;\r\n        if (bscroll.options.pullUpLoad) {\r\n            this._watch();\r\n        }\r\n        this.bscroll.registerType(['pullingUp']);\r\n        this.bscroll.proxy(propertiesProxyConfig);\r\n    }\r\n    PullUp.prototype._watch = function () {\r\n        if (this.watching) {\r\n            return;\r\n        }\r\n        // must watch scroll in real time\r\n        this.bscroll.options.probeType = 3 /* Realtime */;\r\n        this.watching = true;\r\n        this.bscroll.on('scroll', this._checkToEnd, this);\r\n    };\r\n    PullUp.prototype._checkToEnd = function (pos) {\r\n        var _this = this;\r\n        if (!this.bscroll.options.pullUpLoad) {\r\n            return;\r\n        }\r\n        var _a = this.bscroll.options\r\n            .pullUpLoad.threshold, threshold = _a === void 0 ? 0 : _a;\r\n        if (this.bscroll.movingDirectionY === 1 /* Positive */ &&\r\n            pos.y <= this.bscroll.maxScrollY + threshold) {\r\n            // reset pullupWatching status after scroll end to promise that trigger 'pullingUp' only once when pulling up\r\n            this.bscroll.once('scrollEnd', function () {\r\n                _this.watching = false;\r\n            });\r\n            this.bscroll.trigger('pullingUp');\r\n            this.bscroll.off('scroll', this._checkToEnd);\r\n        }\r\n    };\r\n    PullUp.prototype.finish = function () {\r\n        if (this.watching) {\r\n            this.bscroll.once('scrollEnd', this._watch, this);\r\n        }\r\n        else {\r\n            this._watch();\r\n        }\r\n    };\r\n    PullUp.prototype.open = function (config) {\r\n        if (config === void 0) { config = true; }\r\n        this.bscroll.options.pullUpLoad = config;\r\n        this._watch();\r\n    };\r\n    PullUp.prototype.close = function () {\r\n        this.bscroll.options.pullUpLoad = false;\r\n        if (!this.watching) {\r\n            return;\r\n        }\r\n        this.watching = false;\r\n        this.bscroll.off('scroll', this._checkToEnd);\r\n    };\r\n    PullUp.pluginName = 'pullUpLoad';\r\n    return PullUp;\r\n}());\n\nexport default PullUp;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_@better-scroll_pull-up@2.0.0-beta.6@@better-scroll/pull-up/dist/pull-up.esm.js\n// module id = MbNx\n// module chunks = 139","/*!\n * better-scroll / core\n * (c) 2016-2020 ustbhuangyi\n * Released under the MIT License.\n */\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nfunction warn(msg) {\r\n    console.error(\"[BScroll warn]: \" + msg);\r\n}\n\n// ssr support\r\nvar inBrowser = typeof window !== 'undefined';\r\nvar ua = inBrowser && navigator.userAgent.toLowerCase();\r\nvar isWeChatDevTools = ua && /wechatdevtools/.test(ua);\r\nvar isAndroid = ua && ua.indexOf('android') > 0;\n\nfunction getNow() {\r\n    return window.performance && window.performance.now && window.performance.timing\r\n        ? window.performance.now() + window.performance.timing.navigationStart\r\n        : +new Date();\r\n}\r\nfunction extend(target) {\r\n    var rest = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        rest[_i - 1] = arguments[_i];\r\n    }\r\n    for (var i = 0; i < rest.length; i++) {\r\n        var source = rest[i];\r\n        for (var key in source) {\r\n            target[key] = source[key];\r\n        }\r\n    }\r\n    return target;\r\n}\r\nfunction isUndef(v) {\r\n    return v === undefined || v === null;\r\n}\n\nvar elementStyle = (inBrowser &&\r\n    document.createElement('div').style);\r\nvar vendor = (function () {\r\n    if (!inBrowser) {\r\n        return false;\r\n    }\r\n    var transformNames = {\r\n        webkit: 'webkitTransform',\r\n        Moz: 'MozTransform',\r\n        O: 'OTransform',\r\n        ms: 'msTransform',\r\n        standard: 'transform'\r\n    };\r\n    for (var key in transformNames) {\r\n        if (elementStyle[transformNames[key]] !== undefined) {\r\n            return key;\r\n        }\r\n    }\r\n    return false;\r\n})();\r\nfunction prefixStyle(style) {\r\n    if (vendor === false) {\r\n        return style;\r\n    }\r\n    if (vendor === 'standard') {\r\n        if (style === 'transitionEnd') {\r\n            return 'transitionend';\r\n        }\r\n        return style;\r\n    }\r\n    return vendor + style.charAt(0).toUpperCase() + style.substr(1);\r\n}\r\nfunction getElement(el) {\r\n    return (typeof el === 'string'\r\n        ? document.querySelector(el)\r\n        : el);\r\n}\r\nfunction addEvent(el, type, fn, capture) {\r\n    el.addEventListener(type, fn, {\r\n        passive: false,\r\n        capture: !!capture\r\n    });\r\n}\r\nfunction removeEvent(el, type, fn, capture) {\r\n    el.removeEventListener(type, fn, {\r\n        capture: !!capture\r\n    });\r\n}\r\nfunction offset(el) {\r\n    var left = 0;\r\n    var top = 0;\r\n    while (el) {\r\n        left -= el.offsetLeft;\r\n        top -= el.offsetTop;\r\n        el = el.offsetParent;\r\n    }\r\n    return {\r\n        left: left,\r\n        top: top\r\n    };\r\n}\r\nvar cssVendor = vendor && vendor !== 'standard' ? '-' + vendor.toLowerCase() + '-' : '';\r\nvar transform = prefixStyle('transform');\r\nvar transition = prefixStyle('transition');\r\nvar hasPerspective = inBrowser && prefixStyle('perspective') in elementStyle;\r\n// fix issue #361\r\nvar hasTouch = inBrowser && ('ontouchstart' in window || isWeChatDevTools);\r\nvar hasTransition = inBrowser && transition in elementStyle;\r\nvar style = {\r\n    transform: transform,\r\n    transition: transition,\r\n    transitionTimingFunction: prefixStyle('transitionTimingFunction'),\r\n    transitionDuration: prefixStyle('transitionDuration'),\r\n    transitionDelay: prefixStyle('transitionDelay'),\r\n    transformOrigin: prefixStyle('transformOrigin'),\r\n    transitionEnd: prefixStyle('transitionEnd')\r\n};\r\nvar eventTypeMap = {\r\n    touchstart: 1,\r\n    touchmove: 1,\r\n    touchend: 1,\r\n    mousedown: 2,\r\n    mousemove: 2,\r\n    mouseup: 2\r\n};\r\nfunction getRect(el) {\r\n    if (el instanceof window.SVGElement) {\r\n        var rect = el.getBoundingClientRect();\r\n        return {\r\n            top: rect.top,\r\n            left: rect.left,\r\n            width: rect.width,\r\n            height: rect.height\r\n        };\r\n    }\r\n    else {\r\n        return {\r\n            top: el.offsetTop,\r\n            left: el.offsetLeft,\r\n            width: el.offsetWidth,\r\n            height: el.offsetHeight\r\n        };\r\n    }\r\n}\r\nfunction preventDefaultExceptionFn(el, exceptions) {\r\n    for (var i in exceptions) {\r\n        if (exceptions[i].test(el[i])) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nvar tagExceptionFn = preventDefaultExceptionFn;\r\nfunction tap(e, eventName) {\r\n    var ev = document.createEvent('Event');\r\n    ev.initEvent(eventName, true, true);\r\n    ev.pageX = e.pageX;\r\n    ev.pageY = e.pageY;\r\n    e.target.dispatchEvent(ev);\r\n}\r\nfunction click(e, event) {\r\n    if (event === void 0) { event = 'click'; }\r\n    var eventSource;\r\n    if (e.type === 'mouseup') {\r\n        eventSource = e;\r\n    }\r\n    else if (e.type === 'touchend' || e.type === 'touchcancel') {\r\n        eventSource = e.changedTouches[0];\r\n    }\r\n    var posSrc = {};\r\n    if (eventSource) {\r\n        posSrc.screenX = eventSource.screenX || 0;\r\n        posSrc.screenY = eventSource.screenY || 0;\r\n        posSrc.clientX = eventSource.clientX || 0;\r\n        posSrc.clientY = eventSource.clientY || 0;\r\n    }\r\n    var ev;\r\n    var bubbles = true;\r\n    var cancelable = true;\r\n    if (typeof MouseEvent !== 'undefined') {\r\n        try {\r\n            ev = new MouseEvent(event, extend({\r\n                bubbles: bubbles,\r\n                cancelable: cancelable\r\n            }, posSrc));\r\n        }\r\n        catch (e) {\r\n            createEvent();\r\n        }\r\n    }\r\n    else {\r\n        createEvent();\r\n    }\r\n    function createEvent() {\r\n        ev = document.createEvent('Event');\r\n        ev.initEvent(event, bubbles, cancelable);\r\n        extend(ev, posSrc);\r\n    }\r\n    // forwardedTouchEvent set to true in case of the conflict with fastclick\r\n    ev.forwardedTouchEvent = true;\r\n    ev._constructed = true;\r\n    e.target.dispatchEvent(ev);\r\n}\r\nfunction dblclick(e) {\r\n    click(e, 'dblclick');\r\n}\n\nvar ease = {\r\n    // easeOutQuint\r\n    swipe: {\r\n        style: 'cubic-bezier(0.23, 1, 0.32, 1)',\r\n        fn: function (t) {\r\n            return 1 + --t * t * t * t * t;\r\n        }\r\n    },\r\n    // easeOutQuard\r\n    swipeBounce: {\r\n        style: 'cubic-bezier(0.25, 0.46, 0.45, 0.94)',\r\n        fn: function (t) {\r\n            return t * (2 - t);\r\n        }\r\n    },\r\n    // easeOutQuart\r\n    bounce: {\r\n        style: 'cubic-bezier(0.165, 0.84, 0.44, 1)',\r\n        fn: function (t) {\r\n            return 1 - --t * t * t * t;\r\n        }\r\n    }\r\n};\n\nvar DEFAULT_INTERVAL = 100 / 60;\r\nvar windowCompat = inBrowser && window;\r\nfunction noop() { }\r\nvar requestAnimationFrame = (function () {\r\n    if (!inBrowser) {\r\n        /* istanbul ignore if */\r\n        return noop;\r\n    }\r\n    return (windowCompat.requestAnimationFrame ||\r\n        windowCompat.webkitRequestAnimationFrame ||\r\n        windowCompat.mozRequestAnimationFrame ||\r\n        windowCompat.oRequestAnimationFrame ||\r\n        // if all else fails, use setTimeout\r\n        function (callback) {\r\n            return window.setTimeout(callback, (callback.interval || DEFAULT_INTERVAL) / 2); // make interval as precise as possible.\r\n        });\r\n})();\r\nvar cancelAnimationFrame = (function () {\r\n    if (!inBrowser) {\r\n        /* istanbul ignore if */\r\n        return noop;\r\n    }\r\n    return (windowCompat.cancelAnimationFrame ||\r\n        windowCompat.webkitCancelAnimationFrame ||\r\n        windowCompat.mozCancelAnimationFrame ||\r\n        windowCompat.oCancelAnimationFrame ||\r\n        function (id) {\r\n            window.clearTimeout(id);\r\n        });\r\n})();\n\nvar noop$1 = function (val) { };\r\nvar sharedPropertyDefinition = {\r\n    enumerable: true,\r\n    configurable: true,\r\n    get: noop$1,\r\n    set: noop$1\r\n};\r\nvar getProperty = function (obj, key) {\r\n    var keys = key.split('.');\r\n    for (var i = 0; i < keys.length - 1; i++) {\r\n        obj = obj[keys[i]];\r\n        if (typeof obj !== 'object' || !obj)\r\n            return;\r\n    }\r\n    var lastKey = keys.pop();\r\n    if (typeof obj[lastKey] === 'function') {\r\n        return function () {\r\n            return obj[lastKey].apply(obj, arguments);\r\n        };\r\n    }\r\n    else {\r\n        return obj[lastKey];\r\n    }\r\n};\r\nvar setProperty = function (obj, key, value) {\r\n    var keys = key.split('.');\r\n    var temp;\r\n    for (var i = 0; i < keys.length - 1; i++) {\r\n        temp = keys[i];\r\n        if (!obj[temp])\r\n            obj[temp] = {};\r\n        obj = obj[temp];\r\n    }\r\n    obj[keys.pop()] = value;\r\n};\r\nfunction propertiesProxy(target, sourceKey, key) {\r\n    sharedPropertyDefinition.get = function proxyGetter() {\r\n        return getProperty(this, sourceKey);\r\n    };\r\n    sharedPropertyDefinition.set = function proxySetter(val) {\r\n        setProperty(this, sourceKey, val);\r\n    };\r\n    Object.defineProperty(target, key, sharedPropertyDefinition);\r\n}\n\nvar EventEmitter = /** @class */ (function () {\r\n    function EventEmitter(names) {\r\n        this.events = {};\r\n        this.eventTypes = {};\r\n        this.registerType(names);\r\n    }\r\n    EventEmitter.prototype.on = function (type, fn, context) {\r\n        if (context === void 0) { context = this; }\r\n        this.hasType(type);\r\n        if (!this.events[type]) {\r\n            this.events[type] = [];\r\n        }\r\n        this.events[type].push([fn, context]);\r\n        return this;\r\n    };\r\n    EventEmitter.prototype.once = function (type, fn, context) {\r\n        var _this = this;\r\n        if (context === void 0) { context = this; }\r\n        this.hasType(type);\r\n        var magic = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            _this.off(type, magic);\r\n            fn.apply(context, args);\r\n        };\r\n        magic.fn = fn;\r\n        this.on(type, magic);\r\n        return this;\r\n    };\r\n    EventEmitter.prototype.off = function (type, fn) {\r\n        if (!type && !fn) {\r\n            this.events = {};\r\n            return this;\r\n        }\r\n        if (type) {\r\n            this.hasType(type);\r\n            if (!fn) {\r\n                this.events[type] = [];\r\n                return this;\r\n            }\r\n            var events = this.events[type];\r\n            if (!events) {\r\n                return this;\r\n            }\r\n            var count = events.length;\r\n            while (count--) {\r\n                if (events[count][0] === fn ||\r\n                    (events[count][0] && events[count][0].fn === fn)) {\r\n                    events.splice(count, 1);\r\n                }\r\n            }\r\n            return this;\r\n        }\r\n    };\r\n    EventEmitter.prototype.trigger = function (type) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        this.hasType(type);\r\n        var events = this.events[type];\r\n        if (!events) {\r\n            return;\r\n        }\r\n        var len = events.length;\r\n        var eventsCopy = events.slice();\r\n        var ret;\r\n        for (var i = 0; i < len; i++) {\r\n            var event_1 = eventsCopy[i];\r\n            var fn = event_1[0], context = event_1[1];\r\n            if (fn) {\r\n                ret = fn.apply(context, args);\r\n                if (ret === true) {\r\n                    return ret;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.registerType = function (names) {\r\n        var _this = this;\r\n        names.forEach(function (type) {\r\n            _this.eventTypes[type] = type;\r\n        });\r\n    };\r\n    EventEmitter.prototype.destroy = function () {\r\n        this.events = {};\r\n        this.eventTypes = {};\r\n    };\r\n    EventEmitter.prototype.hasType = function (type) {\r\n        var types = this.eventTypes;\r\n        var isType = types[type] === type;\r\n        if (!isType) {\r\n            warn(\"EventEmitter has used unknown event type: \\\"\" + type + \"\\\", should be oneof [\" +\r\n                (\"\" + Object.keys(types).map(function (_) { return JSON.stringify(_); })) +\r\n                \"]\");\r\n        }\r\n    };\r\n    return EventEmitter;\r\n}());\r\nvar EventRegister = /** @class */ (function () {\r\n    function EventRegister(wrapper, events) {\r\n        this.wrapper = wrapper;\r\n        this.events = events;\r\n        this.addDOMEvents();\r\n    }\r\n    EventRegister.prototype.destroy = function () {\r\n        this.removeDOMEvents();\r\n        this.events = [];\r\n    };\r\n    EventRegister.prototype.addDOMEvents = function () {\r\n        this.handleDOMEvents(addEvent);\r\n    };\r\n    EventRegister.prototype.removeDOMEvents = function () {\r\n        this.handleDOMEvents(removeEvent);\r\n    };\r\n    EventRegister.prototype.handleDOMEvents = function (eventOperation) {\r\n        var _this = this;\r\n        var wrapper = this.wrapper;\r\n        this.events.forEach(function (event) {\r\n            eventOperation(wrapper, event.name, _this, !!event.capture);\r\n        });\r\n    };\r\n    EventRegister.prototype.handleEvent = function (e) {\r\n        var eventType = e.type;\r\n        this.events.some(function (event) {\r\n            if (event.name === eventType) {\r\n                event.handler(e);\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n    };\r\n    return EventRegister;\r\n}());\n\nvar Options = /** @class */ (function () {\r\n    function Options() {\r\n        this.startX = 0;\r\n        this.startY = 0;\r\n        this.scrollX = false;\r\n        this.scrollY = true;\r\n        this.freeScroll = false;\r\n        this.directionLockThreshold = 5;\r\n        this.eventPassthrough = \"\" /* None */;\r\n        this.click = false;\r\n        this.dblclick = false;\r\n        this.tap = '';\r\n        this.bounce = {\r\n            top: true,\r\n            bottom: true,\r\n            left: true,\r\n            right: true\r\n        };\r\n        this.bounceTime = 800;\r\n        this.momentum = true;\r\n        this.momentumLimitTime = 300;\r\n        this.momentumLimitDistance = 15;\r\n        this.swipeTime = 2500;\r\n        this.swipeBounceTime = 500;\r\n        this.deceleration = 0.0015;\r\n        this.flickLimitTime = 200;\r\n        this.flickLimitDistance = 100;\r\n        this.resizePolling = 60;\r\n        this.probeType = 0 /* Default */;\r\n        this.stopPropagation = false;\r\n        this.preventDefault = true;\r\n        this.preventDefaultException = {\r\n            tagName: /^(INPUT|TEXTAREA|BUTTON|SELECT|AUDIO)$/\r\n        };\r\n        this.tagException = {\r\n            tagName: /^TEXTAREA$/\r\n        };\r\n        this.HWCompositing = true;\r\n        this.useTransition = true;\r\n        this.bindToWrapper = false;\r\n        this.disableMouse = hasTouch;\r\n        this.disableTouch = !hasTouch;\r\n        this.autoBlur = true;\r\n    }\r\n    Options.prototype.merge = function (options) {\r\n        if (!options)\r\n            return this;\r\n        for (var key in options) {\r\n            this[key] = options[key];\r\n        }\r\n        return this;\r\n    };\r\n    Options.prototype.process = function () {\r\n        this.translateZ =\r\n            this.HWCompositing && hasPerspective ? ' translateZ(0)' : '';\r\n        this.useTransition = this.useTransition && hasTransition;\r\n        this.preventDefault = !this.eventPassthrough && this.preventDefault;\r\n        this.resolveBounce();\r\n        // If you want eventPassthrough I have to lock one of the axes\r\n        this.scrollX =\r\n            this.eventPassthrough === \"horizontal\" /* Horizontal */\r\n                ? false\r\n                : this.scrollX;\r\n        this.scrollY =\r\n            this.eventPassthrough === \"vertical\" /* Vertical */ ? false : this.scrollY;\r\n        // With eventPassthrough we also need lockDirection mechanism\r\n        this.freeScroll = this.freeScroll && !this.eventPassthrough;\r\n        // force true when freeScroll is true\r\n        this.scrollX = this.freeScroll ? true : this.scrollX;\r\n        this.scrollY = this.freeScroll ? true : this.scrollY;\r\n        this.directionLockThreshold = this.eventPassthrough\r\n            ? 0\r\n            : this.directionLockThreshold;\r\n        return this;\r\n    };\r\n    Options.prototype.resolveBounce = function () {\r\n        var directions = ['top', 'right', 'bottom', 'left'];\r\n        var bounce = this.bounce;\r\n        if (bounce === false || bounce === true) {\r\n            this.bounce = makeMap(directions, bounce);\r\n        }\r\n    };\r\n    return Options;\r\n}());\r\nfunction makeMap(keys, val) {\r\n    if (val === void 0) { val = true; }\r\n    var ret = {};\r\n    keys.forEach(function (key) {\r\n        ret[key] = val;\r\n    });\r\n    return ret;\r\n}\n\nvar ActionsHandler = /** @class */ (function () {\r\n    function ActionsHandler(wrapper, options) {\r\n        this.wrapper = wrapper;\r\n        this.options = options;\r\n        this.hooks = new EventEmitter([\r\n            'beforeStart',\r\n            'start',\r\n            'move',\r\n            'end',\r\n            'click'\r\n        ]);\r\n        this.handleDOMEvents();\r\n    }\r\n    ActionsHandler.prototype.handleDOMEvents = function () {\r\n        var _a = this.options, bindToWrapper = _a.bindToWrapper, disableMouse = _a.disableMouse, disableTouch = _a.disableTouch, click = _a.click;\r\n        var wrapper = this.wrapper;\r\n        var target = bindToWrapper ? wrapper : window;\r\n        var wrapperEvents = [];\r\n        var targetEvents = [];\r\n        var shouldRegisterTouch = hasTouch && !disableTouch;\r\n        var shouldRegisterMouse = !disableMouse;\r\n        if (click) {\r\n            wrapperEvents.push({\r\n                name: 'click',\r\n                handler: this.click.bind(this),\r\n                capture: true\r\n            });\r\n        }\r\n        if (shouldRegisterTouch) {\r\n            wrapperEvents.push({\r\n                name: 'touchstart',\r\n                handler: this.start.bind(this)\r\n            });\r\n            targetEvents.push({\r\n                name: 'touchmove',\r\n                handler: this.move.bind(this)\r\n            }, {\r\n                name: 'touchend',\r\n                handler: this.end.bind(this)\r\n            }, {\r\n                name: 'touchcancel',\r\n                handler: this.end.bind(this)\r\n            });\r\n        }\r\n        if (shouldRegisterMouse) {\r\n            wrapperEvents.push({\r\n                name: 'mousedown',\r\n                handler: this.start.bind(this)\r\n            });\r\n            targetEvents.push({\r\n                name: 'mousemove',\r\n                handler: this.move.bind(this)\r\n            }, {\r\n                name: 'mouseup',\r\n                handler: this.end.bind(this)\r\n            });\r\n        }\r\n        this.wrapperEventRegister = new EventRegister(wrapper, wrapperEvents);\r\n        this.targetEventRegister = new EventRegister(target, targetEvents);\r\n    };\r\n    ActionsHandler.prototype.beforeHandler = function (e, type) {\r\n        var _a = this.options, preventDefault = _a.preventDefault, stopPropagation = _a.stopPropagation, preventDefaultException = _a.preventDefaultException;\r\n        var preventDefaultConditions = {\r\n            start: function () {\r\n                return (preventDefault &&\r\n                    !preventDefaultExceptionFn(e.target, preventDefaultException));\r\n            },\r\n            end: function () {\r\n                return (preventDefault &&\r\n                    !preventDefaultExceptionFn(e.target, preventDefaultException));\r\n            },\r\n            move: function () {\r\n                return preventDefault;\r\n            }\r\n        };\r\n        if (preventDefaultConditions[type]()) {\r\n            e.preventDefault();\r\n        }\r\n        if (stopPropagation) {\r\n            e.stopPropagation();\r\n        }\r\n    };\r\n    ActionsHandler.prototype.setInitiated = function (type) {\r\n        if (type === void 0) { type = 0; }\r\n        this.initiated = type;\r\n    };\r\n    ActionsHandler.prototype.start = function (e) {\r\n        var _eventType = eventTypeMap[e.type];\r\n        if (this.initiated && this.initiated !== _eventType) {\r\n            return;\r\n        }\r\n        this.setInitiated(_eventType);\r\n        // if textarea or other html tags in options.tagException is manipulated\r\n        // do not make bs scroll\r\n        if (tagExceptionFn(e.target, this.options.tagException)) {\r\n            this.setInitiated();\r\n            return;\r\n        }\r\n        // no mouse left button\r\n        if (_eventType === 2 /* Mouse */ && e.button !== 0 /* Left */)\r\n            return;\r\n        if (this.hooks.trigger(this.hooks.eventTypes.beforeStart, e)) {\r\n            return;\r\n        }\r\n        this.beforeHandler(e, 'start');\r\n        var point = (e.touches ? e.touches[0] : e);\r\n        this.pointX = point.pageX;\r\n        this.pointY = point.pageY;\r\n        this.hooks.trigger(this.hooks.eventTypes.start, e);\r\n    };\r\n    ActionsHandler.prototype.move = function (e) {\r\n        if (eventTypeMap[e.type] !== this.initiated) {\r\n            return;\r\n        }\r\n        this.beforeHandler(e, 'move');\r\n        var point = (e.touches ? e.touches[0] : e);\r\n        var deltaX = point.pageX - this.pointX;\r\n        var deltaY = point.pageY - this.pointY;\r\n        this.pointX = point.pageX;\r\n        this.pointY = point.pageY;\r\n        if (this.hooks.trigger(this.hooks.eventTypes.move, {\r\n            deltaX: deltaX,\r\n            deltaY: deltaY,\r\n            e: e\r\n        })) {\r\n            return;\r\n        }\r\n        // auto end when out of wrapper\r\n        var scrollLeft = document.documentElement.scrollLeft ||\r\n            window.pageXOffset ||\r\n            document.body.scrollLeft;\r\n        var scrollTop = document.documentElement.scrollTop ||\r\n            window.pageYOffset ||\r\n            document.body.scrollTop;\r\n        var pX = this.pointX - scrollLeft;\r\n        var pY = this.pointY - scrollTop;\r\n        if (pX >\r\n            document.documentElement.clientWidth -\r\n                this.options.momentumLimitDistance ||\r\n            pX < this.options.momentumLimitDistance ||\r\n            pY < this.options.momentumLimitDistance ||\r\n            pY >\r\n                document.documentElement.clientHeight -\r\n                    this.options.momentumLimitDistance) {\r\n            this.end(e);\r\n        }\r\n    };\r\n    ActionsHandler.prototype.end = function (e) {\r\n        if (eventTypeMap[e.type] !== this.initiated) {\r\n            return;\r\n        }\r\n        this.setInitiated();\r\n        this.beforeHandler(e, 'end');\r\n        this.hooks.trigger(this.hooks.eventTypes.end, e);\r\n    };\r\n    ActionsHandler.prototype.click = function (e) {\r\n        this.hooks.trigger(this.hooks.eventTypes.click, e);\r\n    };\r\n    ActionsHandler.prototype.destroy = function () {\r\n        this.wrapperEventRegister.destroy();\r\n        this.targetEventRegister.destroy();\r\n        this.hooks.destroy();\r\n    };\r\n    return ActionsHandler;\r\n}());\n\nvar translaterMetaData = {\r\n    x: ['translateX', 'px'],\r\n    y: ['translateY', 'px']\r\n};\r\nvar Translater = /** @class */ (function () {\r\n    function Translater(content) {\r\n        this.content = content;\r\n        this.style = content.style;\r\n        this.hooks = new EventEmitter(['beforeTranslate', 'translate']);\r\n    }\r\n    Translater.prototype.getComputedPosition = function () {\r\n        var cssStyle = window.getComputedStyle(this.content, null);\r\n        var matrix = cssStyle[style.transform].split(')')[0].split(', ');\r\n        var x = +(matrix[12] || matrix[4]);\r\n        var y = +(matrix[13] || matrix[5]);\r\n        return {\r\n            x: x,\r\n            y: y\r\n        };\r\n    };\r\n    Translater.prototype.translate = function (point) {\r\n        var transformStyle = [];\r\n        Object.keys(point).forEach(function (key) {\r\n            if (!translaterMetaData[key]) {\r\n                return;\r\n            }\r\n            var transformFnName = translaterMetaData[key][0];\r\n            if (transformFnName) {\r\n                var transformFnArgUnit = translaterMetaData[key][1];\r\n                var transformFnArg = point[key];\r\n                transformStyle.push(transformFnName + \"(\" + transformFnArg + transformFnArgUnit + \")\");\r\n            }\r\n        });\r\n        this.hooks.trigger(this.hooks.eventTypes.beforeTranslate, transformStyle, point);\r\n        this.style[style.transform] = transformStyle.join(' ');\r\n        this.hooks.trigger(this.hooks.eventTypes.translate, point);\r\n    };\r\n    Translater.prototype.destroy = function () {\r\n        this.hooks.destroy();\r\n    };\r\n    return Translater;\r\n}());\n\nvar Base = /** @class */ (function () {\r\n    function Base(content, translater, options) {\r\n        this.content = content;\r\n        this.translater = translater;\r\n        this.options = options;\r\n        this.hooks = new EventEmitter([\r\n            'move',\r\n            'end',\r\n            'beforeForceStop',\r\n            'forceStop',\r\n            'time',\r\n            'timeFunction'\r\n        ]);\r\n        this.style = content.style;\r\n    }\r\n    Base.prototype.translate = function (endPoint) {\r\n        this.translater.translate(endPoint);\r\n    };\r\n    Base.prototype.setPending = function (pending) {\r\n        this.pending = pending;\r\n    };\r\n    Base.prototype.setForceStopped = function (forceStopped) {\r\n        this.forceStopped = forceStopped;\r\n    };\r\n    Base.prototype.destroy = function () {\r\n        this.hooks.destroy();\r\n        cancelAnimationFrame(this.timer);\r\n    };\r\n    return Base;\r\n}());\n\nvar Transition = /** @class */ (function (_super) {\r\n    __extends(Transition, _super);\r\n    function Transition() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Transition.prototype.startProbe = function () {\r\n        var _this = this;\r\n        var probe = function () {\r\n            var pos = _this.translater.getComputedPosition();\r\n            _this.hooks.trigger(_this.hooks.eventTypes.move, pos);\r\n            // excute when transition ends\r\n            if (!_this.pending) {\r\n                _this.hooks.trigger(_this.hooks.eventTypes.end, pos);\r\n                return;\r\n            }\r\n            _this.timer = requestAnimationFrame(probe);\r\n        };\r\n        cancelAnimationFrame(this.timer);\r\n        this.timer = requestAnimationFrame(probe);\r\n    };\r\n    Transition.prototype.transitionTime = function (time) {\r\n        if (time === void 0) { time = 0; }\r\n        this.style[style.transitionDuration] = time + 'ms';\r\n        this.hooks.trigger(this.hooks.eventTypes.time, time);\r\n    };\r\n    Transition.prototype.transitionTimingFunction = function (easing) {\r\n        this.style[style.transitionTimingFunction] = easing;\r\n        this.hooks.trigger(this.hooks.eventTypes.timeFunction, easing);\r\n    };\r\n    Transition.prototype.move = function (startPoint, endPoint, time, easingFn, isSlient) {\r\n        this.setPending(time > 0 && (startPoint.x !== endPoint.x || startPoint.y !== endPoint.y));\r\n        this.transitionTimingFunction(easingFn);\r\n        this.transitionTime(time);\r\n        this.translate(endPoint);\r\n        if (time && this.options.probeType === 3 /* Realtime */) {\r\n            this.startProbe();\r\n        }\r\n        // if we change content's transformY in a tick\r\n        // such as: 0 -> 50px -> 0\r\n        // transitionend will not be triggered\r\n        // so we forceupdate by reflow\r\n        if (!time) {\r\n            this._reflow = this.content.offsetHeight;\r\n        }\r\n        // no need to dispatch move and end when slient\r\n        if (!time && !isSlient) {\r\n            this.hooks.trigger(this.hooks.eventTypes.move, endPoint);\r\n            this.hooks.trigger(this.hooks.eventTypes.end, endPoint);\r\n        }\r\n    };\r\n    Transition.prototype.stop = function () {\r\n        // still in transition\r\n        if (this.pending) {\r\n            this.setPending(false);\r\n            cancelAnimationFrame(this.timer);\r\n            var _a = this.translater.getComputedPosition(), x = _a.x, y = _a.y;\r\n            this.transitionTime();\r\n            this.translate({ x: x, y: y });\r\n            this.setForceStopped(true);\r\n            if (this.hooks.trigger(this.hooks.eventTypes.beforeForceStop, { x: x, y: y })) {\r\n                return;\r\n            }\r\n            this.hooks.trigger(this.hooks.eventTypes.forceStop, { x: x, y: y });\r\n        }\r\n    };\r\n    return Transition;\r\n}(Base));\n\nvar Animation = /** @class */ (function (_super) {\r\n    __extends(Animation, _super);\r\n    function Animation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Animation.prototype.move = function (startPoint, endPoint, time, easingFn, isSlient) {\r\n        // time is 0\r\n        if (!time) {\r\n            this.translate(endPoint);\r\n            // if we change content's transformY in a tick\r\n            // such as: 0 -> 50px -> 0\r\n            // transitionend will not be triggered\r\n            // so we forceupdate by reflow\r\n            this._reflow = this.content.offsetHeight;\r\n            // no need to dispatch move and end when slient\r\n            if (isSlient)\r\n                return;\r\n            this.hooks.trigger(this.hooks.eventTypes.move, endPoint);\r\n            this.hooks.trigger(this.hooks.eventTypes.end, endPoint);\r\n            return;\r\n        }\r\n        this.animate(startPoint, endPoint, time, easingFn);\r\n    };\r\n    Animation.prototype.animate = function (startPoint, endPoint, duration, easingFn) {\r\n        var _this = this;\r\n        var startTime = getNow();\r\n        var destTime = startTime + duration;\r\n        var step = function () {\r\n            var now = getNow();\r\n            // js animation end\r\n            if (now >= destTime) {\r\n                _this.translate(endPoint);\r\n                _this.hooks.trigger(_this.hooks.eventTypes.move, endPoint);\r\n                _this.hooks.trigger(_this.hooks.eventTypes.end, endPoint);\r\n                return;\r\n            }\r\n            now = (now - startTime) / duration;\r\n            var easing = easingFn(now);\r\n            var newPoint = {};\r\n            Object.keys(endPoint).forEach(function (key) {\r\n                var startValue = startPoint[key];\r\n                var endValue = endPoint[key];\r\n                newPoint[key] = (endValue - startValue) * easing + startValue;\r\n            });\r\n            _this.translate(newPoint);\r\n            if (_this.pending) {\r\n                _this.timer = requestAnimationFrame(step);\r\n            }\r\n            if (_this.options.probeType === 3 /* Realtime */) {\r\n                _this.hooks.trigger(_this.hooks.eventTypes.move, newPoint);\r\n            }\r\n        };\r\n        this.setPending(true);\r\n        cancelAnimationFrame(this.timer);\r\n        step();\r\n    };\r\n    Animation.prototype.stop = function () {\r\n        // still in requestFrameAnimation\r\n        if (this.pending) {\r\n            this.setPending(false);\r\n            cancelAnimationFrame(this.timer);\r\n            var pos = this.translater.getComputedPosition();\r\n            this.setForceStopped(true);\r\n            if (this.hooks.trigger(this.hooks.eventTypes.beforeForceStop, pos)) {\r\n                return;\r\n            }\r\n            this.hooks.trigger(this.hooks.eventTypes.forceStop, pos);\r\n        }\r\n    };\r\n    return Animation;\r\n}(Base));\n\nfunction createAnimater(element, translater, options) {\r\n    var useTransition = options.useTransition;\r\n    var animaterOptions = {};\r\n    Object.defineProperty(animaterOptions, 'probeType', {\r\n        enumerable: true,\r\n        configurable: false,\r\n        get: function () {\r\n            return options.probeType;\r\n        }\r\n    });\r\n    if (useTransition) {\r\n        return new Transition(element, translater, animaterOptions);\r\n    }\r\n    else {\r\n        return new Animation(element, translater, animaterOptions);\r\n    }\r\n}\n\nvar Behavior = /** @class */ (function () {\r\n    function Behavior(wrapper, options) {\r\n        this.wrapper = wrapper;\r\n        this.options = options;\r\n        this.hooks = new EventEmitter(['momentum', 'end']);\r\n        this.content = this.wrapper.children[0];\r\n        this.currentPos = 0;\r\n        this.startPos = 0;\r\n    }\r\n    Behavior.prototype.start = function () {\r\n        this.direction = 0 /* Default */;\r\n        this.movingDirection = 0 /* Default */;\r\n        this.dist = 0;\r\n    };\r\n    Behavior.prototype.move = function (delta) {\r\n        delta = this.hasScroll ? delta : 0;\r\n        this.movingDirection =\r\n            delta > 0\r\n                ? -1 /* Negative */\r\n                : delta < 0\r\n                    ? 1 /* Positive */\r\n                    : 0 /* Default */;\r\n        var newPos = this.currentPos + delta;\r\n        // Slow down or stop if outside of the boundaries\r\n        if (newPos > this.minScrollPos || newPos < this.maxScrollPos) {\r\n            if ((newPos > this.minScrollPos && this.options.bounces[0]) ||\r\n                (newPos < this.maxScrollPos && this.options.bounces[1])) {\r\n                newPos = this.currentPos + delta / 3;\r\n            }\r\n            else {\r\n                newPos =\r\n                    newPos > this.minScrollPos ? this.minScrollPos : this.maxScrollPos;\r\n            }\r\n        }\r\n        return newPos;\r\n    };\r\n    Behavior.prototype.end = function (duration) {\r\n        var momentumInfo = {\r\n            duration: 0\r\n        };\r\n        var absDist = Math.abs(this.currentPos - this.startPos);\r\n        // start momentum animation if needed\r\n        if (this.options.momentum &&\r\n            duration < this.options.momentumLimitTime &&\r\n            absDist > this.options.momentumLimitDistance) {\r\n            var wrapperSize = (this.direction === -1 /* Negative */ && this.options.bounces[0]) ||\r\n                (this.direction === 1 /* Positive */ && this.options.bounces[1])\r\n                ? this.wrapperSize\r\n                : 0;\r\n            momentumInfo = this.hasScroll\r\n                ? this.momentum(this.currentPos, this.startPos, duration, this.maxScrollPos, this.minScrollPos, wrapperSize, this.options)\r\n                : { destination: this.currentPos, duration: 0 };\r\n        }\r\n        else {\r\n            this.hooks.trigger(this.hooks.eventTypes.end, momentumInfo);\r\n        }\r\n        return momentumInfo;\r\n    };\r\n    Behavior.prototype.momentum = function (current, start, time, lowerMargin, upperMargin, wrapperSize, options) {\r\n        if (options === void 0) { options = this.options; }\r\n        var distance = current - start;\r\n        var speed = Math.abs(distance) / time;\r\n        var deceleration = options.deceleration, swipeBounceTime = options.swipeBounceTime, swipeTime = options.swipeTime;\r\n        var momentumData = {\r\n            destination: current + (speed / deceleration) * (distance < 0 ? -1 : 1),\r\n            duration: swipeTime,\r\n            rate: 15\r\n        };\r\n        this.hooks.trigger(this.hooks.eventTypes.momentum, momentumData, distance);\r\n        if (momentumData.destination < lowerMargin) {\r\n            momentumData.destination = wrapperSize\r\n                ? Math.max(lowerMargin - wrapperSize / 4, lowerMargin - (wrapperSize / momentumData.rate) * speed)\r\n                : lowerMargin;\r\n            momentumData.duration = swipeBounceTime;\r\n        }\r\n        else if (momentumData.destination > upperMargin) {\r\n            momentumData.destination = wrapperSize\r\n                ? Math.min(upperMargin + wrapperSize / 4, upperMargin + (wrapperSize / momentumData.rate) * speed)\r\n                : upperMargin;\r\n            momentumData.duration = swipeBounceTime;\r\n        }\r\n        momentumData.destination = Math.round(momentumData.destination);\r\n        return momentumData;\r\n    };\r\n    Behavior.prototype.updateDirection = function () {\r\n        var absDist = Math.round(this.currentPos) - this.absStartPos;\r\n        this.direction =\r\n            absDist > 0\r\n                ? -1 /* Negative */\r\n                : absDist < 0\r\n                    ? 1 /* Positive */\r\n                    : 0 /* Default */;\r\n    };\r\n    Behavior.prototype.refresh = function () {\r\n        var _a = this.options.rect, size = _a.size, position = _a.position;\r\n        var isWrapperStatic = window.getComputedStyle(this.wrapper, null).position === 'static';\r\n        var wrapperRect = getRect(this.wrapper);\r\n        this.wrapperSize = wrapperRect[size];\r\n        var contentRect = getRect(this.content);\r\n        this.contentSize = contentRect[size];\r\n        this.relativeOffset = contentRect[position];\r\n        if (isWrapperStatic) {\r\n            this.relativeOffset -= wrapperRect[position];\r\n        }\r\n        this.minScrollPos = 0;\r\n        this.maxScrollPos = this.wrapperSize - this.contentSize;\r\n        if (this.maxScrollPos < 0) {\r\n            this.maxScrollPos -= this.relativeOffset;\r\n            this.minScrollPos = -this.relativeOffset;\r\n        }\r\n        this.hasScroll =\r\n            this.options.scrollable && this.maxScrollPos < this.minScrollPos;\r\n        if (!this.hasScroll) {\r\n            this.maxScrollPos = this.minScrollPos;\r\n            this.contentSize = this.wrapperSize;\r\n        }\r\n        this.direction = 0;\r\n    };\r\n    Behavior.prototype.updatePosition = function (pos) {\r\n        this.currentPos = pos;\r\n    };\r\n    Behavior.prototype.getCurrentPos = function () {\r\n        return Math.round(this.currentPos);\r\n    };\r\n    Behavior.prototype.checkInBoundary = function () {\r\n        var position = this.adjustPosition(this.currentPos);\r\n        var inBoundary = position === this.getCurrentPos();\r\n        return {\r\n            position: position,\r\n            inBoundary: inBoundary\r\n        };\r\n    };\r\n    // adjust position when out of boundary\r\n    Behavior.prototype.adjustPosition = function (pos) {\r\n        var roundPos = Math.round(pos);\r\n        if (!this.hasScroll || roundPos > this.minScrollPos) {\r\n            roundPos = this.minScrollPos;\r\n        }\r\n        else if (roundPos < this.maxScrollPos) {\r\n            roundPos = this.maxScrollPos;\r\n        }\r\n        return roundPos;\r\n    };\r\n    Behavior.prototype.updateStartPos = function () {\r\n        this.startPos = this.currentPos;\r\n    };\r\n    Behavior.prototype.updateAbsStartPos = function () {\r\n        this.absStartPos = this.currentPos;\r\n    };\r\n    Behavior.prototype.resetStartPos = function () {\r\n        this.updateStartPos();\r\n        this.updateAbsStartPos();\r\n    };\r\n    Behavior.prototype.getAbsDist = function (delta) {\r\n        this.dist += delta;\r\n        return Math.abs(this.dist);\r\n    };\r\n    Behavior.prototype.destroy = function () {\r\n        this.hooks.destroy();\r\n    };\r\n    return Behavior;\r\n}());\n\nvar _a, _b, _c, _d;\r\nvar PassthroughHandlers = (_a = {},\r\n    _a[\"yes\" /* Yes */] = function (e) {\r\n        return true;\r\n    },\r\n    _a[\"no\" /* No */] = function (e) {\r\n        e.preventDefault();\r\n        return false;\r\n    },\r\n    _a);\r\nvar DirectionMap = (_b = {},\r\n    _b[\"horizontal\" /* Horizontal */] = (_c = {},\r\n        _c[\"yes\" /* Yes */] = \"horizontal\" /* Horizontal */,\r\n        _c[\"no\" /* No */] = \"vertical\" /* Vertical */,\r\n        _c),\r\n    _b[\"vertical\" /* Vertical */] = (_d = {},\r\n        _d[\"yes\" /* Yes */] = \"vertical\" /* Vertical */,\r\n        _d[\"no\" /* No */] = \"horizontal\" /* Horizontal */,\r\n        _d),\r\n    _b);\r\nvar DirectionLockAction = /** @class */ (function () {\r\n    function DirectionLockAction(directionLockThreshold, freeScroll, eventPassthrough) {\r\n        this.directionLockThreshold = directionLockThreshold;\r\n        this.freeScroll = freeScroll;\r\n        this.eventPassthrough = eventPassthrough;\r\n        this.reset();\r\n    }\r\n    DirectionLockAction.prototype.reset = function () {\r\n        this.directionLocked = \"\" /* Default */;\r\n    };\r\n    DirectionLockAction.prototype.checkMovingDirection = function (absDistX, absDistY, e) {\r\n        this.computeDirectionLock(absDistX, absDistY);\r\n        return this.handleEventPassthrough(e);\r\n    };\r\n    DirectionLockAction.prototype.adjustDelta = function (deltaX, deltaY) {\r\n        if (this.directionLocked === \"horizontal\" /* Horizontal */) {\r\n            deltaY = 0;\r\n        }\r\n        else if (this.directionLocked === \"vertical\" /* Vertical */) {\r\n            deltaX = 0;\r\n        }\r\n        return {\r\n            deltaX: deltaX,\r\n            deltaY: deltaY\r\n        };\r\n    };\r\n    DirectionLockAction.prototype.computeDirectionLock = function (absDistX, absDistY) {\r\n        // If you are scrolling in one direction, lock it\r\n        if (this.directionLocked === \"\" /* Default */ && !this.freeScroll) {\r\n            if (absDistX > absDistY + this.directionLockThreshold) {\r\n                this.directionLocked = \"horizontal\" /* Horizontal */; // lock horizontally\r\n            }\r\n            else if (absDistY >= absDistX + this.directionLockThreshold) {\r\n                this.directionLocked = \"vertical\" /* Vertical */; // lock vertically\r\n            }\r\n            else {\r\n                this.directionLocked = \"none\" /* None */; // no lock\r\n            }\r\n        }\r\n    };\r\n    DirectionLockAction.prototype.handleEventPassthrough = function (e) {\r\n        var handleMap = DirectionMap[this.directionLocked];\r\n        if (handleMap) {\r\n            if (this.eventPassthrough === handleMap[\"yes\" /* Yes */]) {\r\n                return PassthroughHandlers[\"yes\" /* Yes */](e);\r\n            }\r\n            else if (this.eventPassthrough === handleMap[\"no\" /* No */]) {\r\n                return PassthroughHandlers[\"no\" /* No */](e);\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    return DirectionLockAction;\r\n}());\n\nvar ScrollerActions = /** @class */ (function () {\r\n    function ScrollerActions(scrollBehaviorX, scrollBehaviorY, actionsHandler, animater, options) {\r\n        this.hooks = new EventEmitter([\r\n            'start',\r\n            'beforeMove',\r\n            'scrollStart',\r\n            'scroll',\r\n            'beforeEnd',\r\n            'end',\r\n            'scrollEnd'\r\n        ]);\r\n        this.scrollBehaviorX = scrollBehaviorX;\r\n        this.scrollBehaviorY = scrollBehaviorY;\r\n        this.actionsHandler = actionsHandler;\r\n        this.animater = animater;\r\n        this.options = options;\r\n        this.directionLockAction = new DirectionLockAction(options.directionLockThreshold, options.freeScroll, options.eventPassthrough);\r\n        this.enabled = true;\r\n        this.bindActionsHandler();\r\n    }\r\n    ScrollerActions.prototype.bindActionsHandler = function () {\r\n        var _this = this;\r\n        // [mouse|touch]start event\r\n        this.actionsHandler.hooks.on(this.actionsHandler.hooks.eventTypes.start, function (e) {\r\n            if (!_this.enabled)\r\n                return true;\r\n            return _this.handleStart(e);\r\n        });\r\n        // [mouse|touch]move event\r\n        this.actionsHandler.hooks.on(this.actionsHandler.hooks.eventTypes.move, function (_a) {\r\n            var deltaX = _a.deltaX, deltaY = _a.deltaY, e = _a.e;\r\n            if (!_this.enabled)\r\n                return true;\r\n            return _this.handleMove(deltaX, deltaY, e);\r\n        });\r\n        // [mouse|touch]end event\r\n        this.actionsHandler.hooks.on(this.actionsHandler.hooks.eventTypes.end, function (e) {\r\n            if (!_this.enabled)\r\n                return true;\r\n            return _this.handleEnd(e);\r\n        });\r\n        // click\r\n        this.actionsHandler.hooks.on(this.actionsHandler.hooks.eventTypes.click, function (e) {\r\n            // handle native click event\r\n            if (_this.enabled && !e._constructed) {\r\n                _this.handleClick(e);\r\n            }\r\n        });\r\n    };\r\n    ScrollerActions.prototype.handleStart = function (e) {\r\n        var timestamp = getNow();\r\n        this.moved = false;\r\n        this.startTime = timestamp;\r\n        this.directionLockAction.reset();\r\n        this.scrollBehaviorX.start();\r\n        this.scrollBehaviorY.start();\r\n        // force stopping last transition or animation\r\n        this.animater.stop();\r\n        this.scrollBehaviorX.resetStartPos();\r\n        this.scrollBehaviorY.resetStartPos();\r\n        this.hooks.trigger(this.hooks.eventTypes.start, e);\r\n    };\r\n    ScrollerActions.prototype.handleMove = function (deltaX, deltaY, e) {\r\n        if (this.hooks.trigger(this.hooks.eventTypes.beforeMove, e)) {\r\n            return;\r\n        }\r\n        var absDistX = this.scrollBehaviorX.getAbsDist(deltaX);\r\n        var absDistY = this.scrollBehaviorY.getAbsDist(deltaY);\r\n        var timestamp = getNow();\r\n        // We need to move at least momentumLimitDistance pixels\r\n        // for the scrolling to initiate\r\n        if (this.checkMomentum(absDistX, absDistY, timestamp)) {\r\n            return true;\r\n        }\r\n        if (this.directionLockAction.checkMovingDirection(absDistX, absDistY, e)) {\r\n            this.actionsHandler.setInitiated();\r\n            return true;\r\n        }\r\n        var delta = this.directionLockAction.adjustDelta(deltaX, deltaY);\r\n        var newX = this.scrollBehaviorX.move(delta.deltaX);\r\n        var newY = this.scrollBehaviorY.move(delta.deltaY);\r\n        if (!this.moved) {\r\n            this.moved = true;\r\n            this.hooks.trigger(this.hooks.eventTypes.scrollStart);\r\n        }\r\n        this.animater.translate({\r\n            x: newX,\r\n            y: newY\r\n        });\r\n        this.dispatchScroll(timestamp);\r\n    };\r\n    ScrollerActions.prototype.dispatchScroll = function (timestamp) {\r\n        // dispatch scroll in interval time\r\n        if (timestamp - this.startTime > this.options.momentumLimitTime) {\r\n            // refresh time and starting position to initiate a momentum\r\n            this.startTime = timestamp;\r\n            this.scrollBehaviorX.updateStartPos();\r\n            this.scrollBehaviorY.updateStartPos();\r\n            if (this.options.probeType === 1 /* Throttle */) {\r\n                this.hooks.trigger(this.hooks.eventTypes.scroll, this.getCurrentPos());\r\n            }\r\n        }\r\n        // dispatch scroll all the time\r\n        if (this.options.probeType > 1 /* Throttle */) {\r\n            this.hooks.trigger(this.hooks.eventTypes.scroll, this.getCurrentPos());\r\n        }\r\n    };\r\n    ScrollerActions.prototype.checkMomentum = function (absDistX, absDistY, timestamp) {\r\n        return (timestamp - this.endTime > this.options.momentumLimitTime &&\r\n            absDistY < this.options.momentumLimitDistance &&\r\n            absDistX < this.options.momentumLimitDistance);\r\n    };\r\n    ScrollerActions.prototype.handleEnd = function (e) {\r\n        if (this.hooks.trigger(this.hooks.eventTypes.beforeEnd, e)) {\r\n            return;\r\n        }\r\n        var currentPos = this.getCurrentPos();\r\n        this.scrollBehaviorX.updateDirection();\r\n        this.scrollBehaviorY.updateDirection();\r\n        if (this.hooks.trigger(this.hooks.eventTypes.end, e, currentPos)) {\r\n            return true;\r\n        }\r\n        this.animater.translate(currentPos);\r\n        this.endTime = getNow();\r\n        var duration = this.endTime - this.startTime;\r\n        this.hooks.trigger(this.hooks.eventTypes.scrollEnd, currentPos, duration);\r\n    };\r\n    ScrollerActions.prototype.handleClick = function (e) {\r\n        if (!preventDefaultExceptionFn(e.target, this.options.preventDefaultException)) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        }\r\n    };\r\n    ScrollerActions.prototype.getCurrentPos = function () {\r\n        return {\r\n            x: this.scrollBehaviorX.getCurrentPos(),\r\n            y: this.scrollBehaviorY.getCurrentPos()\r\n        };\r\n    };\r\n    ScrollerActions.prototype.refresh = function () {\r\n        this.endTime = 0;\r\n    };\r\n    ScrollerActions.prototype.destroy = function () {\r\n        this.hooks.destroy();\r\n    };\r\n    return ScrollerActions;\r\n}());\n\nfunction createActionsHandlerOptions(bsOptions) {\r\n    var options = [\r\n        'click',\r\n        'bindToWrapper',\r\n        'disableMouse',\r\n        'disableTouch',\r\n        'preventDefault',\r\n        'stopPropagation',\r\n        'tagException',\r\n        'preventDefaultException'\r\n    ].reduce(function (prev, cur) {\r\n        prev[cur] = bsOptions[cur];\r\n        return prev;\r\n    }, {});\r\n    return options;\r\n}\r\nfunction createBehaviorOptions(bsOptions, extraProp, bounces, rect) {\r\n    var options = [\r\n        'momentum',\r\n        'momentumLimitTime',\r\n        'momentumLimitDistance',\r\n        'deceleration',\r\n        'swipeBounceTime',\r\n        'swipeTime'\r\n    ].reduce(function (prev, cur) {\r\n        prev[cur] = bsOptions[cur];\r\n        return prev;\r\n    }, {});\r\n    // add extra property\r\n    options.scrollable = bsOptions[extraProp];\r\n    options.bounces = bounces;\r\n    options.rect = rect;\r\n    return options;\r\n}\n\nfunction bubbling(source, target, events) {\r\n    events.forEach(function (event) {\r\n        var sourceEvent;\r\n        var targetEvent;\r\n        if (typeof event === 'string') {\r\n            sourceEvent = targetEvent = event;\r\n        }\r\n        else {\r\n            sourceEvent = event.source;\r\n            targetEvent = event.target;\r\n        }\r\n        source.on(sourceEvent, function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            return target.trigger.apply(target, [targetEvent].concat(args));\r\n        });\r\n    });\r\n}\n\nvar Scroller = /** @class */ (function () {\r\n    function Scroller(wrapper, options) {\r\n        this.hooks = new EventEmitter([\r\n            'beforeStart',\r\n            'beforeMove',\r\n            'beforeScrollStart',\r\n            'scrollStart',\r\n            'scroll',\r\n            'beforeEnd',\r\n            'scrollEnd',\r\n            'refresh',\r\n            'touchEnd',\r\n            'end',\r\n            'flick',\r\n            'scrollCancel',\r\n            'momentum',\r\n            'scrollTo',\r\n            'ignoreDisMoveForSamePos',\r\n            'scrollToElement',\r\n            'resize'\r\n        ]);\r\n        this.wrapper = wrapper;\r\n        this.content = wrapper.children[0];\r\n        this.options = options;\r\n        var _a = this\r\n            .options.bounce, _b = _a.left, left = _b === void 0 ? true : _b, _c = _a.right, right = _c === void 0 ? true : _c, _d = _a.top, top = _d === void 0 ? true : _d, _e = _a.bottom, bottom = _e === void 0 ? true : _e;\r\n        // direction X\r\n        this.scrollBehaviorX = new Behavior(wrapper, createBehaviorOptions(options, 'scrollX', [left, right], {\r\n            size: 'width',\r\n            position: 'left'\r\n        }));\r\n        // direction Y\r\n        this.scrollBehaviorY = new Behavior(wrapper, createBehaviorOptions(options, 'scrollY', [top, bottom], {\r\n            size: 'height',\r\n            position: 'top'\r\n        }));\r\n        this.translater = new Translater(this.content);\r\n        this.animater = createAnimater(this.content, this.translater, this.options);\r\n        this.actionsHandler = new ActionsHandler(wrapper, createActionsHandlerOptions(this.options));\r\n        this.actions = new ScrollerActions(this.scrollBehaviorX, this.scrollBehaviorY, this.actionsHandler, this.animater, this.options);\r\n        var resizeHandler = this.resize.bind(this);\r\n        this.resizeRegister = new EventRegister(window, [\r\n            {\r\n                name: 'orientationchange',\r\n                handler: resizeHandler\r\n            },\r\n            {\r\n                name: 'resize',\r\n                handler: resizeHandler\r\n            }\r\n        ]);\r\n        this.transitionEndRegister = new EventRegister(this.content, [\r\n            {\r\n                name: style.transitionEnd,\r\n                handler: this.transitionEnd.bind(this)\r\n            }\r\n        ]);\r\n        this.init();\r\n    }\r\n    Scroller.prototype.init = function () {\r\n        var _this = this;\r\n        this.bindTranslater();\r\n        this.bindAnimater();\r\n        this.bindActions();\r\n        // enable pointer events when scrolling ends\r\n        this.hooks.on(this.hooks.eventTypes.scrollEnd, function () {\r\n            _this.togglePointerEvents(true);\r\n        });\r\n    };\r\n    Scroller.prototype.bindTranslater = function () {\r\n        var _this = this;\r\n        var hooks = this.translater.hooks;\r\n        hooks.on(hooks.eventTypes.beforeTranslate, function (transformStyle) {\r\n            if (_this.options.translateZ) {\r\n                transformStyle.push(_this.options.translateZ);\r\n            }\r\n        });\r\n        // disable pointer events when scrolling\r\n        hooks.on(hooks.eventTypes.translate, function (pos) {\r\n            _this.updatePositions(pos);\r\n            _this.togglePointerEvents(false);\r\n        });\r\n    };\r\n    Scroller.prototype.bindAnimater = function () {\r\n        var _this = this;\r\n        // reset position\r\n        this.animater.hooks.on(this.animater.hooks.eventTypes.end, function (pos) {\r\n            if (!_this.resetPosition(_this.options.bounceTime)) {\r\n                _this.animater.setPending(false);\r\n                _this.hooks.trigger(_this.hooks.eventTypes.scrollEnd, pos);\r\n            }\r\n        });\r\n        bubbling(this.animater.hooks, this.hooks, [\r\n            {\r\n                source: this.animater.hooks.eventTypes.move,\r\n                target: this.hooks.eventTypes.scroll\r\n            },\r\n            {\r\n                source: this.animater.hooks.eventTypes.forceStop,\r\n                target: this.hooks.eventTypes.scrollEnd\r\n            }\r\n        ]);\r\n    };\r\n    Scroller.prototype.bindActions = function () {\r\n        var _this = this;\r\n        var actions = this.actions;\r\n        bubbling(actions.hooks, this.hooks, [\r\n            {\r\n                source: actions.hooks.eventTypes.start,\r\n                target: this.hooks.eventTypes.beforeStart\r\n            },\r\n            {\r\n                source: actions.hooks.eventTypes.start,\r\n                target: this.hooks.eventTypes.beforeScrollStart // just for event api\r\n            },\r\n            {\r\n                source: actions.hooks.eventTypes.beforeMove,\r\n                target: this.hooks.eventTypes.beforeMove\r\n            },\r\n            {\r\n                source: actions.hooks.eventTypes.scrollStart,\r\n                target: this.hooks.eventTypes.scrollStart\r\n            },\r\n            {\r\n                source: actions.hooks.eventTypes.scroll,\r\n                target: this.hooks.eventTypes.scroll\r\n            },\r\n            {\r\n                source: actions.hooks.eventTypes.beforeEnd,\r\n                target: this.hooks.eventTypes.beforeEnd\r\n            }\r\n        ]);\r\n        actions.hooks.on(actions.hooks.eventTypes.end, function (e, pos) {\r\n            _this.hooks.trigger(_this.hooks.eventTypes.touchEnd, pos);\r\n            if (_this.hooks.trigger(_this.hooks.eventTypes.end, pos)) {\r\n                return true;\r\n            }\r\n            // check if it is a click operation\r\n            if (!actions.moved && _this.checkClick(e)) {\r\n                _this.animater.setForceStopped(false);\r\n                _this.hooks.trigger(_this.hooks.eventTypes.scrollCancel);\r\n                return true;\r\n            }\r\n            _this.animater.setForceStopped(false);\r\n            // reset if we are outside of the boundaries\r\n            if (_this.resetPosition(_this.options.bounceTime, ease.bounce)) {\r\n                return true;\r\n            }\r\n        });\r\n        actions.hooks.on(actions.hooks.eventTypes.scrollEnd, function (pos, duration) {\r\n            var deltaX = Math.abs(pos.x - _this.scrollBehaviorX.startPos);\r\n            var deltaY = Math.abs(pos.y - _this.scrollBehaviorY.startPos);\r\n            if (_this.checkFlick(duration, deltaX, deltaY)) {\r\n                _this.hooks.trigger(_this.hooks.eventTypes.flick);\r\n                return;\r\n            }\r\n            if (_this.momentum(pos, duration)) {\r\n                return;\r\n            }\r\n            _this.hooks.trigger(_this.hooks.eventTypes.scrollEnd, pos);\r\n        });\r\n    };\r\n    Scroller.prototype.checkFlick = function (duration, deltaX, deltaY) {\r\n        // flick\r\n        if (this.hooks.events.flick.length > 1 &&\r\n            duration < this.options.flickLimitTime &&\r\n            deltaX < this.options.flickLimitDistance &&\r\n            deltaY < this.options.flickLimitDistance) {\r\n            return true;\r\n        }\r\n    };\r\n    Scroller.prototype.momentum = function (pos, duration) {\r\n        var meta = {\r\n            time: 0,\r\n            easing: ease.swiper,\r\n            newX: pos.x,\r\n            newY: pos.y\r\n        };\r\n        // start momentum animation if needed\r\n        var momentumX = this.scrollBehaviorX.end(duration);\r\n        var momentumY = this.scrollBehaviorY.end(duration);\r\n        meta.newX = isUndef(momentumX.destination)\r\n            ? meta.newX\r\n            : momentumX.destination;\r\n        meta.newY = isUndef(momentumY.destination)\r\n            ? meta.newY\r\n            : momentumY.destination;\r\n        meta.time = Math.max(momentumX.duration, momentumY.duration);\r\n        this.hooks.trigger(this.hooks.eventTypes.momentum, meta, this);\r\n        // when x or y changed, do momentum animation now!\r\n        if (meta.newX !== pos.x || meta.newY !== pos.y) {\r\n            // change easing function when scroller goes out of the boundaries\r\n            if (meta.newX > this.scrollBehaviorX.minScrollPos ||\r\n                meta.newX < this.scrollBehaviorX.maxScrollPos ||\r\n                meta.newY > this.scrollBehaviorY.minScrollPos ||\r\n                meta.newY < this.scrollBehaviorY.maxScrollPos) {\r\n                meta.easing = ease.swipeBounce;\r\n            }\r\n            this.scrollTo(meta.newX, meta.newY, meta.time, meta.easing);\r\n            return true;\r\n        }\r\n    };\r\n    Scroller.prototype.checkClick = function (e) {\r\n        // when in the process of pulling down, it should not prevent click\r\n        var cancelable = {\r\n            preventClick: this.animater.forceStopped\r\n        };\r\n        // we scrolled less than momentumLimitDistance pixels\r\n        if (this.hooks.trigger(this.hooks.eventTypes.checkClick))\r\n            return true;\r\n        if (!cancelable.preventClick) {\r\n            var _dblclick = this.options.dblclick;\r\n            var dblclickTrigged = false;\r\n            if (_dblclick && this.lastClickTime) {\r\n                var _a = _dblclick.delay, delay = _a === void 0 ? 300 : _a;\r\n                if (getNow() - this.lastClickTime < delay) {\r\n                    dblclickTrigged = true;\r\n                    dblclick(e);\r\n                }\r\n            }\r\n            if (this.options.tap) {\r\n                tap(e, this.options.tap);\r\n            }\r\n            if (this.options.click &&\r\n                !preventDefaultExceptionFn(e.target, this.options.preventDefaultException)) {\r\n                click(e);\r\n            }\r\n            this.lastClickTime = dblclickTrigged ? null : getNow();\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    Scroller.prototype.resize = function () {\r\n        var _this = this;\r\n        if (!this.actions.enabled) {\r\n            return;\r\n        }\r\n        // fix a scroll problem under Android condition\r\n        if (isAndroid) {\r\n            this.wrapper.scrollTop = 0;\r\n        }\r\n        if (!this.hooks.trigger(this.hooks.eventTypes.resize)) {\r\n            clearTimeout(this.resizeTimeout);\r\n            this.resizeTimeout = window.setTimeout(function () {\r\n                _this.refresh();\r\n            }, this.options.resizePolling);\r\n        }\r\n    };\r\n    Scroller.prototype.transitionEnd = function (e) {\r\n        if (e.target !== this.content || !this.animater.pending) {\r\n            return;\r\n        }\r\n        var animater = this.animater;\r\n        animater.transitionTime();\r\n        if (!this.resetPosition(this.options.bounceTime, ease.bounce)) {\r\n            this.animater.setPending(false);\r\n            if (this.options.probeType !== 3 /* Realtime */) {\r\n                this.hooks.trigger(this.hooks.eventTypes.scrollEnd, this.getCurrentPos());\r\n            }\r\n        }\r\n    };\r\n    Scroller.prototype.togglePointerEvents = function (enabled) {\r\n        if (enabled === void 0) { enabled = true; }\r\n        var el = this.content.children.length\r\n            ? this.content.children\r\n            : [this.content];\r\n        var pointerEvents = enabled ? 'auto' : 'none';\r\n        for (var i = 0; i < el.length; i++) {\r\n            var node = el[i];\r\n            // ignore BetterScroll instance's wrapper DOM\r\n            if (node.isBScrollContainer) {\r\n                continue;\r\n            }\r\n            node.style.pointerEvents = pointerEvents;\r\n        }\r\n    };\r\n    Scroller.prototype.refresh = function () {\r\n        this.scrollBehaviorX.refresh();\r\n        this.scrollBehaviorY.refresh();\r\n        this.actions.refresh();\r\n        this.wrapperOffset = offset(this.wrapper);\r\n    };\r\n    Scroller.prototype.scrollBy = function (deltaX, deltaY, time, easing) {\r\n        if (time === void 0) { time = 0; }\r\n        var _a = this.getCurrentPos(), x = _a.x, y = _a.y;\r\n        easing = !easing ? ease.bounce : easing;\r\n        deltaX += x;\r\n        deltaY += y;\r\n        this.scrollTo(deltaX, deltaY, time, easing);\r\n    };\r\n    Scroller.prototype.scrollTo = function (x, y, time, easing, extraTransform, isSilent) {\r\n        if (time === void 0) { time = 0; }\r\n        if (extraTransform === void 0) { extraTransform = {\r\n            start: {},\r\n            end: {}\r\n        }; }\r\n        easing = !easing ? ease.bounce : easing;\r\n        var easingFn = this.options.useTransition ? easing.style : easing.fn;\r\n        var currentPos = this.getCurrentPos();\r\n        var startPoint = __assign({ x: currentPos.x, y: currentPos.y }, extraTransform.start);\r\n        var endPoint = __assign({ x: x,\r\n            y: y }, extraTransform.end);\r\n        this.hooks.trigger(this.hooks.eventTypes.scrollTo, endPoint);\r\n        if (!this.hooks.trigger(this.hooks.eventTypes.ignoreDisMoveForSamePos)) {\r\n            // it is an useless move\r\n            if (startPoint.x === endPoint.x && startPoint.y === endPoint.y) {\r\n                return;\r\n            }\r\n        }\r\n        this.animater.move(startPoint, endPoint, time, easingFn, isSilent);\r\n    };\r\n    Scroller.prototype.scrollToElement = function (el, time, offsetX, offsetY, easing) {\r\n        var targetEle = getElement(el);\r\n        var pos = offset(targetEle);\r\n        var getOffset = function (offset, size, wrapperSize) {\r\n            if (typeof offset === 'number') {\r\n                return offset;\r\n            }\r\n            // if offsetX/Y are true we center the element to the screen\r\n            return offset ? Math.round(size / 2 - wrapperSize / 2) : 0;\r\n        };\r\n        offsetX = getOffset(offsetX, targetEle.offsetWidth, this.wrapper.offsetWidth);\r\n        offsetY = getOffset(offsetY, targetEle.offsetHeight, this.wrapper.offsetHeight);\r\n        var getPos = function (pos, wrapperPos, offset, scrollBehavior) {\r\n            pos -= wrapperPos;\r\n            pos = scrollBehavior.adjustPosition(pos - offset);\r\n            return pos;\r\n        };\r\n        pos.left = getPos(pos.left, this.wrapperOffset.left, offsetX, this.scrollBehaviorX);\r\n        pos.top = getPos(pos.top, this.wrapperOffset.top, offsetY, this.scrollBehaviorY);\r\n        if (this.hooks.trigger(this.hooks.eventTypes.scrollToElement, targetEle, pos)) {\r\n            return;\r\n        }\r\n        this.scrollTo(pos.left, pos.top, time, easing);\r\n    };\r\n    Scroller.prototype.resetPosition = function (time, easing) {\r\n        if (time === void 0) { time = 0; }\r\n        easing = !easing ? ease.bounce : easing;\r\n        var _a = this.scrollBehaviorX.checkInBoundary(), x = _a.position, xInBoundary = _a.inBoundary;\r\n        var _b = this.scrollBehaviorY.checkInBoundary(), y = _b.position, yInBoundary = _b.inBoundary;\r\n        if (xInBoundary && yInBoundary) {\r\n            return false;\r\n        }\r\n        // out of boundary\r\n        this.scrollTo(x, y, time, easing);\r\n        return true;\r\n    };\r\n    Scroller.prototype.updatePositions = function (pos) {\r\n        this.scrollBehaviorX.updatePosition(pos.x);\r\n        this.scrollBehaviorY.updatePosition(pos.y);\r\n    };\r\n    Scroller.prototype.getCurrentPos = function () {\r\n        return this.actions.getCurrentPos();\r\n    };\r\n    Scroller.prototype.enable = function () {\r\n        this.actions.enabled = true;\r\n    };\r\n    Scroller.prototype.disable = function () {\r\n        cancelAnimationFrame(this.animater.timer);\r\n        this.actions.enabled = false;\r\n    };\r\n    Scroller.prototype.destroy = function () {\r\n        var _this = this;\r\n        var keys = [\r\n            'resizeRegister',\r\n            'transitionEndRegister',\r\n            'actionsHandler',\r\n            'actions',\r\n            'hooks',\r\n            'animater',\r\n            'translater',\r\n            'scrollBehaviorX',\r\n            'scrollBehaviorY'\r\n        ];\r\n        keys.forEach(function (key) { return _this[key].destroy(); });\r\n    };\r\n    return Scroller;\r\n}());\n\nvar propertiesConfig = [\r\n    {\r\n        sourceKey: 'scroller.scrollBehaviorX.currentPos',\r\n        key: 'x'\r\n    },\r\n    {\r\n        sourceKey: 'scroller.scrollBehaviorY.currentPos',\r\n        key: 'y'\r\n    },\r\n    {\r\n        sourceKey: 'scroller.scrollBehaviorX.hasScroll',\r\n        key: 'hasHorizontalScroll'\r\n    },\r\n    {\r\n        sourceKey: 'scroller.scrollBehaviorY.hasScroll',\r\n        key: 'hasVerticalScroll'\r\n    },\r\n    {\r\n        sourceKey: 'scroller.scrollBehaviorX.contentSize',\r\n        key: 'scrollerWidth'\r\n    },\r\n    {\r\n        sourceKey: 'scroller.scrollBehaviorY.contentSize',\r\n        key: 'scrollerHeight'\r\n    },\r\n    {\r\n        sourceKey: 'scroller.scrollBehaviorX.maxScrollPos',\r\n        key: 'maxScrollX'\r\n    },\r\n    {\r\n        sourceKey: 'scroller.scrollBehaviorY.maxScrollPos',\r\n        key: 'maxScrollY'\r\n    },\r\n    {\r\n        sourceKey: 'scroller.scrollBehaviorX.minScrollPos',\r\n        key: 'minScrollX'\r\n    },\r\n    {\r\n        sourceKey: 'scroller.scrollBehaviorY.minScrollPos',\r\n        key: 'minScrollY'\r\n    },\r\n    {\r\n        sourceKey: 'scroller.scrollBehaviorX.movingDirection',\r\n        key: 'movingDirectionX'\r\n    },\r\n    {\r\n        sourceKey: 'scroller.scrollBehaviorY.movingDirection',\r\n        key: 'movingDirectionY'\r\n    },\r\n    {\r\n        sourceKey: 'scroller.scrollBehaviorX.direction',\r\n        key: 'directionX'\r\n    },\r\n    {\r\n        sourceKey: 'scroller.scrollBehaviorY.direction',\r\n        key: 'directionY'\r\n    },\r\n    {\r\n        sourceKey: 'scroller.actions.enabled',\r\n        key: 'enabled'\r\n    },\r\n    {\r\n        sourceKey: 'scroller.animater.pending',\r\n        key: 'pending'\r\n    },\r\n    {\r\n        sourceKey: 'scroller.animater.stop',\r\n        key: 'stop'\r\n    },\r\n    {\r\n        sourceKey: 'scroller.scrollTo',\r\n        key: 'scrollTo'\r\n    },\r\n    {\r\n        sourceKey: 'scroller.scrollBy',\r\n        key: 'scrollBy'\r\n    },\r\n    {\r\n        sourceKey: 'scroller.scrollToElement',\r\n        key: 'scrollToElement'\r\n    },\r\n    {\r\n        sourceKey: 'scroller.resetPosition',\r\n        key: 'resetPosition'\r\n    }\r\n];\n\nvar BScroll = /** @class */ (function (_super) {\r\n    __extends(BScroll, _super);\r\n    function BScroll(el, options) {\r\n        var _this = _super.call(this, [\r\n            'refresh',\r\n            'enable',\r\n            'disable',\r\n            'beforeScrollStart',\r\n            'scrollStart',\r\n            'scroll',\r\n            'scrollEnd',\r\n            'scrollCancel',\r\n            'touchEnd',\r\n            'flick',\r\n            'destroy'\r\n        ]) || this;\r\n        var wrapper = getElement(el);\r\n        if (!wrapper) {\r\n            warn('Can not resolve the wrapper DOM.');\r\n            return _this;\r\n        }\r\n        var content = wrapper.children[0];\r\n        if (!content) {\r\n            warn('The wrapper need at least one child element to be scroller.');\r\n            return _this;\r\n        }\r\n        _this.plugins = {};\r\n        _this.options = new Options().merge(options).process();\r\n        _this.hooks = new EventEmitter([\r\n            'init',\r\n            'refresh',\r\n            'enable',\r\n            'disable',\r\n            'destroy'\r\n        ]);\r\n        _this.init(wrapper);\r\n        return _this;\r\n    }\r\n    BScroll.use = function (ctor) {\r\n        var name = ctor.pluginName;\r\n        var installed = this.plugins.some(function (plugin) { return ctor === plugin.ctor; });\r\n        if (installed)\r\n            return this;\r\n        if (isUndef(name)) {\r\n            warn(\"Plugin Class must specify plugin's name in static property by 'pluginName' field.\");\r\n            return this;\r\n        }\r\n        if (this.pluginsMap[name]) {\r\n            warn(\"This plugin has been registered, maybe you need change plugin's name\");\r\n            return this;\r\n        }\r\n        this.pluginsMap[name] = true;\r\n        this.plugins.push({\r\n            name: name,\r\n            applyOrder: ctor.applyOrder,\r\n            ctor: ctor\r\n        });\r\n        return this;\r\n    };\r\n    BScroll.prototype.init = function (wrapper) {\r\n        this.wrapper = wrapper;\r\n        wrapper.isBScrollContainer = true;\r\n        this.scroller = new Scroller(wrapper, this.options);\r\n        this.eventBubbling();\r\n        this.handleAutoBlur();\r\n        this.innerRefresh();\r\n        this.scroller.scrollTo(this.options.startX, this.options.startY);\r\n        this.enable();\r\n        this.proxy(propertiesConfig);\r\n        this.applyPlugins();\r\n    };\r\n    BScroll.prototype.applyPlugins = function () {\r\n        var _this = this;\r\n        var options = this.options;\r\n        this.constructor.plugins\r\n            .sort(function (a, b) {\r\n            var _a;\r\n            var applyOrderMap = (_a = {},\r\n                _a[\"pre\" /* Pre */] = -1,\r\n                _a[\"post\" /* Post */] = 1,\r\n                _a);\r\n            var aOrder = a.applyOrder ? applyOrderMap[a.applyOrder] : 0;\r\n            var bOrder = b.applyOrder ? applyOrderMap[b.applyOrder] : 0;\r\n            return aOrder - bOrder;\r\n        })\r\n            .forEach(function (item) {\r\n            var ctor = item.ctor;\r\n            if (options[item.name] && typeof ctor === 'function') {\r\n                _this.plugins[item.name] = new ctor(_this);\r\n            }\r\n        });\r\n    };\r\n    BScroll.prototype.handleAutoBlur = function () {\r\n        if (this.options.autoBlur) {\r\n            this.on(this.eventTypes.beforeScrollStart, function () {\r\n                var activeElement = document.activeElement;\r\n                if (activeElement &&\r\n                    (activeElement.tagName === 'INPUT' ||\r\n                        activeElement.tagName === 'TEXTAREA')) {\r\n                    activeElement.blur();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    BScroll.prototype.eventBubbling = function () {\r\n        bubbling(this.scroller.hooks, this, [\r\n            'beforeScrollStart',\r\n            'scrollStart',\r\n            'scroll',\r\n            'scrollEnd',\r\n            'scrollCancel',\r\n            'touchEnd',\r\n            'flick'\r\n        ]);\r\n    };\r\n    BScroll.prototype.innerRefresh = function () {\r\n        this.scroller.refresh();\r\n        this.hooks.trigger(this.hooks.eventTypes.refresh);\r\n        this.trigger(this.eventTypes.refresh);\r\n    };\r\n    BScroll.prototype.proxy = function (propertiesConfig) {\r\n        var _this = this;\r\n        propertiesConfig.forEach(function (_a) {\r\n            var key = _a.key, sourceKey = _a.sourceKey;\r\n            propertiesProxy(_this, sourceKey, key);\r\n        });\r\n    };\r\n    BScroll.prototype.refresh = function () {\r\n        this.innerRefresh();\r\n        this.scroller.resetPosition();\r\n    };\r\n    BScroll.prototype.enable = function () {\r\n        this.scroller.enable();\r\n        this.hooks.trigger(this.hooks.eventTypes.enable);\r\n        this.trigger(this.eventTypes.enable);\r\n    };\r\n    BScroll.prototype.disable = function () {\r\n        this.scroller.disable();\r\n        this.hooks.trigger(this.hooks.eventTypes.disable);\r\n        this.trigger(this.eventTypes.disable);\r\n    };\r\n    BScroll.prototype.destroy = function () {\r\n        this.hooks.trigger(this.hooks.eventTypes.destroy);\r\n        this.trigger(this.eventTypes.destroy);\r\n        this.scroller.destroy();\r\n    };\r\n    BScroll.prototype.eventRegister = function (names) {\r\n        this.registerType(names);\r\n    };\r\n    BScroll.plugins = [];\r\n    BScroll.pluginsMap = {};\r\n    return BScroll;\r\n}(EventEmitter));\n\nexport default BScroll;\nexport { Behavior, Options };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_@better-scroll_core@2.0.0-beta.6@@better-scroll/core/dist/core.esm.js\n// module id = Mg+u\n// module chunks = 139","/*!\n * better-scroll / observe-dom\n * (c) 2016-2020 ustbhuangyi\n * Released under the MIT License.\n */\n// ssr support\r\nvar inBrowser = typeof window !== 'undefined';\r\nvar ua = inBrowser && navigator.userAgent.toLowerCase();\r\nvar isWeChatDevTools = ua && /wechatdevtools/.test(ua);\r\nvar isAndroid = ua && ua.indexOf('android') > 0;\n\nvar elementStyle = (inBrowser &&\r\n    document.createElement('div').style);\r\nvar vendor = (function () {\r\n    if (!inBrowser) {\r\n        return false;\r\n    }\r\n    var transformNames = {\r\n        webkit: 'webkitTransform',\r\n        Moz: 'MozTransform',\r\n        O: 'OTransform',\r\n        ms: 'msTransform',\r\n        standard: 'transform'\r\n    };\r\n    for (var key in transformNames) {\r\n        if (elementStyle[transformNames[key]] !== undefined) {\r\n            return key;\r\n        }\r\n    }\r\n    return false;\r\n})();\r\nfunction prefixStyle(style) {\r\n    if (vendor === false) {\r\n        return style;\r\n    }\r\n    if (vendor === 'standard') {\r\n        if (style === 'transitionEnd') {\r\n            return 'transitionend';\r\n        }\r\n        return style;\r\n    }\r\n    return vendor + style.charAt(0).toUpperCase() + style.substr(1);\r\n}\r\nvar cssVendor = vendor && vendor !== 'standard' ? '-' + vendor.toLowerCase() + '-' : '';\r\nvar transform = prefixStyle('transform');\r\nvar transition = prefixStyle('transition');\r\nvar hasPerspective = inBrowser && prefixStyle('perspective') in elementStyle;\r\nvar style = {\r\n    transform: transform,\r\n    transition: transition,\r\n    transitionTimingFunction: prefixStyle('transitionTimingFunction'),\r\n    transitionDuration: prefixStyle('transitionDuration'),\r\n    transitionDelay: prefixStyle('transitionDelay'),\r\n    transformOrigin: prefixStyle('transformOrigin'),\r\n    transitionEnd: prefixStyle('transitionEnd')\r\n};\r\nfunction getRect(el) {\r\n    if (el instanceof window.SVGElement) {\r\n        var rect = el.getBoundingClientRect();\r\n        return {\r\n            top: rect.top,\r\n            left: rect.left,\r\n            width: rect.width,\r\n            height: rect.height\r\n        };\r\n    }\r\n    else {\r\n        return {\r\n            top: el.offsetTop,\r\n            left: el.offsetLeft,\r\n            width: el.offsetWidth,\r\n            height: el.offsetHeight\r\n        };\r\n    }\r\n}\n\nvar DEFAULT_INTERVAL = 100 / 60;\r\nvar windowCompat = inBrowser && window;\r\nfunction noop() { }\r\nvar requestAnimationFrame = (function () {\r\n    if (!inBrowser) {\r\n        /* istanbul ignore if */\r\n        return noop;\r\n    }\r\n    return (windowCompat.requestAnimationFrame ||\r\n        windowCompat.webkitRequestAnimationFrame ||\r\n        windowCompat.mozRequestAnimationFrame ||\r\n        windowCompat.oRequestAnimationFrame ||\r\n        // if all else fails, use setTimeout\r\n        function (callback) {\r\n            return window.setTimeout(callback, (callback.interval || DEFAULT_INTERVAL) / 2); // make interval as precise as possible.\r\n        });\r\n})();\r\nvar cancelAnimationFrame = (function () {\r\n    if (!inBrowser) {\r\n        /* istanbul ignore if */\r\n        return noop;\r\n    }\r\n    return (windowCompat.cancelAnimationFrame ||\r\n        windowCompat.webkitCancelAnimationFrame ||\r\n        windowCompat.mozCancelAnimationFrame ||\r\n        windowCompat.oCancelAnimationFrame ||\r\n        function (id) {\r\n            window.clearTimeout(id);\r\n        });\r\n})();\n\nvar ObserveDOM = /** @class */ (function () {\r\n    function ObserveDOM(scroll) {\r\n        var _this = this;\r\n        this.scroll = scroll;\r\n        this.stopObserver = false;\r\n        this.hooksFn = [];\r\n        this.init();\r\n        this.registorHooks(this.scroll.hooks, 'enable', function () {\r\n            if (_this.stopObserver) {\r\n                _this.init();\r\n            }\r\n        });\r\n        this.registorHooks(this.scroll.hooks, 'disable', function () {\r\n            _this.stopObserve();\r\n        });\r\n        this.registorHooks(this.scroll.hooks, 'destroy', function () {\r\n            _this.destroy();\r\n        });\r\n    }\r\n    ObserveDOM.prototype.init = function () {\r\n        var _this = this;\r\n        if (typeof MutationObserver !== 'undefined') {\r\n            var timer_1 = 0;\r\n            this.observer = new MutationObserver(function (mutations) {\r\n                _this.mutationObserverHandler(mutations, timer_1);\r\n            });\r\n            this.startObserve(this.observer);\r\n        }\r\n        else {\r\n            this.checkDOMUpdate();\r\n        }\r\n    };\r\n    ObserveDOM.prototype.destroy = function () {\r\n        this.stopObserve();\r\n        this.hooksFn.forEach(function (item) {\r\n            var hooks = item[0];\r\n            var hooksName = item[1];\r\n            var handlerFn = item[2];\r\n            hooks.off(hooksName, handlerFn);\r\n        });\r\n        this.hooksFn.length = 0;\r\n    };\r\n    ObserveDOM.prototype.mutationObserverHandler = function (mutations, timer) {\r\n        var _this = this;\r\n        if (this.shouldNotRefresh()) {\r\n            return;\r\n        }\r\n        var immediateRefresh = false;\r\n        var deferredRefresh = false;\r\n        for (var i = 0; i < mutations.length; i++) {\r\n            var mutation = mutations[i];\r\n            if (mutation.type !== 'attributes') {\r\n                immediateRefresh = true;\r\n                break;\r\n            }\r\n            else {\r\n                if (mutation.target !== this.scroll.scroller.content) {\r\n                    deferredRefresh = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (immediateRefresh) {\r\n            this.scroll.refresh();\r\n        }\r\n        else if (deferredRefresh) {\r\n            // attributes changes too often\r\n            clearTimeout(timer);\r\n            timer = window.setTimeout(function () {\r\n                if (!_this.shouldNotRefresh()) {\r\n                    _this.scroll.refresh();\r\n                }\r\n            }, 60);\r\n        }\r\n    };\r\n    ObserveDOM.prototype.startObserve = function (observer) {\r\n        var config = {\r\n            attributes: true,\r\n            childList: true,\r\n            subtree: true\r\n        };\r\n        observer.observe(this.scroll.scroller.content, config);\r\n    };\r\n    ObserveDOM.prototype.shouldNotRefresh = function () {\r\n        var scroller = this.scroll.scroller;\r\n        var scrollBehaviorX = scroller.scrollBehaviorX;\r\n        var scrollBehaviorY = scroller.scrollBehaviorY;\r\n        var outsideBoundaries = scrollBehaviorX.currentPos > scrollBehaviorX.minScrollPos ||\r\n            scrollBehaviorX.currentPos < scrollBehaviorX.maxScrollPos ||\r\n            scrollBehaviorY.currentPos > scrollBehaviorY.minScrollPos ||\r\n            scrollBehaviorY.currentPos < scrollBehaviorY.maxScrollPos;\r\n        return scroller.animater.pending || outsideBoundaries;\r\n    };\r\n    ObserveDOM.prototype.checkDOMUpdate = function () {\r\n        var me = this;\r\n        var scrollIns = this.scroll;\r\n        var scrollerEl = scrollIns.scroller.content;\r\n        var scrollerRect = getRect(scrollerEl);\r\n        var oldWidth = scrollerRect.width;\r\n        var oldHeight = scrollerRect.height;\r\n        function check() {\r\n            if (me.stopObserver) {\r\n                return;\r\n            }\r\n            scrollerRect = getRect(scrollerEl);\r\n            var newWidth = scrollerRect.width;\r\n            var newHeight = scrollerRect.height;\r\n            if (oldWidth !== newWidth || oldHeight !== newHeight) {\r\n                scrollIns.refresh();\r\n            }\r\n            oldWidth = newWidth;\r\n            oldHeight = newHeight;\r\n            next();\r\n        }\r\n        function next() {\r\n            setTimeout(function () {\r\n                check();\r\n            }, 1000);\r\n        }\r\n        next();\r\n    };\r\n    ObserveDOM.prototype.registorHooks = function (hooks, name, handler) {\r\n        hooks.on(name, handler, this);\r\n        this.hooksFn.push([hooks, name, handler]);\r\n    };\r\n    ObserveDOM.prototype.stopObserve = function () {\r\n        this.stopObserver = true;\r\n        if (this.observer) {\r\n            this.observer.disconnect();\r\n        }\r\n    };\r\n    ObserveDOM.pluginName = 'observeDOM';\r\n    return ObserveDOM;\r\n}());\n\nexport default ObserveDOM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_@better-scroll_observe-dom@2.0.0-beta.6@@better-scroll/observe-dom/dist/observe-dom.esm.js\n// module id = MsKC\n// module chunks = 139","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_is-buffer@2.0.4@is-buffer/index.js\n// module id = ZLEB\n// module chunks = 139","/*!\n * better-scroll / scroll-bar\n * (c) 2016-2020 ustbhuangyi\n * Released under the MIT License.\n */\nfunction warn(msg) {\r\n    console.error(\"[BScroll warn]: \" + msg);\r\n}\n\n// ssr support\r\nvar inBrowser = typeof window !== 'undefined';\r\nvar ua = inBrowser && navigator.userAgent.toLowerCase();\r\nvar isWeChatDevTools = ua && /wechatdevtools/.test(ua);\r\nvar isAndroid = ua && ua.indexOf('android') > 0;\n\nvar elementStyle = (inBrowser &&\r\n    document.createElement('div').style);\r\nvar vendor = (function () {\r\n    if (!inBrowser) {\r\n        return false;\r\n    }\r\n    var transformNames = {\r\n        webkit: 'webkitTransform',\r\n        Moz: 'MozTransform',\r\n        O: 'OTransform',\r\n        ms: 'msTransform',\r\n        standard: 'transform'\r\n    };\r\n    for (var key in transformNames) {\r\n        if (elementStyle[transformNames[key]] !== undefined) {\r\n            return key;\r\n        }\r\n    }\r\n    return false;\r\n})();\r\nfunction prefixStyle(style) {\r\n    if (vendor === false) {\r\n        return style;\r\n    }\r\n    if (vendor === 'standard') {\r\n        if (style === 'transitionEnd') {\r\n            return 'transitionend';\r\n        }\r\n        return style;\r\n    }\r\n    return vendor + style.charAt(0).toUpperCase() + style.substr(1);\r\n}\r\nfunction addEvent(el, type, fn, capture) {\r\n    el.addEventListener(type, fn, {\r\n        passive: false,\r\n        capture: !!capture\r\n    });\r\n}\r\nfunction removeEvent(el, type, fn, capture) {\r\n    el.removeEventListener(type, fn, {\r\n        capture: !!capture\r\n    });\r\n}\r\nvar cssVendor = vendor && vendor !== 'standard' ? '-' + vendor.toLowerCase() + '-' : '';\r\nvar transform = prefixStyle('transform');\r\nvar transition = prefixStyle('transition');\r\nvar hasPerspective = inBrowser && prefixStyle('perspective') in elementStyle;\r\nvar style = {\r\n    transform: transform,\r\n    transition: transition,\r\n    transitionTimingFunction: prefixStyle('transitionTimingFunction'),\r\n    transitionDuration: prefixStyle('transitionDuration'),\r\n    transitionDelay: prefixStyle('transitionDelay'),\r\n    transformOrigin: prefixStyle('transformOrigin'),\r\n    transitionEnd: prefixStyle('transitionEnd')\r\n};\n\nvar DEFAULT_INTERVAL = 100 / 60;\r\nvar windowCompat = inBrowser && window;\r\nfunction noop() { }\r\nvar requestAnimationFrame = (function () {\r\n    if (!inBrowser) {\r\n        /* istanbul ignore if */\r\n        return noop;\r\n    }\r\n    return (windowCompat.requestAnimationFrame ||\r\n        windowCompat.webkitRequestAnimationFrame ||\r\n        windowCompat.mozRequestAnimationFrame ||\r\n        windowCompat.oRequestAnimationFrame ||\r\n        // if all else fails, use setTimeout\r\n        function (callback) {\r\n            return window.setTimeout(callback, (callback.interval || DEFAULT_INTERVAL) / 2); // make interval as precise as possible.\r\n        });\r\n})();\r\nvar cancelAnimationFrame = (function () {\r\n    if (!inBrowser) {\r\n        /* istanbul ignore if */\r\n        return noop;\r\n    }\r\n    return (windowCompat.cancelAnimationFrame ||\r\n        windowCompat.webkitCancelAnimationFrame ||\r\n        windowCompat.mozCancelAnimationFrame ||\r\n        windowCompat.oCancelAnimationFrame ||\r\n        function (id) {\r\n            window.clearTimeout(id);\r\n        });\r\n})();\n\nvar EventEmitter = /** @class */ (function () {\r\n    function EventEmitter(names) {\r\n        this.events = {};\r\n        this.eventTypes = {};\r\n        this.registerType(names);\r\n    }\r\n    EventEmitter.prototype.on = function (type, fn, context) {\r\n        if (context === void 0) { context = this; }\r\n        this.hasType(type);\r\n        if (!this.events[type]) {\r\n            this.events[type] = [];\r\n        }\r\n        this.events[type].push([fn, context]);\r\n        return this;\r\n    };\r\n    EventEmitter.prototype.once = function (type, fn, context) {\r\n        var _this = this;\r\n        if (context === void 0) { context = this; }\r\n        this.hasType(type);\r\n        var magic = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            _this.off(type, magic);\r\n            fn.apply(context, args);\r\n        };\r\n        magic.fn = fn;\r\n        this.on(type, magic);\r\n        return this;\r\n    };\r\n    EventEmitter.prototype.off = function (type, fn) {\r\n        if (!type && !fn) {\r\n            this.events = {};\r\n            return this;\r\n        }\r\n        if (type) {\r\n            this.hasType(type);\r\n            if (!fn) {\r\n                this.events[type] = [];\r\n                return this;\r\n            }\r\n            var events = this.events[type];\r\n            if (!events) {\r\n                return this;\r\n            }\r\n            var count = events.length;\r\n            while (count--) {\r\n                if (events[count][0] === fn ||\r\n                    (events[count][0] && events[count][0].fn === fn)) {\r\n                    events.splice(count, 1);\r\n                }\r\n            }\r\n            return this;\r\n        }\r\n    };\r\n    EventEmitter.prototype.trigger = function (type) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        this.hasType(type);\r\n        var events = this.events[type];\r\n        if (!events) {\r\n            return;\r\n        }\r\n        var len = events.length;\r\n        var eventsCopy = events.slice();\r\n        var ret;\r\n        for (var i = 0; i < len; i++) {\r\n            var event_1 = eventsCopy[i];\r\n            var fn = event_1[0], context = event_1[1];\r\n            if (fn) {\r\n                ret = fn.apply(context, args);\r\n                if (ret === true) {\r\n                    return ret;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.registerType = function (names) {\r\n        var _this = this;\r\n        names.forEach(function (type) {\r\n            _this.eventTypes[type] = type;\r\n        });\r\n    };\r\n    EventEmitter.prototype.destroy = function () {\r\n        this.events = {};\r\n        this.eventTypes = {};\r\n    };\r\n    EventEmitter.prototype.hasType = function (type) {\r\n        var types = this.eventTypes;\r\n        var isType = types[type] === type;\r\n        if (!isType) {\r\n            warn(\"EventEmitter has used unknown event type: \\\"\" + type + \"\\\", should be oneof [\" +\r\n                (\"\" + Object.keys(types).map(function (_) { return JSON.stringify(_); })) +\r\n                \"]\");\r\n        }\r\n    };\r\n    return EventEmitter;\r\n}());\r\nvar EventRegister = /** @class */ (function () {\r\n    function EventRegister(wrapper, events) {\r\n        this.wrapper = wrapper;\r\n        this.events = events;\r\n        this.addDOMEvents();\r\n    }\r\n    EventRegister.prototype.destroy = function () {\r\n        this.removeDOMEvents();\r\n        this.events = [];\r\n    };\r\n    EventRegister.prototype.addDOMEvents = function () {\r\n        this.handleDOMEvents(addEvent);\r\n    };\r\n    EventRegister.prototype.removeDOMEvents = function () {\r\n        this.handleDOMEvents(removeEvent);\r\n    };\r\n    EventRegister.prototype.handleDOMEvents = function (eventOperation) {\r\n        var _this = this;\r\n        var wrapper = this.wrapper;\r\n        this.events.forEach(function (event) {\r\n            eventOperation(wrapper, event.name, _this, !!event.capture);\r\n        });\r\n    };\r\n    EventRegister.prototype.handleEvent = function (e) {\r\n        var eventType = e.type;\r\n        this.events.some(function (event) {\r\n            if (event.name === eventType) {\r\n                event.handler(e);\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n    };\r\n    return EventRegister;\r\n}());\n\nvar EventHandler = /** @class */ (function () {\r\n    function EventHandler(indicator, options) {\r\n        this.indicator = indicator;\r\n        this.options = options;\r\n        this.bscroll = indicator.bscroll;\r\n        this.startEventRegister = new EventRegister(this.indicator.el, [\r\n            {\r\n                name: options.disableMouse ? 'touchstart' : 'mousedown',\r\n                handler: this._start.bind(this)\r\n            }\r\n        ]);\r\n        this.endEventRegister = new EventRegister(window, [\r\n            {\r\n                name: options.disableMouse ? 'touchend' : 'mouseup',\r\n                handler: this._end.bind(this)\r\n            }\r\n        ]);\r\n        this.hooks = new EventEmitter(['touchStart', 'touchMove', 'touchEnd']);\r\n    }\r\n    EventHandler.prototype._start = function (e) {\r\n        var point = (e.touches ? e.touches[0] : e);\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        this.initiated = true;\r\n        this.moved = false;\r\n        this.lastPoint = point[this.indicator.keysMap.pointPos];\r\n        var disableMouse = this.bscroll.options.disableMouse;\r\n        this.moveEventRegister = new EventRegister(window, [\r\n            {\r\n                name: disableMouse ? 'touchmove' : 'mousemove',\r\n                handler: this._move.bind(this)\r\n            }\r\n        ]);\r\n        this.hooks.trigger('touchStart');\r\n    };\r\n    EventHandler.prototype._move = function (e) {\r\n        var point = (e.touches ? e.touches[0] : e);\r\n        var pointPos = point[this.indicator.keysMap.pointPos];\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        var delta = pointPos - this.lastPoint;\r\n        this.lastPoint = pointPos;\r\n        if (!this.moved) {\r\n            this.hooks.trigger('touchMove', this.moved, delta);\r\n            this.moved = true;\r\n            return;\r\n        }\r\n        this.hooks.trigger('touchMove', this.moved, delta);\r\n    };\r\n    EventHandler.prototype._end = function (e) {\r\n        if (!this.initiated) {\r\n            return;\r\n        }\r\n        this.initiated = false;\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        this.moveEventRegister.destroy();\r\n        this.hooks.trigger('touchEnd', this.moved);\r\n    };\r\n    EventHandler.prototype.destroy = function () {\r\n        this.startEventRegister.destroy();\r\n        this.moveEventRegister && this.moveEventRegister.destroy();\r\n        this.endEventRegister.destroy();\r\n    };\r\n    return EventHandler;\r\n}());\n\nvar INDICATOR_MIN_LEN = 8;\r\nvar Indicator = /** @class */ (function () {\r\n    function Indicator(bscroll, options) {\r\n        this.bscroll = bscroll;\r\n        this.options = options;\r\n        this.keyVals = {\r\n            sizeRatio: 1,\r\n            maxPos: 0,\r\n            initialSize: 0\r\n        };\r\n        this.curPos = 0;\r\n        this.hooksHandlers = [];\r\n        this.wrapper = options.wrapper;\r\n        this.wrapperStyle = this.wrapper.style;\r\n        this.el = this.wrapper.children[0];\r\n        this.elStyle = this.el.style;\r\n        this.bscroll = bscroll;\r\n        this.direction = options.direction;\r\n        this.keysMap = this._getKeysMap();\r\n        if (options.fade) {\r\n            this.visible = 0;\r\n            this.wrapperStyle.opacity = '0';\r\n        }\r\n        else {\r\n            this.visible = 1;\r\n        }\r\n        this._listenHooks(options.fade, options.interactive);\r\n        this.refresh();\r\n    }\r\n    Indicator.prototype._listenHooks = function (fade, interactive) {\r\n        var _this = this;\r\n        var bscroll = this.bscroll;\r\n        var bscrollHooks = bscroll;\r\n        var translaterHooks = bscroll.scroller.translater.hooks;\r\n        var animaterHooks = bscroll.scroller.animater.hooks;\r\n        this._listen(bscrollHooks, 'refresh', this.refresh);\r\n        this._listen(translaterHooks, 'translate', this.updatePosAndSize);\r\n        this._listen(animaterHooks, 'time', function (time) {\r\n            _this.setTransitionTime(time);\r\n        });\r\n        this._listen(animaterHooks, 'timeFunction', function (ease) {\r\n            _this.setTransitionTimingFunction(ease);\r\n        });\r\n        if (fade) {\r\n            this._listen(bscrollHooks, 'scrollEnd', function () {\r\n                _this.fade();\r\n            });\r\n            this._listen(bscrollHooks, 'scrollStart', function () {\r\n                _this.fade(true);\r\n            });\r\n            // for mousewheel event\r\n            if (bscroll.eventTypes.mousewheelStart &&\r\n                bscroll.eventTypes.mousewheelEnd) {\r\n                this._listen(bscrollHooks, 'mousewheelStart', function () {\r\n                    _this.fade(true);\r\n                });\r\n                this._listen(bscrollHooks, 'mousewheelEnd', function () {\r\n                    _this.fade();\r\n                });\r\n            }\r\n        }\r\n        if (interactive) {\r\n            var disableMouse = this.bscroll.options.disableMouse;\r\n            this.eventHandler = new EventHandler(this, { disableMouse: disableMouse });\r\n            var eventHandlerHooks = this.eventHandler.hooks;\r\n            this._listen(eventHandlerHooks, 'touchStart', this.startHandler);\r\n            this._listen(eventHandlerHooks, 'touchMove', this.moveHandler);\r\n            this._listen(eventHandlerHooks, 'touchEnd', this.endHandler);\r\n        }\r\n    };\r\n    Indicator.prototype._getKeysMap = function () {\r\n        if (this.direction === \"vertical\" /* Vertical */) {\r\n            return {\r\n                hasScroll: 'hasVerticalScroll',\r\n                size: 'height',\r\n                wrapperSize: 'clientHeight',\r\n                scrollerSize: 'scrollerHeight',\r\n                maxScroll: 'maxScrollY',\r\n                pos: 'y',\r\n                pointPos: 'pageY',\r\n                translate: 'translateY'\r\n            };\r\n        }\r\n        return {\r\n            hasScroll: 'hasHorizontalScroll',\r\n            size: 'width',\r\n            wrapperSize: 'clientWidth',\r\n            scrollerSize: 'scrollerWidth',\r\n            maxScroll: 'maxScrollX',\r\n            pos: 'x',\r\n            pointPos: 'pageX',\r\n            translate: 'translateX'\r\n        };\r\n    };\r\n    Indicator.prototype.fade = function (visible) {\r\n        var time = visible ? 250 : 500;\r\n        this.wrapperStyle[style.transitionDuration] = time + 'ms';\r\n        this.wrapperStyle.opacity = visible ? '1' : '0';\r\n        this.visible = visible ? 1 : 0;\r\n    };\r\n    Indicator.prototype.refresh = function () {\r\n        var hasScroll = this.keysMap.hasScroll;\r\n        if (this._setShowBy(this.bscroll[hasScroll])) {\r\n            var _a = this.keysMap, wrapperSize = _a.wrapperSize, scrollerSize = _a.scrollerSize, maxScroll = _a.maxScroll;\r\n            this.keyVals = this._refreshKeyValues(this.wrapper[wrapperSize], this.bscroll[scrollerSize], this.bscroll[maxScroll]);\r\n            this.updatePosAndSize({\r\n                x: this.bscroll.x,\r\n                y: this.bscroll.y\r\n            });\r\n        }\r\n    };\r\n    Indicator.prototype._setShowBy = function (hasScroll) {\r\n        if (hasScroll) {\r\n            this.wrapper.style.display = '';\r\n            return true;\r\n        }\r\n        this.wrapper.style.display = 'none';\r\n        return false;\r\n    };\r\n    Indicator.prototype._refreshKeyValues = function (wrapperSize, scrollerSize, maxScroll) {\r\n        var initialSize = Math.max(Math.round((wrapperSize * wrapperSize) / (scrollerSize || wrapperSize || 1)), INDICATOR_MIN_LEN);\r\n        var maxPos = wrapperSize - initialSize;\r\n        // sizeRatio is negative\r\n        var sizeRatio = maxPos / maxScroll;\r\n        return {\r\n            initialSize: initialSize,\r\n            maxPos: maxPos,\r\n            sizeRatio: sizeRatio\r\n        };\r\n    };\r\n    Indicator.prototype.updatePosAndSize = function (endPoint) {\r\n        var _a = this._refreshPosAndSizeValue(endPoint, this.keyVals), pos = _a.pos, size = _a.size;\r\n        this.curPos = pos;\r\n        this._refreshPosAndSizeStyle(size, pos);\r\n    };\r\n    Indicator.prototype._refreshPosAndSizeValue = function (endPoint, keyVals) {\r\n        var posKey = this.keysMap.pos;\r\n        var sizeRatio = keyVals.sizeRatio, initialSize = keyVals.initialSize, maxPos = keyVals.maxPos;\r\n        var pos = Math.round(sizeRatio * endPoint[posKey]);\r\n        var size;\r\n        if (pos < 0) {\r\n            size = Math.max(initialSize + pos * 3, INDICATOR_MIN_LEN);\r\n            pos = 0;\r\n        }\r\n        else if (pos > maxPos) {\r\n            size = Math.max(initialSize - (pos - maxPos) * 3, INDICATOR_MIN_LEN);\r\n            pos = maxPos + initialSize - size;\r\n        }\r\n        else {\r\n            size = initialSize;\r\n        }\r\n        return {\r\n            pos: pos,\r\n            size: size\r\n        };\r\n    };\r\n    Indicator.prototype._refreshPosAndSizeStyle = function (size, pos) {\r\n        var _a = this.keysMap, translate = _a.translate, sizeKey = _a.size;\r\n        this.elStyle[sizeKey] = size + \"px\";\r\n        this.elStyle[style.transform] = translate + \"(\" + pos + \"px)\" + this.bscroll.options.translateZ;\r\n    };\r\n    Indicator.prototype.setTransitionTime = function (time) {\r\n        if (time === void 0) { time = 0; }\r\n        this.elStyle[style.transitionDuration] = time + 'ms';\r\n    };\r\n    Indicator.prototype.setTransitionTimingFunction = function (easing) {\r\n        this.elStyle[style.transitionTimingFunction] = easing;\r\n    };\r\n    Indicator.prototype.startHandler = function () {\r\n        this.setTransitionTime();\r\n        this.bscroll.trigger('beforeScrollStart');\r\n    };\r\n    Indicator.prototype.moveHandler = function (moved, delta) {\r\n        if (!moved) {\r\n            this.bscroll.trigger('scrollStart');\r\n        }\r\n        var newScrollPos = this._calScrollDesPos(this.curPos, delta, this.keyVals);\r\n        // TODO freeScroll ？\r\n        if (this.direction === \"vertical\" /* Vertical */) {\r\n            this.bscroll.scrollTo(this.bscroll.x, newScrollPos);\r\n        }\r\n        else {\r\n            this.bscroll.scrollTo(newScrollPos, this.bscroll.y);\r\n        }\r\n        this.bscroll.trigger('scroll', {\r\n            x: this.bscroll.x,\r\n            y: this.bscroll.y\r\n        });\r\n    };\r\n    Indicator.prototype._calScrollDesPos = function (curPos, delta, keyVals) {\r\n        var maxPos = keyVals.maxPos, sizeRatio = keyVals.sizeRatio;\r\n        var newPos = curPos + delta;\r\n        if (newPos < 0) {\r\n            newPos = 0;\r\n        }\r\n        else if (newPos > maxPos) {\r\n            newPos = maxPos;\r\n        }\r\n        return Math.round(newPos / sizeRatio);\r\n    };\r\n    Indicator.prototype.endHandler = function (moved) {\r\n        if (moved) {\r\n            this.bscroll.trigger('scrollEnd', {\r\n                x: this.bscroll.x,\r\n                y: this.bscroll.y\r\n            });\r\n        }\r\n    };\r\n    Indicator.prototype.destroy = function () {\r\n        if (this.options.interactive) {\r\n            this.eventHandler.destroy();\r\n        }\r\n        this.wrapper.parentNode.removeChild(this.wrapper);\r\n        this.hooksHandlers.forEach(function (item) {\r\n            var hooks = item[0];\r\n            var hooksName = item[1];\r\n            var handlerFn = item[2];\r\n            hooks.off(hooksName, handlerFn);\r\n        });\r\n        this.hooksHandlers.length = 0;\r\n    };\r\n    Indicator.prototype._listen = function (hooks, name, handler) {\r\n        hooks.on(name, handler, this);\r\n        this.hooksHandlers.push([hooks, name, handler]);\r\n    };\r\n    return Indicator;\r\n}());\n\nvar ScrollBar = /** @class */ (function () {\r\n    function ScrollBar(bscroll) {\r\n        this.indicators = [];\r\n        if (bscroll.options.scrollbar) {\r\n            this.indicators = this._initIndicators(bscroll);\r\n            bscroll.on('destroy', this.destroy, this);\r\n        }\r\n    }\r\n    ScrollBar.prototype._initIndicators = function (bscroll) {\r\n        var _this = this;\r\n        var _a = bscroll.options\r\n            .scrollbar, _b = _a.fade, fade = _b === void 0 ? true : _b, _c = _a.interactive, interactive = _c === void 0 ? false : _c;\r\n        var indicatorOption;\r\n        var scrolls = {\r\n            scrollX: \"horizontal\" /* Horizontal */,\r\n            scrollY: \"vertical\" /* Vertical */\r\n        };\r\n        var indicators = [];\r\n        Object.keys(scrolls).forEach(function (key) {\r\n            var direction = scrolls[key];\r\n            if (bscroll.options[key]) {\r\n                indicatorOption = {\r\n                    wrapper: _this._createIndicatorElement(direction),\r\n                    direction: direction,\r\n                    fade: fade,\r\n                    interactive: interactive\r\n                };\r\n                bscroll.wrapper.appendChild(indicatorOption.wrapper);\r\n                indicators.push(new Indicator(bscroll, indicatorOption));\r\n            }\r\n        });\r\n        return indicators;\r\n    };\r\n    ScrollBar.prototype._createIndicatorElement = function (direction) {\r\n        var scrollbarEl = document.createElement('div');\r\n        var indicatorEl = document.createElement('div');\r\n        scrollbarEl.style.cssText =\r\n            'position:absolute;z-index:9999;pointerEvents:none';\r\n        indicatorEl.style.cssText =\r\n            'box-sizing:border-box;position:absolute;background:rgba(0,0,0,0.5);border:1px solid rgba(255,255,255,0.9);border-radius:3px;';\r\n        indicatorEl.className = 'bscroll-indicator';\r\n        if (direction === 'horizontal') {\r\n            scrollbarEl.style.cssText += ';height:7px;left:2px;right:2px;bottom:0';\r\n            indicatorEl.style.height = '100%';\r\n            scrollbarEl.className = 'bscroll-horizontal-scrollbar';\r\n        }\r\n        else {\r\n            scrollbarEl.style.cssText += ';width:7px;bottom:2px;top:2px;right:1px';\r\n            indicatorEl.style.width = '100%';\r\n            scrollbarEl.className = 'bscroll-vertical-scrollbar';\r\n        }\r\n        scrollbarEl.style.cssText += ';overflow:hidden';\r\n        scrollbarEl.appendChild(indicatorEl);\r\n        return scrollbarEl;\r\n    };\r\n    ScrollBar.prototype.destroy = function () {\r\n        for (var _i = 0, _a = this.indicators; _i < _a.length; _i++) {\r\n            var indicator = _a[_i];\r\n            indicator.destroy();\r\n        }\r\n    };\r\n    ScrollBar.pluginName = 'scrollbar';\r\n    return ScrollBar;\r\n}());\n\nexport default ScrollBar;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_@better-scroll_scroll-bar@2.0.0-beta.6@@better-scroll/scroll-bar/dist/scroll-bar.esm.js\n// module id = bqXM\n// module chunks = 139","/*!\n * better-scroll / mouse-wheel\n * (c) 2016-2020 ustbhuangyi\n * Released under the MIT License.\n */\nfunction warn(msg) {\r\n    console.error(\"[BScroll warn]: \" + msg);\r\n}\n\n// ssr support\r\nvar inBrowser = typeof window !== 'undefined';\r\nvar ua = inBrowser && navigator.userAgent.toLowerCase();\r\nvar isWeChatDevTools = ua && /wechatdevtools/.test(ua);\r\nvar isAndroid = ua && ua.indexOf('android') > 0;\n\nfunction fixInboundValue(x, min, max) {\r\n    if (x < min) {\r\n        return min;\r\n    }\r\n    if (x > max) {\r\n        return max;\r\n    }\r\n    return x;\r\n}\n\nvar elementStyle = (inBrowser &&\r\n    document.createElement('div').style);\r\nvar vendor = (function () {\r\n    if (!inBrowser) {\r\n        return false;\r\n    }\r\n    var transformNames = {\r\n        webkit: 'webkitTransform',\r\n        Moz: 'MozTransform',\r\n        O: 'OTransform',\r\n        ms: 'msTransform',\r\n        standard: 'transform'\r\n    };\r\n    for (var key in transformNames) {\r\n        if (elementStyle[transformNames[key]] !== undefined) {\r\n            return key;\r\n        }\r\n    }\r\n    return false;\r\n})();\r\nfunction prefixStyle(style) {\r\n    if (vendor === false) {\r\n        return style;\r\n    }\r\n    if (vendor === 'standard') {\r\n        if (style === 'transitionEnd') {\r\n            return 'transitionend';\r\n        }\r\n        return style;\r\n    }\r\n    return vendor + style.charAt(0).toUpperCase() + style.substr(1);\r\n}\r\nfunction addEvent(el, type, fn, capture) {\r\n    el.addEventListener(type, fn, {\r\n        passive: false,\r\n        capture: !!capture\r\n    });\r\n}\r\nfunction removeEvent(el, type, fn, capture) {\r\n    el.removeEventListener(type, fn, {\r\n        capture: !!capture\r\n    });\r\n}\r\nvar cssVendor = vendor && vendor !== 'standard' ? '-' + vendor.toLowerCase() + '-' : '';\r\nvar transform = prefixStyle('transform');\r\nvar transition = prefixStyle('transition');\r\nvar hasPerspective = inBrowser && prefixStyle('perspective') in elementStyle;\r\nvar style = {\r\n    transform: transform,\r\n    transition: transition,\r\n    transitionTimingFunction: prefixStyle('transitionTimingFunction'),\r\n    transitionDuration: prefixStyle('transitionDuration'),\r\n    transitionDelay: prefixStyle('transitionDelay'),\r\n    transformOrigin: prefixStyle('transformOrigin'),\r\n    transitionEnd: prefixStyle('transitionEnd')\r\n};\r\nfunction preventDefaultExceptionFn(el, exceptions) {\r\n    for (var i in exceptions) {\r\n        if (exceptions[i].test(el[i])) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\n\nvar DEFAULT_INTERVAL = 100 / 60;\r\nvar windowCompat = inBrowser && window;\r\nfunction noop() { }\r\nvar requestAnimationFrame = (function () {\r\n    if (!inBrowser) {\r\n        /* istanbul ignore if */\r\n        return noop;\r\n    }\r\n    return (windowCompat.requestAnimationFrame ||\r\n        windowCompat.webkitRequestAnimationFrame ||\r\n        windowCompat.mozRequestAnimationFrame ||\r\n        windowCompat.oRequestAnimationFrame ||\r\n        // if all else fails, use setTimeout\r\n        function (callback) {\r\n            return window.setTimeout(callback, (callback.interval || DEFAULT_INTERVAL) / 2); // make interval as precise as possible.\r\n        });\r\n})();\r\nvar cancelAnimationFrame = (function () {\r\n    if (!inBrowser) {\r\n        /* istanbul ignore if */\r\n        return noop;\r\n    }\r\n    return (windowCompat.cancelAnimationFrame ||\r\n        windowCompat.webkitCancelAnimationFrame ||\r\n        windowCompat.mozCancelAnimationFrame ||\r\n        windowCompat.oCancelAnimationFrame ||\r\n        function (id) {\r\n            window.clearTimeout(id);\r\n        });\r\n})();\n\nvar EventRegister = /** @class */ (function () {\r\n    function EventRegister(wrapper, events) {\r\n        this.wrapper = wrapper;\r\n        this.events = events;\r\n        this.addDOMEvents();\r\n    }\r\n    EventRegister.prototype.destroy = function () {\r\n        this.removeDOMEvents();\r\n        this.events = [];\r\n    };\r\n    EventRegister.prototype.addDOMEvents = function () {\r\n        this.handleDOMEvents(addEvent);\r\n    };\r\n    EventRegister.prototype.removeDOMEvents = function () {\r\n        this.handleDOMEvents(removeEvent);\r\n    };\r\n    EventRegister.prototype.handleDOMEvents = function (eventOperation) {\r\n        var _this = this;\r\n        var wrapper = this.wrapper;\r\n        this.events.forEach(function (event) {\r\n            eventOperation(wrapper, event.name, _this, !!event.capture);\r\n        });\r\n    };\r\n    EventRegister.prototype.handleEvent = function (e) {\r\n        var eventType = e.type;\r\n        this.events.some(function (event) {\r\n            if (event.name === eventType) {\r\n                event.handler(e);\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n    };\r\n    return EventRegister;\r\n}());\n\nvar MouseWheel = /** @class */ (function () {\r\n    function MouseWheel(scroll) {\r\n        this.scroll = scroll;\r\n        this.wheelStart = false;\r\n        scroll.registerType(['mousewheelMove', 'mousewheelStart', 'mousewheelEnd']);\r\n        this.mouseWheelOpt = scroll.options.mouseWheel;\r\n        this.deltaCache = [];\r\n        this.registorEvent();\r\n        this.hooksFn = [];\r\n        this.registorHooks(scroll.hooks, 'destroy', this.destroy);\r\n    }\r\n    MouseWheel.prototype.destroy = function () {\r\n        this.eventRegistor.destroy();\r\n        window.clearTimeout(this.wheelEndTimer);\r\n        window.clearTimeout(this.wheelMoveTimer);\r\n        this.hooksFn.forEach(function (item) {\r\n            var hooks = item[0];\r\n            var hooksName = item[1];\r\n            var handlerFn = item[2];\r\n            hooks.off(hooksName, handlerFn);\r\n        });\r\n    };\r\n    MouseWheel.prototype.registorEvent = function () {\r\n        this.eventRegistor = new EventRegister(this.scroll.scroller.wrapper, [\r\n            {\r\n                name: 'wheel',\r\n                handler: this.wheelHandler.bind(this)\r\n            },\r\n            {\r\n                name: 'mousewheel',\r\n                handler: this.wheelHandler.bind(this)\r\n            },\r\n            {\r\n                name: 'DOMMouseScroll',\r\n                handler: this.wheelHandler.bind(this)\r\n            }\r\n        ]);\r\n    };\r\n    MouseWheel.prototype.wheelHandler = function (e) {\r\n        this.beforeHandler(e);\r\n        // start\r\n        if (!this.wheelStart) {\r\n            this.wheelStartHandler(e);\r\n            this.wheelStart = true;\r\n        }\r\n        // move\r\n        var delta = this.getWheelDelta(e);\r\n        this.wheelMove(delta);\r\n        // end\r\n        this.wheelStopDetactor(e, delta);\r\n    };\r\n    MouseWheel.prototype.wheelStartHandler = function (e) {\r\n        this.deltaCache = [];\r\n        this.scroll.trigger(this.scroll.eventTypes.mousewheelStart);\r\n    };\r\n    MouseWheel.prototype.wheelStopDetactor = function (e, delta) {\r\n        var _this = this;\r\n        window.clearTimeout(this.wheelEndTimer);\r\n        var delayTime = this.mouseWheelOpt.throttle || 400;\r\n        this.wheelEndTimer = window.setTimeout(function () {\r\n            _this.wheelStart = false;\r\n            window.clearTimeout(_this.wheelMoveTimer);\r\n            _this.wheelMoveTimer = 0;\r\n            _this.scroll.trigger(_this.scroll.eventTypes.mousewheelEnd, delta);\r\n        }, delayTime);\r\n    };\r\n    MouseWheel.prototype.getWheelDelta = function (e) {\r\n        var _a = this.mouseWheelOpt, _b = _a.speed, speed = _b === void 0 ? 20 : _b, _c = _a.invert, invert = _c === void 0 ? false : _c;\r\n        var wheelDeltaX = 0;\r\n        var wheelDeltaY = 0;\r\n        var direction = invert ? -1 /* Negative */ : 1 /* Positive */;\r\n        switch (true) {\r\n            case 'deltaX' in e:\r\n                if (e.deltaMode === 1) {\r\n                    wheelDeltaX = -e.deltaX * speed;\r\n                    wheelDeltaY = -e.deltaY * speed;\r\n                }\r\n                else {\r\n                    wheelDeltaX = -e.deltaX;\r\n                    wheelDeltaY = -e.deltaY;\r\n                }\r\n                break;\r\n            case 'wheelDeltaX' in e:\r\n                wheelDeltaX = (e.wheelDeltaX / 120) * speed;\r\n                wheelDeltaY = (e.wheelDeltaY / 120) * speed;\r\n                break;\r\n            case 'wheelDelta' in e:\r\n                wheelDeltaX = wheelDeltaY = (e.wheelDelta / 120) * speed;\r\n                break;\r\n            case 'detail' in e:\r\n                wheelDeltaX = wheelDeltaY = (-e.detail / 3) * speed;\r\n                break;\r\n        }\r\n        wheelDeltaX *= direction;\r\n        wheelDeltaY *= direction;\r\n        if (!this.scroll.scroller.scrollBehaviorY.hasScroll) {\r\n            wheelDeltaX = wheelDeltaY;\r\n            wheelDeltaY = 0;\r\n        }\r\n        if (!this.scroll.scroller.scrollBehaviorX.hasScroll) {\r\n            wheelDeltaX = 0;\r\n        }\r\n        var directionX = wheelDeltaX > 0\r\n            ? -1 /* Negative */\r\n            : wheelDeltaX < 0\r\n                ? 1 /* Positive */\r\n                : 0;\r\n        var directionY = wheelDeltaY > 0\r\n            ? -1 /* Negative */\r\n            : wheelDeltaY < 0\r\n                ? 1 /* Positive */\r\n                : 0;\r\n        return {\r\n            x: wheelDeltaX,\r\n            y: wheelDeltaY,\r\n            directionX: directionX,\r\n            directionY: directionY\r\n        };\r\n    };\r\n    MouseWheel.prototype.beforeHandler = function (e) {\r\n        var _a = this.scroll.options, preventDefault = _a.preventDefault, stopPropagation = _a.stopPropagation, preventDefaultException = _a.preventDefaultException;\r\n        if (preventDefault &&\r\n            !preventDefaultExceptionFn(e.target, preventDefaultException)) {\r\n            e.preventDefault();\r\n        }\r\n        if (stopPropagation) {\r\n            e.stopPropagation();\r\n        }\r\n    };\r\n    MouseWheel.prototype.wheelMove = function (delta) {\r\n        var _this = this;\r\n        if (this.mouseWheelOpt.debounce && this.wheelMoveTimer) {\r\n            this.deltaCache.push(delta);\r\n        }\r\n        else {\r\n            var cachedDelta = this.deltaCache.reduce(function (prev, current) {\r\n                return {\r\n                    x: prev.x + current.x,\r\n                    y: prev.y + current.y\r\n                };\r\n            }, { x: 0, y: 0 });\r\n            this.deltaCache = [];\r\n            var newX = this.scroll.x + Math.round(delta.x) + cachedDelta.x;\r\n            var newY = this.scroll.y + Math.round(delta.y) + cachedDelta.y;\r\n            var scrollBehaviorX = this.scroll.scroller.scrollBehaviorX;\r\n            var scrollBehaviorY = this.scroll.scroller.scrollBehaviorY;\r\n            newX = fixInboundValue(newX, scrollBehaviorX.maxScrollPos, scrollBehaviorX.minScrollPos);\r\n            newY = fixInboundValue(newY, scrollBehaviorY.maxScrollPos, scrollBehaviorY.minScrollPos);\r\n            if (!this.scroll.trigger(this.scroll.eventTypes.mousewheelMove, {\r\n                x: newX,\r\n                y: newY\r\n            })) {\r\n                var easeTime = this.getEaseTime();\r\n                if (newX !== this.scroll.x || newY !== this.scroll.y) {\r\n                    this.scroll.scrollTo(newX, newY, easeTime);\r\n                }\r\n            }\r\n            if (this.mouseWheelOpt.debounce) {\r\n                this.wheelMoveTimer = window.setTimeout(function () {\r\n                    _this.wheelMoveTimer = 0;\r\n                }, this.mouseWheelOpt.debounce);\r\n            }\r\n        }\r\n    };\r\n    MouseWheel.prototype.registorHooks = function (hooks, name, handler) {\r\n        hooks.on(name, handler, this);\r\n        this.hooksFn.push([hooks, name, handler]);\r\n    };\r\n    MouseWheel.prototype.getEaseTime = function () {\r\n        var DEFAULT_EASETIME = 300;\r\n        var SAFE_EASETIME = 100;\r\n        var easeTime = this.mouseWheelOpt.easeTime || DEFAULT_EASETIME;\r\n        // scrollEnd event will be triggered in every calling of scrollTo when easeTime is too small\r\n        // easeTime needs to be greater than 100\r\n        if (easeTime < SAFE_EASETIME) {\r\n            warn(\"easeTime should be greater than 100.\\n      If mouseWheel easeTime is too small, scrollEnd will be triggered many times.\");\r\n        }\r\n        return easeTime;\r\n    };\r\n    MouseWheel.pluginName = 'mouseWheel';\r\n    MouseWheel.applyOrder = \"pre\" /* Pre */;\r\n    return MouseWheel;\r\n}());\n\nexport default MouseWheel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_@better-scroll_mouse-wheel@2.0.0-beta.6@@better-scroll/mouse-wheel/dist/mouse-wheel.esm.js\n// module id = f6jV\n// module chunks = 139","/*!\n * JavaScript Cookie v2.2.1\n * https://github.com/js-cookie/js-cookie\n *\n * Copyright 2006, 2015 Klaus Hartl & Fagner Brack\n * Released under the MIT license\n */\n;(function (factory) {\n\tvar registeredInModuleLoader;\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (!registeredInModuleLoader) {\n\t\tvar OldCookies = window.Cookies;\n\t\tvar api = window.Cookies = factory();\n\t\tapi.noConflict = function () {\n\t\t\twindow.Cookies = OldCookies;\n\t\t\treturn api;\n\t\t};\n\t}\n}(function () {\n\tfunction extend () {\n\t\tvar i = 0;\n\t\tvar result = {};\n\t\tfor (; i < arguments.length; i++) {\n\t\t\tvar attributes = arguments[ i ];\n\t\t\tfor (var key in attributes) {\n\t\t\t\tresult[key] = attributes[key];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction decode (s) {\n\t\treturn s.replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent);\n\t}\n\n\tfunction init (converter) {\n\t\tfunction api() {}\n\n\t\tfunction set (key, value, attributes) {\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tattributes = extend({\n\t\t\t\tpath: '/'\n\t\t\t}, api.defaults, attributes);\n\n\t\t\tif (typeof attributes.expires === 'number') {\n\t\t\t\tattributes.expires = new Date(new Date() * 1 + attributes.expires * 864e+5);\n\t\t\t}\n\n\t\t\t// We're using \"expires\" because \"max-age\" is not supported by IE\n\t\t\tattributes.expires = attributes.expires ? attributes.expires.toUTCString() : '';\n\n\t\t\ttry {\n\t\t\t\tvar result = JSON.stringify(value);\n\t\t\t\tif (/^[\\{\\[]/.test(result)) {\n\t\t\t\t\tvalue = result;\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\n\t\t\tvalue = converter.write ?\n\t\t\t\tconverter.write(value, key) :\n\t\t\t\tencodeURIComponent(String(value))\n\t\t\t\t\t.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);\n\n\t\t\tkey = encodeURIComponent(String(key))\n\t\t\t\t.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent)\n\t\t\t\t.replace(/[\\(\\)]/g, escape);\n\n\t\t\tvar stringifiedAttributes = '';\n\t\t\tfor (var attributeName in attributes) {\n\t\t\t\tif (!attributes[attributeName]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tstringifiedAttributes += '; ' + attributeName;\n\t\t\t\tif (attributes[attributeName] === true) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Considers RFC 6265 section 5.2:\n\t\t\t\t// ...\n\t\t\t\t// 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n\t\t\t\t//     character:\n\t\t\t\t// Consume the characters of the unparsed-attributes up to,\n\t\t\t\t// not including, the first %x3B (\";\") character.\n\t\t\t\t// ...\n\t\t\t\tstringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n\t\t\t}\n\n\t\t\treturn (document.cookie = key + '=' + value + stringifiedAttributes);\n\t\t}\n\n\t\tfunction get (key, json) {\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar jar = {};\n\t\t\t// To prevent the for loop in the first place assign an empty array\n\t\t\t// in case there are no cookies at all.\n\t\t\tvar cookies = document.cookie ? document.cookie.split('; ') : [];\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < cookies.length; i++) {\n\t\t\t\tvar parts = cookies[i].split('=');\n\t\t\t\tvar cookie = parts.slice(1).join('=');\n\n\t\t\t\tif (!json && cookie.charAt(0) === '\"') {\n\t\t\t\t\tcookie = cookie.slice(1, -1);\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tvar name = decode(parts[0]);\n\t\t\t\t\tcookie = (converter.read || converter)(cookie, name) ||\n\t\t\t\t\t\tdecode(cookie);\n\n\t\t\t\t\tif (json) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tcookie = JSON.parse(cookie);\n\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t}\n\n\t\t\t\t\tjar[name] = cookie;\n\n\t\t\t\t\tif (key === name) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\t\t\t}\n\n\t\t\treturn key ? jar[key] : jar;\n\t\t}\n\n\t\tapi.set = set;\n\t\tapi.get = function (key) {\n\t\t\treturn get(key, false /* read as raw */);\n\t\t};\n\t\tapi.getJSON = function (key) {\n\t\t\treturn get(key, true /* read as json */);\n\t\t};\n\t\tapi.remove = function (key, attributes) {\n\t\t\tset(key, '', extend(attributes, {\n\t\t\t\texpires: -1\n\t\t\t}));\n\t\t};\n\n\t\tapi.defaults = {};\n\n\t\tapi.withConverter = init;\n\n\t\treturn api;\n\t}\n\n\treturn init(function () {});\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_js-cookie@2.2.1@js-cookie/src/js.cookie.js\n// module id = sqb0\n// module chunks = 139"],"mappings":"AACA;;;;;ACIA;;;;;;;;;;;;;;;;;;;ACgBA;;;;;ACfA;;;;;;;ACCA;;;;;ACGA;;;;;ACAA;;;;;;;ACHA","sourceRoot":""}