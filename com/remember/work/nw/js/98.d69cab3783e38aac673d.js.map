{"version":3,"file":"static/js/98.d69cab3783e38aac673d.js","sources":["webpack:///src/recycle-bin/map-废弃.vue"],"sourcesContent":["<template>\n\t<!-- 此页面和气象监测一模一样， 用于给ui提供图形绘制的，尽量不要在非测试页面更改，以免忘记改正 -->\n\t<div class=\"map-container\" v-title data-title=\"地图轮廓测试\">\n\t\t<div class=\"scene-map\" ref=\"sceneMap\"></div>\n\t\t<ul class=\"map-tabs\" v-if=\"tabs\">\n\t\t\t<li class=\"tab\" v-for=\"(tab, index) in tabs\" :class=\"{select: index === selectedGis}\" @click=\"handleSwitchGis(index)\">\n\t\t\t\t<img class=\"type-icon\" :src=\"tab.typeIcon\" :alt=\"`${tab.typeName}图标`\" />\n\t\t\t\t<span>{{ tab.typeName }}</span>\n\t\t\t</li>\n\t\t</ul>\n\t\t<p class=\"update-time\" v-if=\"showUpdateTime\">{{ getUpdateGisTime | znDateFormat('yyyy.MM.dd hh:mm') }}更新</p>\n\t\t<img class=\"legend\" v-if=\"showLegendPic\" :src=\"tabs[selectedGis].legendPic\" :alt=\"`${tabs[selectedGis].typeName}图例`\" />\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'scene',\n\tdata() {\n\t\treturn {\n\t\t\tareaLevel: null,\n\t\t\tareaId: null,\n\t\t\tmap: null,\n\t\t\ttabs: undefined,\n\t\t\tselectedGis: 0,\n\t\t\toldLayers: null,\n\t\t\toldImageLayers: null,\n\t\t\tserverTime: null\n\t\t};\n\t},\n\tcreated() {\n\t\tthis.getAreaId();\n\t},\n\tmounted() {\n\t\tthis.$nextTick(async () => {\n\t\t\tawait this.getCenter();\n\t\t\tawait this.setTabs();\n\t\t});\n\t},\n\tmethods: {\n\t\t/**\n\t\t * 获取中心点\n\t\t */\n\t\tasync getCenter() {\n\t\t\tconst district = await this.getDistrictExplorer();\n\t\t\tconst center = district.areaNode._data.geoData.parent.properties.center;\n\t\t\tthis.map = this._initMap({\n\t\t\t\tel: this.$refs.sceneMap,\n\t\t\t\tcenter: [center[1], center[0]]\n\t\t\t});\n\t\t\tthis.drawPolygon({\n\t\t\t\tdistrictExplorer: district.districtExplorer,\n\t\t\t\tareaNode: district.areaNode,\n\t\t\t\tmap: this.map\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * 初始化地图\n\t\t */\n\t\t_initMap({el, center}) {\n\t\t\t// 边界线>谷歌带导入卫星图>天地图卫星>高德2D地图\n\t\t\tvar boundLine = L.tileLayer.chinaProvider('TianDiTu.Realm.Map', {\n\t\t\t\t// 边境线\n\t\t\t\tid: 'layer_line',\n\t\t\t\tdetectRetina: false,\n\t\t\t\tzIndex: 5,\n\t\t\t\tmaxZoom: 21,\n\t\t\t\tminZoom: 5\n\t\t\t});\n\t\t\tvar satelliteMap = L.tileLayer.chinaProvider('Google.Satellite.Map', {\n\t\t\t\t// 谷歌卫星图无地名 (与谷歌地名标注资源 二选一)\n\t\t\t\tid: 'layer_google',\n\t\t\t\tdetectRetina: false,\n\t\t\t\tzIndex: 3, // 层级越高 越在上面\n\t\t\t\tmaxZoom: 21,\n\t\t\t\tminZoom: 5\n\t\t\t});\n\t\t\tvar ggAnnotionMap = L.tileLayer.chinaProvider('Google.Satellite.Annotion', {\n\t\t\t\t// 谷歌卫星图 有地名标注  (与谷歌无地名资源 二选一)\n\t\t\t\tid: 'layer_google',\n\t\t\t\tdetectRetina: false,\n\t\t\t\tzIndex: 3, // 层级越高 越在上面\n\t\t\t\tmaxZoom: 21,\n\t\t\t\tminZoom: 5\n\t\t\t});\n\t\t\tvar tianDiSatelliteMap = L.tileLayer.chinaProvider('TianDiTu.Satellite.Map', {\n\t\t\t\t// 天地卫星图\n\t\t\t\tid: 'layer_tiandi',\n\t\t\t\tdetectRetina: false,\n\t\t\t\tzIndex: 2,\n\t\t\t\tmaxZoom: 18,\n\t\t\t\tminZoom: 5\n\t\t\t});\n\t\t\tvar gaode2d = L.tileLayer.chinaProvider('GaoDe.Normal.Map', {\n\t\t\t\t// 高德 2D 地图\n\t\t\t\tid: 'layer_gaodeLabel',\n\t\t\t\tdetectRetina: false,\n\t\t\t\tzIndex: 1,\n\t\t\t\tmaxZoom: 18,\n\t\t\t\tminZoom: 5\n\t\t\t});\n\t\t\tconst map = L.map(el, {\n\t\t\t\tlayers: [boundLine, satelliteMap, tianDiSatelliteMap, gaode2d],\n\t\t\t\tcenter: center,\n\t\t\t\tzoom: 9,\n\t\t\t\tzoomControl: false,\n\t\t\t\tattributionControl: false,\n\t\t\t\tdragging: true,\n\t\t\t\ttouchZoom: false,\n\t\t\t\tscrollWheelZoom: true,\n\t\t\t\tdoubleClickZoom: true,\n\t\t\t\tboxZoom: false,\n\t\t\t\ttap: false,\n\t\t\t\tkeyboard: true,\n\t\t\t\tmaxZoom: 21,\n\t\t\t\tminZoom: 5\n\t\t\t});\n\t\t\treturn map;\n\t\t},\n\n\t\t/**\n\t\t *  获取区域id\n\t\t */\n\t\tgetAreaId() {\n\t\t\t// 获取区域id\n\t\t\tlet areaId = null;\n\t\t\tconst govSubject = JSON.parse(localStorage.getItem('govGovernmentSubjectVO'));\n\t\t\tthis.areaLevel = govSubject.subjectLevel;\n\t\t\tswitch (this.areaLevel) {\n\t\t\t\tcase 1:\n\t\t\t\t\tareaId = govSubject.provinceId;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tareaId = govSubject.cityId;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tareaId = govSubject.countyId;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.areaId = areaId;\n\t\t},\n\n\t\t/**\n\t\t * 获取行政区\n\t\t */\n\t\tasync getDistrictExplorer() {\n\t\t\tlet _district = null;\n\t\t\tawait new Promise((resolve, reject) => {\n\t\t\t\tif (!window.AMapUI) {\n\t\t\t\t\treject('需要引入高德jsapi\\nhttps://webapi.amap.com/maps?v=1.4.15&key=\"key\"\\nhttps://webapi.amap.com/ui/1.0/main.js');\n\t\t\t\t}\n\t\t\t\tAMapUI.loadUI(['geo/DistrictExplorer'], DistrictExplorer => {\n\t\t\t\t\tconst districtExplorer = new DistrictExplorer();\n\t\t\t\t\tdistrictExplorer.loadAreaNode(this.areaId, (err, areaNode) => {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_district = {\n\t\t\t\t\t\t\tareaNode,\n\t\t\t\t\t\t\tdistrictExplorer\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tresolve(_district);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn _district;\n\t\t},\n\n\t\t/**\n\t\t * 绘制轮廓\n\t\t */\n\t\tdrawPolygon({districtExplorer, areaNode, map}) {\n\t\t\t//  绘制父级区划，仅用黑色描边\n\t\t\tL.geoJSON(areaNode.getParentFeature(), {\n\t\t\t\tstyle() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcolor: '#FFFF33',\n\t\t\t\t\t\tfillColor: '#009cba',\n\t\t\t\t\t\tfillOpacity: 0,\n\t\t\t\t\t\tfillRule: 'evenodd',\n\t\t\t\t\t\tclassName: 'polygonbox',\n\t\t\t\t\t\tlineJoin: 'miter',\n\t\t\t\t\t\tweight: 3\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}).addTo(map);\n\t\t},\n\n\t\t// 获取气象监测列表\n\t\tasync getGisList() {\n\t\t\tlet result = null;\n\t\t\tawait new Promise((resolve, reject) => {\n\t\t\t\tthis.$ajax.post(this.$api.scene.govGisTypeList, {}).then(({data: res}) => {\n\t\t\t\t\tif (res.respCode === 0) {\n\t\t\t\t\t\tthis.serverTime = res.curDate;\n\t\t\t\t\t\tresult = res.obj;\n\t\t\t\t\t\treturn resolve(res.obj);\n\t\t\t\t\t}\n\t\t\t\t\treject();\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn result;\n\t\t},\n\n\t\t// 设置tabs\n\t\tasync setTabs() {\n\t\t\tconst tabs = await this.getGisList();\n\t\t\tthis.tabs = tabs.map(item => {\n\t\t\t\treturn {\n\t\t\t\t\tlegendPic: item.imgUrl, // 图例图片\n\t\t\t\t\ttypeIcon: item.typeIcon, // 每一项的图标\n\t\t\t\t\ttypeName: item.typeName, // 每一项的名称\n\t\t\t\t\tgisPics: item.typeImgVOS // 每一项的gis的名字\n\t\t\t\t};\n\t\t\t});\n\t\t\tthis.handleSwitchGis(0);\n\t\t},\n\n\t\t/**\n\t\t * 切换gis 切换tabs\n\t\t * author：NewBlue\n\t\t * @param index\n\t\t */\n\t\thandleSwitchGis(index) {\n\t\t\ttry {\n\t\t\t\tconst urlReg = /(http[s]?:\\/\\/)[a-zA-Z0-9\\.\\/\\_\\-\\:]*(?=\\?)/;\n\t\t\t\tconst layersReg = /(layers=)([a-zA-Z0-9\\%\\_\\-]*)(\\&)/;\n\t\t\t\tconst gisUrl = this.tabs[index].gisPics[0].gisImgUrl;\n\t\t\t\tconst pngImgUrl = this.tabs[index].gisPics[0].pngImgUrl;\n\t\t\t\t// console.log(pngImgUrl);\n\t\t\t\tlet wmsLayer, group, coord;\n\t\t\t\tif (gisUrl) {\n\t\t\t\t\twmsLayer = L.tileLayer.wms(gisUrl.match(urlReg)[0], {\n\t\t\t\t\t\tlayers: decodeURIComponent(gisUrl.match(layersReg)[2]), // 需要加载的图层\n\t\t\t\t\t\tformat: 'image/png', // 返回的数据格式\n\t\t\t\t\t\ttransparent: true,\n\t\t\t\t\t\tcrs: L.CRS.EPSG4326,\n\t\t\t\t\t\tmaxZoom: 20,\n\t\t\t\t\t\tminZoom: 5,\n\t\t\t\t\t\tzIndex: 9\n\t\t\t\t\t});\n\t\t\t\t\tgroup = L.layerGroup();\n\n\t\t\t\t\t// 上一个图片层移除\n\t\t\t\t\tif (this.oldImageLayers) {\n\t\t\t\t\t\tthis.oldImageLayers.remove();\n\t\t\t\t\t\tthis.oldImageLayers = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// 上一个瓦片层移除\n\t\t\t\t\tif (this.oldLayers) {\n\t\t\t\t\t\tthis.oldLayers.remove();\n\t\t\t\t\t}\n\t\t\t\t\tgroup.addLayer(wmsLayer);\n\t\t\t\t\t// 本次加载的瓦片图层\n\t\t\t\t\tthis.oldLayers = wmsLayer;\n\t\t\t\t} else {\n\t\t\t\t\tcoord = this.tabs[index].gisPics[0].imgPath.split(',').map(Number);\n\t\t\t\t\tgroup = L.imageOverlay(\n\t\t\t\t\t\tpngImgUrl,\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t[coord[3], coord[2]],\n\t\t\t\t\t\t\t[coord[1], coord[0]]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\topacity: 1,\n\t\t\t\t\t\t\tmaxZoom: 20,\n\t\t\t\t\t\t\tminZoom: 5,\n\t\t\t\t\t\t\tzIndex: 9,\n\t\t\t\t\t\t\tpane: 'tilePane' // 可以将窗口设置与tilePane同层这样就可以设置层级\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t\t// 上一个图片层移除\n\t\t\t\t\tif (this.oldImageLayers) {\n\t\t\t\t\t\tthis.oldImageLayers.remove();\n\t\t\t\t\t}\n\n\t\t\t\t\t// 上一个瓦片层移除\n\t\t\t\t\tif (this.oldLayers) {\n\t\t\t\t\t\tthis.oldLayers.remove();\n\t\t\t\t\t\tthis.oldLayers = null;\n\t\t\t\t\t}\n\t\t\t\t\tthis.oldImageLayers = group;\n\t\t\t\t}\n\n\t\t\t\tgroup.addTo(this.map);\n\t\t\t\t// 选中的标签\n\t\t\t\tthis.selectedGis = index;\n\t\t\t} catch (e) {\n\t\t\t\tconsole.warn('数据配置不正确', e);\n\t\t\t} finally {\n\t\t\t\t// console.log('数据配置不正确，无法切换');\n\t\t\t}\n\t\t}\n\t},\n\tcomputed: {\n\t\tgetUpdateGisTime() {\n\t\t\tconst minutes = new Date(this.serverTime).getMinutes();\n\t\t\tconst tab = this.tabs[this.selectedGis];\n\t\t\tlet updateTime = new Date(this.serverTime).setMinutes(parseInt(minutes / 10) * 10);\n\t\t\tif (tab.gisPics[0]) {\n\t\t\t\tupdateTime = tab.gisPics[0].gisDataUpdateTime || updateTime;\n\t\t\t}\n\n\t\t\treturn updateTime;\n\t\t},\n\t\tshowUpdateTime() {\n\t\t\treturn this.tabs && this.tabs[this.selectedGis].gisPics.length > 0;\n\t\t},\n\t\tshowLegendPic() {\n\t\t\treturn this.tabs && this.tabs[this.selectedGis].legendPic;\n\t\t}\n\t}\n};\n</script>\n\n<style scoped lang=\"scss\">\n.map-container {\n\t&,\n\t.scene-map {\n\t\tposition: fixed;\n\t\ttop: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\tleft: 0;\n\t\tz-index: 90;\n\t}\n\n\t> .map-tabs {\n\t\tposition: absolute;\n\t\ttop: 150px;\n\t\tleft: 70px;\n\t\tz-index: 99;\n\n\t\t.tab {\n\t\t\tcolor: #fff;\n\t\t\twidth: 120px;\n\t\t\theight: 40px;\n\t\t\tbackground-color: rgba(0, 0, 0, 0.7);\n\t\t\tborder-radius: 20px;\n\t\t\tfont-size: 14px;\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tpadding: 0 10px;\n\t\t\tbox-sizing: border-box;\n\t\t\tcursor: pointer;\n\t\t\tuser-select: none;\n\n\t\t\t+ .tab {\n\t\t\t\tmargin-top: 24px;\n\t\t\t}\n\n\t\t\t.iconfont {\n\t\t\t\tfont-size: 22px;\n\t\t\t\tmargin-right: 5px;\n\t\t\t}\n\n\t\t\t.type-icon {\n\t\t\t\tmax-width: 30px;\n\t\t\t\tmax-height: 30px;\n\t\t\t\tmargin-right: 5px;\n\t\t\t}\n\n\t\t\t&.select {\n\t\t\t\tbackground-color: #f1a637;\n\t\t\t}\n\t\t}\n\t}\n\n\t.update-time {\n\t\tpadding: 0 20px;\n\t\theight: 30px;\n\t\tline-height: 30px;\n\t\tposition: absolute;\n\t\tbottom: 30px;\n\t\tleft: 50%;\n\t\ttransform: translateX(-50%);\n\t\tz-index: 99;\n\t\tcolor: #fff;\n\t\tfont-size: 14px;\n\t\tbox-sizing: border-box;\n\t\tborder-radius: 15px;\n\t\tbackground-color: rgba(0, 0, 0, 0.7);\n\t\tuser-select: none;\n\t\tcursor: pointer;\n\t}\n\n\t.legend {\n\t\tposition: absolute;\n\t\tz-index: 99;\n\t\tbottom: 30px;\n\t\tright: 38px;\n\t\tborder: 0 none;\n\t\tbox-sizing: border-box;\n\t}\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/recycle-bin/map-废弃.vue"],"mappings":"AAgBA","sourceRoot":""}