{"version":3,"file":"static/js/93.347fa5b88f7687e29cca.js","sources":["webpack:///src/pages/produce.vue"],"sourcesContent":["<template>\r\n  <!-- 农产品监管 -->\r\n  <div class=\"layout-container\" v-title data-title=\"农产品监管\">\r\n    <div class=\"item-container\">\r\n      <div class=\"s-item-wrap\">\r\n        <div class=\"_s-item-wrap\">\r\n          <freetek-box title=\"历史实际产量\">\r\n            <div class=\"chart-item-wrap\">\r\n              <div class=\"chart-item\" ref=\"historyYieldChart\">\r\n              </div>\r\n              <el-button\r\n                type=\"text\"\r\n                class=\"view-detail\"\r\n                @click=\"viewDetail('historyDialogVisible')\"\r\n              >\r\n                明细\r\n                <i class=\"el-icon-d-arrow-right\"></i>\r\n              </el-button>\r\n              <el-select\r\n                v-model=\"historyYieldSubject\"\r\n                placeholder=\"请选择\"\r\n                class=\"subject-select\"\r\n                ref=\"cropSearch\"\r\n                @change=\"setHistoryYield\"\r\n              >\r\n                <el-option\r\n                  v-for=\"(item, index) in goodsSubject\"\r\n                  :key=\"index\"\r\n                  :label=\"item.name\"\r\n                  :value=\"item.id\">\r\n                </el-option>\r\n              </el-select>\r\n            </div>\r\n          </freetek-box>\r\n        </div>\r\n      </div>\r\n      <div class=\"s-item-wrap\">\r\n        <div class=\"_s-item-wrap\">\r\n          <freetek-box title=\"未来预计产量\">\r\n            <div class=\"chart-item-wrap\">\r\n              <div class=\"chart-item\" ref=\"futureYieldChart\">\r\n              </div>\r\n              <el-button\r\n                type=\"text\"\r\n                class=\"view-detail\"\r\n                @click=\"viewDetail('predictDialogVisible')\"\r\n              >\r\n                明细\r\n                <i class=\"el-icon-d-arrow-right\"></i>\r\n              </el-button>\r\n              <el-select\r\n                v-model=\"futureYieldSubject\"\r\n                placeholder=\"请选择\"\r\n                class=\"subject-select\"\r\n                ref=\"cropSearch\"\r\n                @change=\"setFutureYield\"\r\n              >\r\n                <el-option\r\n                  v-for=\"(item, index) in goodsSubject\"\r\n                  :key=\"index\"\r\n                  :label=\"item.name\"\r\n                  :value=\"item.id\">\r\n                </el-option>\r\n              </el-select>\r\n            </div>\r\n          </freetek-box>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"b-item-wrap\">\r\n      <div class=\"_b-item-wrap\">\r\n        <freetek-box\r\n          title=\"农产品溯源\"\r\n          size=\"big\"\r\n        >\r\n          <div class=\"tra-inquiry-bar\">\r\n            <div class=\"item-tra\" v-for=\"(item, index) in farmTraData\" :key=\"index\">\r\n              <p class=\"item-title\">{{item.title}}</p>\r\n              <div class=\"item-num\">\r\n                <count-to :startVal=\"item.start\" :endVal=\"item.end\"></count-to>\r\n              </div>\r\n              <p class=\"relatively\">{{item.lastDes}}：{{item.last}} <i class=\"iconfont\"\r\n                                                                      :class=\"[item.last < item.end ? 'icon-shang up' : 'icon-xia down']\"\r\n                                                                      v-if=\"item.last !== item.end\"></i></p>\r\n            </div>\r\n          </div>\r\n          <div class=\"_tra-search-line\">\r\n            <div class=\"char-tabs\">\r\n              <div class=\"tab\" :class=\"{select: item.selected}\" v-for=\"(item, index) in traTabs\"\r\n                   @click=\"switchTraTerm(index + 1)\" :key=\"index\">{{item.tab}}\r\n              </div>\r\n            </div>\r\n            <div class=\"tra-search-line\" ref=\"traSearchChart\">\r\n            </div>\r\n          </div>\r\n          <div class=\"tra-search-enter\"><a :href=\"traUrl\" target=\"_blank\">溯源查询</a></div>\r\n        </freetek-box>\r\n      </div>\r\n    </div>\r\n    <div class=\"item-container\">\r\n      <div class=\"s-item-wrap\">\r\n        <div class=\"_s-item-wrap\">\r\n          <freetek-box title=\"检测与追溯\">\r\n            <div class=\"chart-item-wrap\">\r\n              <div class=\"chart-item\" ref=\"checkTraChart\">\r\n\r\n              </div>\r\n              <el-select\r\n                v-model=\"checkTraSubject\"\r\n                placeholder=\"请选择\"\r\n                class=\"subject-select\"\r\n                ref=\"cropSearch\"\r\n                @change=\"setCheckTraChart\"\r\n              >\r\n                <el-option\r\n                  v-for=\"(item, index) in goodsSubject\"\r\n                  :key=\"index\"\r\n                  :label=\"item.name\"\r\n                  :value=\"item.id\">\r\n                </el-option>\r\n              </el-select>\r\n            </div>\r\n          </freetek-box>\r\n        </div>\r\n      </div>\r\n      <div class=\"s-item-wrap\">\r\n        <div class=\"_s-item-wrap\">\r\n          <freetek-box title=\"产量等级分布\">\r\n            <div class=\"chart-item-wrap\">\r\n              <div class=\"chart-item\" ref=\"cropDistributionChart\">\r\n\r\n              </div>\r\n              <el-select\r\n                v-model=\"cropDistributionSubject\"\r\n                placeholder=\"请选择\"\r\n                class=\"subject-select\"\r\n                ref=\"cropSearch\"\r\n                @change=\"setCropDistributionChart\"\r\n              >\r\n                <el-option\r\n                  v-for=\"(item, index) in goodsSubject\"\r\n                  :key=\"index\"\r\n                  :label=\"item.name\"\r\n                  :value=\"item.id\">\r\n                </el-option>\r\n              </el-select>\r\n            </div>\r\n          </freetek-box>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <el-dialog\r\n      :visible.sync=\"historyDialogVisible\"\r\n      :show-close=\"true\"\r\n      :close-on-click-modal=\"false\"\r\n      top=\"calc((100vh - 580px) / 2)\"\r\n      custom-class=\"detail-dialog\"\r\n    >\r\n      <freetek-box\r\n        title=\"历史产量\"\r\n        size=\"big\"\r\n      >\r\n        <div class=\"head-info\">\r\n          <div class=\"select-wrap\">\r\n            <el-date-picker\r\n              type=\"month\"\r\n              v-model=\"historyDate\"\r\n              format=\"yyyy.MM\"\r\n              :picker-options=\"flowDateRange\"\r\n              :clearable=\"false\"\r\n              placeholder=\"选择月\"\r\n              @change=\"getHisDetailYield(historyYieldDetailSubject)\"\r\n            >\r\n            </el-date-picker>\r\n            <el-select\r\n              v-model=\"historyYieldDetailSubject\"\r\n              placeholder=\"请选择\"\r\n              class=\"subject-select\"\r\n              ref=\"cropSearch\"\r\n              @change=\"getHisDetailYield\"\r\n            >\r\n              <el-option\r\n                v-for=\"(item, index) in goodsSubject\"\r\n                :key=\"index\"\r\n                :label=\"item.name\"\r\n                :value=\"item.id\">\r\n              </el-option>\r\n            </el-select>\r\n          </div>\r\n          <p class=\"yield-info\">\r\n            {{historyDate | dateFormat(\"yyyy年MM月\")}}实际产量：{{historyTotal}}\r\n          </p>\r\n        </div>\r\n        <div class=\"table-container\">\r\n          <el-table\r\n            :data=\"historyTableData\"\r\n            stripe\r\n            height=\"100%\"\r\n            width=\"100%\"\r\n            ref=\"historyTable\"\r\n          >\r\n            <el-table-column\r\n              prop=\"cropType\"\r\n              label=\"种类\"\r\n            >\r\n            </el-table-column>\r\n            <el-table-column\r\n              prop=\"actualProduction\"\r\n              :label=\"`实际产量（${goodsSubjectUnit[historyYieldDetailSubject]}）`\"\r\n              align=\"right\"\r\n              width=\"250px\"\r\n            >\r\n            </el-table-column>\r\n          </el-table>\r\n        </div>\r\n      </freetek-box>\r\n    </el-dialog>\r\n    <el-dialog\r\n      :visible.sync=\"predictDialogVisible\"\r\n      :show-close=\"true\"\r\n      :close-on-click-modal=\"false\"\r\n      top=\"calc((100vh - 580px) / 2)\"\r\n      custom-class=\"detail-dialog\"\r\n    >\r\n      <freetek-box\r\n        title=\"预计产量\"\r\n        size=\"big\"\r\n      >\r\n        <div class=\"head-info\">\r\n\r\n          <div class=\"select-wrap\">\r\n\r\n            <el-date-picker\r\n              type=\"month\"\r\n              v-model=\"predictDate\"\r\n              :clearable=\"false\"\r\n              format=\"yyyy.MM\"\r\n              :picker-options=\"predictDateRange\"\r\n              placeholder=\"选择月\"\r\n              @change=\"getFutureDetailYield(futureYieldDetailSubject)\"\r\n            >\r\n            </el-date-picker>\r\n            <el-select\r\n              v-model=\"futureYieldDetailSubject\"\r\n              placeholder=\"请选择\"\r\n              class=\"subject-select\"\r\n              ref=\"cropSearch\"\r\n              @change=\"getFutureDetailYield\"\r\n            >\r\n              <el-option\r\n                v-for=\"(item, index) in goodsSubject\"\r\n                :key=\"index\"\r\n                :label=\"item.name\"\r\n                :value=\"item.id\">\r\n              </el-option>\r\n            </el-select>\r\n          </div>\r\n          <p class=\"yield-info\">\r\n            {{predictDate | dateFormat(\"yyyy年MM月\")}}预计产量：{{predictTotal}}\r\n          </p>\r\n        </div>\r\n        <div class=\"table-container\">\r\n          <el-table\r\n            :data=\"predictTableData\"\r\n            stripe\r\n            height=\"100%\"\r\n            width=\"100%\"\r\n            ref=\"predictTable\"\r\n          >\r\n            <el-table-column\r\n              prop=\"cropType\"\r\n              label=\"种类\"\r\n            >\r\n            </el-table-column>\r\n            <el-table-column\r\n              prop=\"predictProduction\"\r\n              :label=\"`预计产量（${goodsSubjectUnit[futureYieldDetailSubject]}）`\"\r\n              width=\"250px\"\r\n              align=\"right\"\r\n            >\r\n            </el-table-column>\r\n          </el-table>\r\n        </div>\r\n      </freetek-box>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport freetekBox from '../components/freetekBox';\r\nimport countTo from '../components/common/countTo';\r\nimport {\r\n  _initBScroll,\r\n  dateFormat,\r\n  prevMonth,\r\n  maxDecimalPlaces,\r\n  unitTranslate,\r\n  jumpDay,\r\n  areaLevelCorAreaId\r\n} from '@/common/fn';\r\n\r\nconst farmAreaInfo = areaLevelCorAreaId();\r\n\r\n// echarts 超级变量含义 {a} series.name, {b} data.name {c} data.value {d} data%\r\nconst color = [\r\n  '#F0C87B',\r\n  '#A6D889',\r\n  '#DD90CB',\r\n  '#9173FE',\r\n  '#4DCBFF',\r\n  '#1DE9B6',\r\n  '#ca8622',\r\n  '#bda29a',\r\n  '#6e7074',\r\n  '#546570',\r\n  '#c4ccd3'\r\n];\r\nconst barOption = {\r\n  grid: {\r\n    show: true,\r\n    borderColor: '#0D394A',\r\n    bottom: 32,\r\n    left: 45,\r\n    right: 20\r\n  },\r\n  color: color,\r\n  tooltip: {\r\n    show: true,\r\n    trigger: 'item',\r\n    textStyle: {\r\n      fontSize: 12,\r\n      color: '#ffffff'\r\n    },\r\n    formatter (v) {\r\n      return `${v.name}<br/>${maxDecimalPlaces({ value: v.value })}`;\r\n    }\r\n  },\r\n  title: {\r\n    text: '单位：',\r\n    left: 'center',\r\n    top: 35,\r\n    textStyle: {\r\n      fontSize: 12,\r\n      fontWeight: 'normal',\r\n      color: '#6DC1CB',\r\n      height: 20,\r\n      lineHeight: 14,\r\n      width: 70\r\n    },\r\n    backgroundColor: '#031424',\r\n    borderRadius: 10,\r\n    padding: [4, 8]\r\n  },\r\n  xAxis: {\r\n    data: [],\r\n    axisLabel: {\r\n      textStyle: {\r\n        color: '#6DC1CB',\r\n        fontSize: 12\r\n      },\r\n      align: 'center'\r\n    },\r\n    axisTick: {\r\n      show: false\r\n    },\r\n    axisLine: {\r\n      show: true,\r\n      lineStyle: {\r\n        color: '#0D394A'\r\n      }\r\n    },\r\n    z: 10\r\n  },\r\n  yAxis: {\r\n    // offset: -120,\r\n    // name: '单位：吨',\r\n    // nameTextStyle: {\r\n    //   fontSize: 12,\r\n    //   color: '#6DC1CB',\r\n    //   height: 20,\r\n    //   lineHeight: 12,\r\n    //   padding: [4, 8, 4, 8],\r\n    //   borderRadius: 10,\r\n    //   backgroundColor: '#031424',\r\n    //   verticalAlign: 'middle'\r\n    // },\r\n    // nameGap: 5,\r\n    axisLine: {\r\n      show: false,\r\n      lineStyle: {\r\n        color: '#0D394A'\r\n      }\r\n    },\r\n    axisTick: {\r\n      show: false\r\n    },\r\n    splitLine: {\r\n      show: true,\r\n      lineStyle: {\r\n        color: '#0D394A'\r\n      }\r\n    },\r\n    axisLabel: {\r\n      textStyle: {\r\n        color: '#6DC1CB',\r\n        fontSize: 12\r\n      }\r\n    }\r\n  },\r\n  series: [\r\n    {\r\n      type: 'bar',\r\n      barWidth: 24,\r\n      data: []\r\n    }\r\n  ]\r\n};\r\nconst lineOption = {\r\n  title: {\r\n    show: true,\r\n    text: '溯源查询趋势图',\r\n    textStyle: {\r\n      fontSize: 18,\r\n      color: '#00F6FF'\r\n    },\r\n    left: 'center'\r\n  },\r\n  grid: {\r\n    show: false,\r\n    borderColor: '#fff',\r\n    bottom: 30,\r\n    right: 60\r\n  },\r\n  tooltip: {\r\n    show: true,\r\n    trigger: 'axis',\r\n    textStyle: {\r\n      fontSize: 12,\r\n      color: '#ffffff'\r\n    },\r\n    formatter (value) {\r\n      const s = value.map((item) => {\r\n        return `${item.seriesName}: ${maxDecimalPlaces({ value: item.value })}次`;\r\n      });\r\n      return `${value[0].axisValue}<br/>${s.join('<br />')}`;\r\n    }\r\n  },\r\n  color: ['#00F6FF'],\r\n  xAxis: {\r\n    data: [],\r\n    boundaryGap: true,\r\n    axisLabel: {\r\n      textStyle: {\r\n        color: '#6DC1CB',\r\n        fontSize: 12\r\n      },\r\n      align: 'center'\r\n    },\r\n    axisTick: {\r\n      show: false\r\n    },\r\n    axisLine: {\r\n      show: true,\r\n      lineStyle: {\r\n        color: '#0D394A'\r\n      }\r\n    },\r\n    z: 10\r\n  },\r\n  yAxis: {\r\n    name: '单位：次',\r\n    nameTextStyle: {\r\n      fontSize: 14,\r\n      color: '#6DC1CB',\r\n      padding: [0, 0, 0, 40]\r\n    },\r\n    axisLine: {\r\n      show: false,\r\n      lineStyle: {\r\n        color: '#0D394A'\r\n      }\r\n    },\r\n    axisTick: {\r\n      show: false\r\n    },\r\n    splitLine: {\r\n      show: true,\r\n      lineStyle: {\r\n        color: 'rgba(50, 206, 187, 0.15)'\r\n      }\r\n    },\r\n    axisLabel: {\r\n      textStyle: {\r\n        color: '#6DC1CB',\r\n        fontSize: 12\r\n      }\r\n    }\r\n  },\r\n  series: [\r\n    {\r\n      data: [],\r\n      type: 'line',\r\n      smooth: true,\r\n      symbolSize: 0,\r\n      areaStyle: {\r\n        color: {\r\n          type: 'linear',\r\n          x: 0,\r\n          y: 0,\r\n          x2: 0,\r\n          y2: 1,\r\n          colorStops: [{\r\n            offset: 0, color: 'rgba(0,246,255,0.5)' // 0% 处的颜色\r\n          }, {\r\n            offset: 1, color: 'rgba(0,246,255,0.1)' // 100% 处的颜色\r\n          }],\r\n          global: false // 缺省为 false\r\n        }\r\n      },\r\n      lineStyle: {\r\n        color: '#00F6FF'\r\n      }\r\n    }\r\n  ]\r\n};\r\nconst yieldXAxis = (mode, format = 'yyyy.MM') => {\r\n  const curDateTimestamp = new Date().setDate(1);\r\n  let curM = new Date(curDateTimestamp).getMonth();\r\n  const xAxis = [];\r\n  for (let i = 0; i < 6; i++) {\r\n    xAxis.push(mode === 'add' ? dateFormat(new Date(curDateTimestamp).setMonth(curM++), format) : dateFormat(new Date(curDateTimestamp).setMonth(--curM), format));\r\n  }\r\n  // console.log(dateFormat(curDate.setMonth(11), 'yyyy.MM'));\r\n  return xAxis;\r\n};\r\n\r\nexport default {\r\n  name: 'produce',\r\n  data () {\r\n    return {\r\n      // 历史产量chart\r\n      historyYieldChart: null,\r\n      // 表格\r\n      historyYieldSubject: 'agri',\r\n      // 详情\r\n      historyYieldDetailSubject: 'agri',\r\n      // 未来产量chart\r\n      futureYieldChart: null,\r\n      futureYieldSubject: 'agri',\r\n      futureYieldDetailSubject: 'agri',\r\n      // 检测与追溯\r\n      checkTraChart: null,\r\n      checkTraSubject: 'agri',\r\n      // 不同种植标准的产量\r\n      cropDistributionChart: null,\r\n      cropDistributionSubject: 'agri',\r\n      // 是否显示历史弹框\r\n      historyDialogVisible: false,\r\n      historyDate: prevMonth(),\r\n      historyTotal: 0,\r\n      historyTableData: null,\r\n      historyTable: null,\r\n\r\n      // 是否显示预计弹框\r\n      predictDialogVisible: false,\r\n      predictDate: new Date(),\r\n      predictTotal: 0,\r\n      predictTableData: null,\r\n      predictTable: null,\r\n      flowDateRange: {\r\n        disabledDate (d) {\r\n          const curDateTimestamp = new Date().setDate(1);\r\n          const curM = new Date(curDateTimestamp).getMonth();\r\n          const PrevDate = new Date(new Date(curDateTimestamp).setMonth(curM - 1));\r\n          return !(d < PrevDate);\r\n        }\r\n      },\r\n      predictDateRange: {\r\n        disabledDate (d) {\r\n          return !(d > new Date());\r\n        }\r\n      },\r\n\r\n      // 基地品溯源数据\r\n      farmTraData: [\r\n        {\r\n          title: '今日溯源查询',\r\n          start: 0,\r\n          end: 0,\r\n          last: 0,\r\n          lastDes: '昨日'\r\n        },\r\n        {\r\n          title: '本周溯源查询',\r\n          start: 0,\r\n          end: 0,\r\n          last: 0,\r\n          lastDes: '上周'\r\n        },\r\n        {\r\n          title: '本月溯源查询',\r\n          start: 0,\r\n          end: 0,\r\n          last: 0,\r\n          lastDes: '上月'\r\n        }\r\n      ],\r\n      // 溯源查询表\r\n      traSearchChart: null,\r\n      traTabs: [\r\n        {\r\n          tab: '天',\r\n          selected: true\r\n        },\r\n        {\r\n          tab: '周',\r\n          selected: false\r\n        },\r\n        {\r\n          tab: '月',\r\n          selected: false\r\n        }\r\n      ],\r\n      traUrl: this.$api.traUrl, // \"http://showtest.snkoudai.com/tracesource/#/\"\r\n      goodsSubject: [],\r\n      goodsSubjectUnit: {}\r\n    };\r\n  },\r\n  created () {\r\n    this.getDayTra();\r\n    this.getWeekTra();\r\n    this.getMonthTra();\r\n    this.traUrl += `${farmAreaInfo.farmAreaId}`;\r\n  },\r\n  mounted () {\r\n    this.$nextTick(async () => {\r\n      /* 历史 */\r\n      this.historyYieldChart = this._initEcharts(this.$refs.historyYieldChart, barOption);\r\n\r\n      // this.getHistoryYield()\r\n      //   .then((res) => {\r\n      //   });\r\n      await this.getCropSubject();\r\n      this.setHistoryYield('agri');\r\n      this.historyYieldChart.on('click', (r) => {\r\n        this.historyDate = new Date(r.name.replace(/\\./, '-'));\r\n        this.historyYieldDetailSubject = this.historyYieldSubject;\r\n        this.viewDetail('historyDialogVisible', false);\r\n      });\r\n\r\n      /* 预计 */\r\n      this.futureYieldChart = this._initEcharts(this.$refs.futureYieldChart, barOption);\r\n      this.setFutureYield('agri');\r\n      this.futureYieldChart.on('click', (r) => {\r\n        this.predictDate = new Date(r.name.replace(/\\./, '-'));\r\n        this.futureYieldDetailSubject = this.futureYieldSubject;\r\n        this.viewDetail('predictDialogVisible', false);\r\n      });\r\n\r\n      /* 检测与追溯 */\r\n      this.checkTraChart = this._initEcharts(this.$refs.checkTraChart, barOption);\r\n      this.setCheckTraChart('agri');\r\n\r\n      /* 不同种植标准的产量分布 */\r\n      this.cropDistributionChart = this._initEcharts(this.$refs.cropDistributionChart, barOption);\r\n      this.setCropDistributionChart('agri');\r\n\r\n      // 溯源查询趋势图\r\n      this.traSearchChart = this._initEcharts(this.$refs.traSearchChart, lineOption);\r\n\r\n      this.switchTraTerm(1);\r\n    });\r\n\r\n    window.onresize = () => {\r\n      this.historyYieldChart.resize();\r\n      this.futureYieldChart.resize();\r\n      this.checkTraChart.resize();\r\n      this.cropDistributionChart.resize();\r\n      this.traSearchChart.resize();\r\n    };\r\n  },\r\n  methods: {\r\n    // 监测大类是否需要需要换算单位\r\n    checkSubjectChangeUnit (subject) {\r\n      const mapping = {\r\n        agri: true,\r\n        forestry: false,\r\n        animal: false,\r\n        fishery: true\r\n      };\r\n      return mapping[subject];\r\n    },\r\n\r\n    // 获取作物大类列表\r\n    async getCropSubject () {\r\n      return this.$ajax.post(this.$api.public.cropSubject, {})\r\n        .then(({ data: res }) => {\r\n          if (res.respCode === 0) {\r\n            this.goodsSubjectUnit = {};\r\n            this.goodsSubject = res.obj.list.map(item => {\r\n              this.goodsSubjectUnit[item.cropSubjectIdentifier] = (\r\n                item.cropSubjectIdentifier === 'forestry' || item.cropSubjectIdentifier === 'animal'\r\n              )\r\n                ? item.cropCategoryUnitAll\r\n                : '吨';\r\n              return {\r\n                name: item.cropSubjectNickname,\r\n                id: item.cropSubjectIdentifier\r\n              };\r\n            });\r\n            return true;\r\n          }\r\n        });\r\n    },\r\n\r\n    /**\r\n       * 初始化echarts\r\n       * _initEcharts\r\n       * @param el\r\n       * @param option\r\n       * @returns chart 实例\r\n       * @private\r\n       */\r\n    _initEcharts (el, option) {\r\n      const chart = this.$echarts.init(el);\r\n      chart.setOption(option);\r\n      return chart;\r\n    },\r\n\r\n    viewDetail (dialog, isSet = true) {\r\n      this[dialog] = true;\r\n      switch (dialog) {\r\n        case 'historyDialogVisible':\r\n          if (isSet) {\r\n            this.historyDate = prevMonth();\r\n            this.historyYieldDetailSubject = this.historyYieldSubject; // 'agri';\r\n          }\r\n          this.getHisDetailYield(this.historyYieldDetailSubject);\r\n          break;\r\n        case 'predictDialogVisible':\r\n          if (isSet) {\r\n            this.predictDate = new Date();\r\n            this.futureYieldDetailSubject = this.futureYieldSubject; // 'agri';\r\n          }\r\n          this.getFutureDetailYield(this.futureYieldDetailSubject);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    },\r\n\r\n    // 获取历史生产量\r\n    getHistoryYield (subjectIdentifier) {\r\n      return this.$ajax.post(this.$api.produce.historyYield, {\r\n        dateList: yieldXAxis('minus', 'yyyy-MM-dd').reverse(),\r\n        farmAreaId: [farmAreaInfo.farmAreaId],\r\n        farmAreaType: farmAreaInfo.farmAreaType,\r\n        subjectIdentifier\r\n      })\r\n        .then((response) => {\r\n          const res = response.data;\r\n          if (res.respCode === 0) {\r\n            return res.obj;\r\n          }\r\n        });\r\n    },\r\n\r\n    // 获取预计时间产量\r\n    getFutureYield (subjectIdentifier) {\r\n      return this.$ajax.post(this.$api.produce.futureYield, {\r\n        dateList: yieldXAxis('add', 'yyyy-MM-dd'),\r\n        farmAreaId: [farmAreaInfo.farmAreaId],\r\n        farmAreaType: farmAreaInfo.farmAreaType,\r\n        subjectIdentifier\r\n      })\r\n        .then((response) => {\r\n          const res = response.data;\r\n          if (res.respCode === 0) {\r\n            return res.obj;\r\n          }\r\n        });\r\n    },\r\n\r\n    // 获取历史明细产量\r\n    getHisDetailYield (subjectIdentifier) {\r\n      const unit = this.goodsSubjectUnit[subjectIdentifier];\r\n      this.$ajax.post(this.$api.produce.hisDetailYield, {\r\n        farmAreaId: [farmAreaInfo.farmAreaId],\r\n        farmAreaType: farmAreaInfo.farmAreaType,\r\n        date: this.historyDate.getTime(),\r\n        pageNo: 1,\r\n        pageSize: 1000,\r\n        subjectIdentifier\r\n      })\r\n        .then((response) => {\r\n          const res = response.data;\r\n          const obj = res.obj;\r\n          if (res.respCode === 0) {\r\n            this.historyTotal = obj.totalOutput\r\n              ? unitTranslate({\r\n                value: this.checkSubjectChangeUnit(subjectIdentifier) ? obj.totalOutput / Math.pow(10, 3) : obj.totalOutput, // 公斤 - 吨\r\n                unit\r\n              }).formatter\r\n              : `0${unit}`;\r\n            this.historyTableData = [];\r\n            if (obj.pickPage) {\r\n              this.historyTableData = obj.pickPage.list.map(item => ({\r\n                cropType: item.cropName,\r\n                actualProduction: maxDecimalPlaces({\r\n                  value: this.checkSubjectChangeUnit(subjectIdentifier) ? item.sumTotal / Math.pow(10, 3) : item.sumTotal // 公斤 - 吨\r\n                })\r\n              }));\r\n            }\r\n            this.$nextTick(() => {\r\n              if (this.historyTable) {\r\n                this.historyTable.refresh();\r\n                this.historyTable.scrollTo(0, 0, 0);\r\n                return true;\r\n              }\r\n\r\n              this.historyTable = _initBScroll(this.$refs.historyTable.$el.querySelector('.el-table__body-wrapper'));\r\n            });\r\n          }\r\n        });\r\n    },\r\n\r\n    // 获取预计明细产量\r\n    getFutureDetailYield (subjectIdentifier) {\r\n      const unit = this.goodsSubjectUnit[subjectIdentifier];\r\n      this.$ajax.post(this.$api.produce.futureDetailYield, {\r\n        farmAreaId: [farmAreaInfo.farmAreaId],\r\n        farmAreaType: farmAreaInfo.farmAreaType,\r\n        date: this.predictDate.getTime(),\r\n        pageNo: 1,\r\n        pageSize: 1000,\r\n        subjectIdentifier\r\n      })\r\n        .then((response) => {\r\n          const res = response.data;\r\n          const obj = res.obj;\r\n          if (res.respCode === 0) {\r\n            this.predictTotal = obj.totalOutput\r\n              ? unitTranslate({\r\n                value: this.checkSubjectChangeUnit(subjectIdentifier) ? obj.totalOutput / Math.pow(10, 3) : obj.totalOutput, // 公斤 - 吨\r\n                unit\r\n              }).formatter\r\n              : `0${unit}`;\r\n            this.predictTableData = [];\r\n\r\n            if (obj.apiPage) {\r\n              obj.apiPage.list.forEach((item) => {\r\n                this.predictTableData.push({\r\n                  cropType: item.cropName,\r\n                  predictProduction: maxDecimalPlaces({\r\n                    value: this.checkSubjectChangeUnit(subjectIdentifier) ? item.sumTotal / Math.pow(10, 3) : item.sumTotal // 公斤 - 吨\r\n                  })\r\n                });\r\n              });\r\n            }\r\n            this.$nextTick(() => {\r\n              if (this.predictTable) {\r\n                this.predictTable.scrollTo(0, 0, 0);\r\n                this.predictTable.refresh();\r\n                return true;\r\n              }\r\n              this.predictTable = _initBScroll(this.$refs.predictTable.$el.querySelector('.el-table__body-wrapper'));\r\n            });\r\n          }\r\n        });\r\n    },\r\n\r\n    // 获取检测与追溯数据\r\n    getCheckTraChart (subjectIdentifier) {\r\n      return this.$ajax.post(this.$api.produce.checkTra, {\r\n        dateList: yieldXAxis('minus', 'yyyy-MM-dd').reverse(),\r\n        farmAreaId: [farmAreaInfo.farmAreaId],\r\n        farmAreaType: farmAreaInfo.farmAreaType,\r\n        subjectIdentifier\r\n      })\r\n        .then(({ data }) => {\r\n          if (data.respCode === 0) {\r\n            return data.obj;\r\n          }\r\n        });\r\n    },\r\n\r\n    // 获取不同种植标准的产量分布\r\n    getCropDistributionChart (subjectIdentifier) {\r\n      return this.$ajax.post(this.$api.produce.cropDistribution, {\r\n        dateList: yieldXAxis('minus', 'yyyy-MM-dd').reverse(),\r\n        farmAreaId: [farmAreaInfo.farmAreaId],\r\n        farmAreaType: farmAreaInfo.farmAreaType,\r\n        plantStandardType: 7,\r\n        subjectIdentifier\r\n      })\r\n        .then(({ data }) => {\r\n          // console.log(data);\r\n          if (data.respCode === 0) {\r\n            return data.obj;\r\n          }\r\n        });\r\n    },\r\n\r\n    // 设置历史产量echarts\r\n    async setHistoryYield (subjectIdentifier) {\r\n      const unit = this.goodsSubjectUnit[subjectIdentifier];\r\n      const res = await this.getHistoryYield(subjectIdentifier);\r\n      this.historyYieldChart.setOption({\r\n        tooltip: {\r\n          show: true,\r\n          formatter (v) {\r\n            return `${v.name}<br/>${unitTranslate({ value: v.value, unit }).formatter}`;\r\n          }\r\n        },\r\n        title: {\r\n          text: `单位：${unit}`\r\n        },\r\n        yAxis: {\r\n          axisLabel: {\r\n            formatter: (v) => {\r\n              return unitTranslate({ value: v }).formatter;\r\n            }\r\n          }\r\n        },\r\n        xAxis: {\r\n          data: res.map((item) => {\r\n            return dateFormat(item.pickTime, 'yyyy.MM');\r\n          }),\r\n          axisLabel: {\r\n            formatter: v => v // ${v.split('.')[1]}\\n${v.split('.')[0]}\r\n          }\r\n        },\r\n        series: [\r\n          {\r\n            data: res.map((item, i) => {\r\n              return {\r\n                name: dateFormat(item.pickTime, 'yyyy.MM'),\r\n                value: this.checkSubjectChangeUnit(subjectIdentifier) ? item.sumPickOutput / Math.pow(10, 3) : item.sumPickOutput, // 公斤 - 吨\r\n                itemStyle: {\r\n                  color: color[i]\r\n                }\r\n              };\r\n            })\r\n          }\r\n        ]\r\n      });\r\n    },\r\n\r\n    // 设置未来产量echarts\r\n    async setFutureYield (subjectIdentifier) {\r\n      const unit = this.goodsSubjectUnit[subjectIdentifier];\r\n      const res = await this.getFutureYield(subjectIdentifier);\r\n      this.futureYieldChart.setOption({\r\n        tooltip: {\r\n          show: true,\r\n          formatter (v) {\r\n            return `${v.name}<br/>${unitTranslate({ value: v.value, unit }).formatter}`;\r\n          }\r\n        },\r\n        xAxis: {\r\n          data: res.map((item) => {\r\n            return dateFormat(item.outputForecastMonth, 'yyyy.MM');\r\n          }),\r\n          axisLabel: {\r\n            formatter: v => v // `${v.split('.')[1]}\\n${v.split('.')[0]}`\r\n          }\r\n        },\r\n        title: {\r\n          text: `单位：${unit}`\r\n        },\r\n        yAxis: {\r\n          // name: `单位：${unit}`,\r\n          axisLabel: {\r\n            formatter: (v) => {\r\n              return unitTranslate({ value: v }).formatter;\r\n            }\r\n          }\r\n        },\r\n        series: [\r\n          {\r\n            data: res.map((item, i) => {\r\n              return {\r\n                name: dateFormat(item.outputForecastMonth, 'yyyy.MM'),\r\n                value: this.checkSubjectChangeUnit(subjectIdentifier) ? item.sumOutput / Math.pow(10, 3) : item.sumOutput, // 公斤 - 吨\r\n                itemStyle: {\r\n                  color: color[i]\r\n                }\r\n              };\r\n            })\r\n          }\r\n        ]\r\n      });\r\n    },\r\n\r\n    // 设置检测与追溯图表\r\n    async setCheckTraChart (subjectIdentifier) {\r\n      const res = await this.getCheckTraChart(subjectIdentifier);\r\n      const unit = this.goodsSubjectUnit[subjectIdentifier];\r\n      this.checkTraChart.setOption({\r\n        color: [color[5], color[3]],\r\n        tooltip: {\r\n          show: true,\r\n          formatter (v) {\r\n            return `${v.name}<br/>${v.seriesName}：${unitTranslate({ value: v.value, unit }).formatter}`;\r\n          }\r\n        },\r\n        legend: {\r\n          data: ['有检测报告', '可追溯'],\r\n          show: true,\r\n          top: 14,\r\n          right: 20,\r\n          height: 22,\r\n          itemWidth: 12,\r\n          itemHeight: 12,\r\n          // padding: 4,\r\n          textStyle: {\r\n            color: '#6DC1CB',\r\n            fontSize: 12,\r\n            lineHeight: 20\r\n          }\r\n        },\r\n        xAxis: {\r\n          data: res.hasInspectReportVOList.map((item) => {\r\n            return dateFormat(item.pickTime, 'yyyy.MM');\r\n          }),\r\n          axisLabel: {\r\n            formatter: v => v // `${v.split('.')[1]}\\n${v.split('.')[0]}`\r\n          }\r\n        },\r\n        title: {\r\n          text: `单位：${unit}`\r\n        },\r\n        yAxis: {\r\n          // name: `单位：${unit}`,\r\n          axisLabel: {\r\n            formatter: (v) => {\r\n              return unitTranslate({ value: v }).formatter;\r\n            }\r\n          }\r\n        },\r\n        series: [\r\n          {\r\n            type: 'bar',\r\n            name: '有检测报告',\r\n            barWidth: 14,\r\n            data: res.hasInspectReportVOList.map((item) => {\r\n              return {\r\n                name: dateFormat(item.pickTime, 'yyyy.MM'),\r\n                value: this.checkSubjectChangeUnit(subjectIdentifier) ? item.sumPickOutput / Math.pow(10, 3) : item.sumPickOutput // 公斤 - 吨\r\n              };\r\n            })\r\n          },\r\n          {\r\n            type: 'bar',\r\n            name: '可追溯',\r\n            barWidth: 14,\r\n            data: res.boundBarcodeVOList.map((item) => {\r\n              return {\r\n                name: dateFormat(item.pickTime, 'yyyy.MM'),\r\n                value: this.checkSubjectChangeUnit(subjectIdentifier) ? item.sumPickOutput / Math.pow(10, 3) : item.sumPickOutput // 公斤 - 吨\r\n              };\r\n            })\r\n          }\r\n        ]\r\n      });\r\n    },\r\n\r\n    // 设置不同种植标准的产量分布\r\n    async setCropDistributionChart (subjectIdentifier) {\r\n      const unit = this.goodsSubjectUnit[subjectIdentifier];\r\n      const res = await this.getCropDistributionChart(subjectIdentifier);\r\n\r\n      this.cropDistributionChart.setOption({\r\n        color: [color[2], color[0], color[5]],\r\n        tooltip: {\r\n          show: true,\r\n          formatter (v) {\r\n            return `${v.name}<br/>${v.seriesName}：${unitTranslate({ value: v.value, unit }).formatter}`;\r\n          }\r\n        },\r\n        legend: {\r\n          data: ['无公害', '绿色', '有机'],\r\n          show: true,\r\n          top: 14,\r\n          right: 20,\r\n          height: 22,\r\n          itemWidth: 12,\r\n          itemHeight: 12,\r\n          // padding: 4,\r\n          textStyle: {\r\n            color: '#6DC1CB',\r\n            fontSize: 12,\r\n            lineHeight: 20\r\n          }\r\n        },\r\n        xAxis: {\r\n          data: res.lvseVOList.map((item) => {\r\n            return dateFormat(item.pickTime, 'yyyy.MM');\r\n          }),\r\n          axisLabel: {\r\n            formatter: v => v // `${v.split('.')[1]}\\n${v.split('.')[0]}`\r\n          }\r\n        },\r\n        title: {\r\n          text: `单位：${unit}`\r\n        },\r\n        yAxis: {\r\n          // name: `单位：${unit}`,\r\n          axisLabel: {\r\n            formatter: (v) => {\r\n              return unitTranslate({ value: v }).formatter;\r\n            }\r\n          }\r\n        },\r\n        series: (() => {\r\n          const ret = [];\r\n          const _res = [];\r\n          let name = '';\r\n          for (const k in res) {\r\n            switch (k) {\r\n              case 'lvseVOList':\r\n                name = '绿色';\r\n                break;\r\n              case 'wughVOList':\r\n                name = '无公害';\r\n                break;\r\n              case 'youjiVOList':\r\n                name = '有机';\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n            ret.push({\r\n              name,\r\n              type: 'bar',\r\n              barWidth: 10,\r\n              data: res[k].map((item) => {\r\n                return {\r\n                  name: dateFormat(item.pickTime, 'yyyy.MM'),\r\n                  value: this.checkSubjectChangeUnit(subjectIdentifier) ? item.sumPickOutput / Math.pow(10, 3) : item.sumPickOutput // 公斤 - 吨\r\n                };\r\n              })\r\n            });\r\n          }\r\n          ret.forEach((item) => {\r\n            switch (item.name) {\r\n              case '无公害':\r\n                _res[0] = item;\r\n                break;\r\n              case '绿色':\r\n                _res[1] = item;\r\n                break;\r\n              case '有机':\r\n                _res[2] = item;\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n          });\r\n          return _res;\r\n        })()\r\n      });\r\n    },\r\n\r\n    // 切换溯源查询条件\r\n    switchTraTerm (type) {\r\n      this.traTabs.forEach((item, index) => {\r\n        item.selected = (index + 1) === type;\r\n      });\r\n      // 获取溯源查询数据\r\n      this.getTraSearchChart(type)\r\n        .then(({ obj: data }) => {\r\n          this.setTraSearchChart(data, type);\r\n        });\r\n    },\r\n\r\n    // 获取溯源搜索数据\r\n    getTraSearchChart (type) {\r\n      return new Promise((resolve, reject) => {\r\n        this.$ajax.post(this.$api.produce.traCodeCount, {\r\n          statisticsType: type,\r\n          farmAreaId: [farmAreaInfo.farmAreaId],\r\n          farmAreaType: farmAreaInfo.farmAreaType\r\n        })\r\n          .then(({ data: res }) => {\r\n            if (res.respCode === 0) {\r\n              return resolve(res);\r\n            }\r\n            reject(new Error(''));\r\n          });\r\n      });\r\n    },\r\n\r\n    // 设置溯源搜索图表\r\n    setTraSearchChart (d, type) {\r\n      const unit = '次';\r\n      this.traSearchChart.setOption({\r\n        tooltip: {\r\n          show: true,\r\n          formatter (v) {\r\n            const item = v[0];\r\n            return `${item.name}<br/>${unitTranslate({ value: item.value, unit }).formatter}`;\r\n          }\r\n        },\r\n        xAxis: {\r\n          data: d.map((item) => {\r\n            let format = '';\r\n            switch (type) {\r\n              case 1:\r\n                format = dateFormat(item.accessTime, 'yyyy.MM.dd');\r\n                break;\r\n              case 2:\r\n                format = `${dateFormat(item.startDate, 'yyyy.MM.dd')}~${dateFormat(item.endDate, 'yyyy.MM.dd')}`;\r\n                break;\r\n              case 3:\r\n                format = dateFormat(item.accessTime, 'yyyy.MM');\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n            return format;\r\n          }),\r\n          axisLabel: {\r\n            formatter: v => v // `${v.split('.')[1]}\\n${v.split('.')[0]}`\r\n          }\r\n        },\r\n        yAxis: {\r\n          name: `单位：${unit}`,\r\n          axisLabel: {\r\n            formatter: (v) => {\r\n              return unitTranslate({ value: v }).formatter;\r\n            }\r\n          }\r\n        },\r\n        series: [\r\n          {\r\n            data: d.map((item) => {\r\n              return {\r\n                name: (() => {\r\n                  let format = '';\r\n                  switch (type) {\r\n                    case 1:\r\n                      format = dateFormat(item.accessTime, 'yyyy.MM.dd');\r\n                      break;\r\n                    case 2:\r\n                      format = `${dateFormat(item.startDate, 'yyyy.MM.dd')}~${dateFormat(item.endDate, 'yyyy.MM.dd')}`;\r\n                      break;\r\n                    case 3:\r\n                      format = dateFormat(item.accessTime, 'yyyy.MM');\r\n                      break;\r\n                    default:\r\n                      break;\r\n                  }\r\n                  return format;\r\n                })(),\r\n                value: item.accessNum\r\n              };\r\n            })\r\n          }\r\n        ]\r\n      });\r\n    },\r\n\r\n    // 获取指定时间的溯源访问数量\r\n    async getTimeTraCount ({ startDate = new Date().getTime(), endDate = new Date().getTime() } = {}) {\r\n      const govGovernmentSubjectVO = JSON.parse(localStorage.govGovernmentSubjectVO);\r\n      const farmAreaId = {\r\n        1: govGovernmentSubjectVO.provinceId,\r\n        2: govGovernmentSubjectVO.cityId,\r\n        3: govGovernmentSubjectVO.countyId\r\n      };\r\n      let result = null;\r\n\r\n      await new Promise((resolve, reject) => {\r\n        this.$ajax.post(this.$api.produce.timeTraCount, {\r\n          farmAreaId: [farmAreaId[govGovernmentSubjectVO.subjectLevel]],\r\n          farmAreaType: govGovernmentSubjectVO.subjectLevel,\r\n          startDate,\r\n          endDate\r\n        })\r\n          .then(({ data: res }) => {\r\n            if (res.respCode === 0) {\r\n              result = res;\r\n              return resolve(res);\r\n            }\r\n            reject();\r\n          });\r\n      });\r\n\r\n      return result;\r\n    },\r\n\r\n    // 今日溯源查询\r\n    async getDayTra () {\r\n      const curTimestamp = new Date().getTime(); // 今天时间戳\r\n      const lastTimestamp = curTimestamp - (24 * 60 * 60 * 1000);\r\n      this.farmTraData[0].end = (await this.getTimeTraCount({\r\n        startDate: dateFormat(curTimestamp, 'yyyy-MM-dd'),\r\n        endDate: dateFormat(curTimestamp, 'yyyy-MM-dd')\r\n      })).obj;\r\n      this.farmTraData[0].last = (await this.getTimeTraCount({\r\n        startDate: dateFormat(lastTimestamp, 'yyyy-MM-dd'),\r\n        endDate: dateFormat(lastTimestamp, 'yyyy-MM-dd')\r\n      })).obj;\r\n      // console.log(`今天：${dateFormat(curTimestamp, 'yyyy-MM-dd')}`);\r\n      // console.log(`昨天：${dateFormat(lastTimestamp, 'yyyy-MM-dd')}`);\r\n    },\r\n\r\n    // 本周溯源查询\r\n    async getWeekTra () {\r\n      // 今天时间戳\r\n      const curTimestamp = new Date().getTime();\r\n      // 本周日期 （周几）\r\n      const weekDay = new Date(curTimestamp).getDay();\r\n      // 本周的周一\r\n      const curWeekDay = jumpDay({\r\n        originDay: curTimestamp,\r\n        day: weekDay ? -(weekDay - 1) : -6\r\n      });\r\n        // 上周周日\r\n      const lastWeekE = jumpDay({\r\n        originDay: curWeekDay,\r\n        day: -1\r\n      });\r\n        // 上周周一\r\n      const lastWeekS = jumpDay({\r\n        originDay: lastWeekE,\r\n        day: -6\r\n      });\r\n      this.farmTraData[1].end = (await this.getTimeTraCount({\r\n        startDate: dateFormat(curWeekDay, 'yyyy-MM-dd'),\r\n        endDate: dateFormat(curTimestamp, 'yyyy-MM-dd')\r\n      })).obj;\r\n      this.farmTraData[1].last = (await this.getTimeTraCount({\r\n        startDate: dateFormat(lastWeekS, 'yyyy-MM-dd'),\r\n        endDate: dateFormat(lastWeekE, 'yyyy-MM-dd')\r\n      })).obj;\r\n      // console.log(`本周：${dateFormat(curTimestamp, 'yyyy-MM-dd')}`);\r\n      // console.log(`本周：${dateFormat(curWeekDay, 'yyyy-MM-dd')}`);\r\n      // console.log(`上周：${dateFormat(lastWeekS, 'yyyy-MM-dd')}`);\r\n      // console.log(`上周：${dateFormat(lastWeekE, 'yyyy-MM-dd')}`);\r\n    },\r\n\r\n    // 本月溯源查询\r\n    async getMonthTra () {\r\n      // 今天时间戳\r\n      const curTimestamp = new Date().getTime();\r\n      // 本月中的一天\r\n      const curMonthDate = new Date(curTimestamp).getDate();\r\n      // 本月的第一天\r\n      const curMonthDateS = jumpDay({\r\n        originDay: curTimestamp,\r\n        day: -(curMonthDate - 1)\r\n      });\r\n        // 上个月的最后一天\r\n      const lastMonthDateE = jumpDay({\r\n        originDay: curMonthDateS,\r\n        day: -1\r\n      });\r\n        // 上个月的总天数\r\n      const lastMonthCount = new Date(lastMonthDateE).getDate();\r\n      // 上个月第一天\r\n      const lastMonthDateS = jumpDay({\r\n        originDay: curMonthDateS,\r\n        day: -lastMonthCount\r\n      });\r\n      this.farmTraData[2].end = (await this.getTimeTraCount({\r\n        startDate: dateFormat(curMonthDateS, 'yyyy-MM-dd'),\r\n        endDate: dateFormat(curTimestamp, 'yyyy-MM-dd')\r\n      })).obj;\r\n      this.farmTraData[2].last = (await this.getTimeTraCount({\r\n        startDate: dateFormat(lastMonthDateS, 'yyyy-MM-dd'),\r\n        endDate: dateFormat(lastMonthDateE, 'yyyy-MM-dd')\r\n      })).obj;\r\n      // console.log(`本月：${dateFormat(curMonthDateS, 'yyyy-MM-dd')}`);\r\n      // console.log(`本月：${dateFormat(curTimestamp, 'yyyy-MM-dd')}`);\r\n      // console.log(`上月：${dateFormat(lastMonthDateS, 'yyyy-MM-dd')}`);\r\n      // console.log(`上月：${dateFormat(lastMonthDateE, 'yyyy-MM-dd')}`);\r\n    }\r\n  },\r\n  components: {\r\n    freetekBox,\r\n    countTo\r\n  },\r\n\r\n  watch: {\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n  @import \"~styles/selectSkin_default\";\r\n  @import \"~styles/tableSkin_default\";\r\n  @import \"~styles/dialogSkin_default\";\r\n  @import \"~styles/datePickerSkin_default\";\r\n  @import \"~styles/scrollbarSkin_default\";\r\n\r\n  .layout-container {\r\n    padding: 5px 0 10px 0;\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    min-height: 600px;\r\n    flex: 1;\r\n\r\n    .item-container {\r\n      width: 26.80%;\r\n      flex: 1;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      flex-direction: column;\r\n\r\n      .s-item-wrap {\r\n        height: calc(100% / 2 - 10px);\r\n        position: relative;\r\n\r\n        ._s-item-wrap {\r\n          position: absolute;\r\n          top: 0;\r\n          left: 0;\r\n          height: 100%;\r\n          width: 100%;\r\n\r\n          .chart-item-wrap {\r\n            padding: 5px 15px 15px;\r\n            box-sizing: border-box;\r\n            width: 100%;\r\n            height: 100%;\r\n            position: relative;\r\n\r\n            .view-detail {\r\n              position: absolute;\r\n              top: 10px;\r\n              right: 30px;\r\n              color: #00F6FF;\r\n              font-size: 14px;\r\n            }\r\n\r\n            .subject-select {\r\n              position: absolute;\r\n              top: 16px;\r\n              left: 30px;\r\n              width: 110px;\r\n              height: 30px;\r\n\r\n              /deep/ .el-input__inner {\r\n                width: 100%;\r\n              }\r\n            }\r\n\r\n            .chart-item {\r\n              width: 100%;\r\n              height: 100%;\r\n              background-color: rgba(6, 31, 54, 1);\r\n            }\r\n          }\r\n\r\n          .table-container {\r\n            width: 100%;\r\n            height: 100%;\r\n            -webkit-box-sizing: border-box;\r\n            -moz-box-sizing: border-box;\r\n            box-sizing: border-box;\r\n            padding: 0 25px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    .b-item-wrap {\r\n      width: 45.42%;\r\n      margin: 0 auto;\r\n      position: relative;\r\n\r\n      ._b-item-wrap {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n\r\n        /deep/ .freeteck-box-container {\r\n          &.big {\r\n            background: url(\"~@/assets/images/f-box/_b-item-bg02.png\") no-repeat;\r\n          }\r\n        }\r\n\r\n        /deep/ .box-main {\r\n          position: relative;\r\n        }\r\n\r\n        .tra-inquiry-bar {\r\n          display: flex;\r\n          justify-content: space-around;\r\n          align-items: center;\r\n          padding: 48px 0 0 0;\r\n\r\n          .item-tra {\r\n            display: flex;\r\n            flex-direction: column;\r\n            justify-content: center;\r\n            align-items: center;\r\n            flex: 1;\r\n\r\n            .item-title {\r\n              color: #00F6FF;\r\n              font-size: 18px;\r\n              font-weight: 400;\r\n              line-height: 20px;\r\n            }\r\n\r\n            .item-num {\r\n              padding: 15px 0 12px;\r\n            }\r\n\r\n            .relatively {\r\n              font-size: 18px;\r\n              color: #6DC1CB;\r\n              font-weight: 400;\r\n              line-height: 18px;\r\n\r\n              .iconfont {\r\n                font-size: 14px;\r\n                margin-left: 10px;\r\n                vertical-align: 2px;\r\n\r\n                &.up {\r\n                  color: #81F94F;\r\n                }\r\n\r\n                &.down {\r\n                  color: #FF5252;\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n        }\r\n\r\n        ._tra-search-line {\r\n          height: calc(100% - 296px);\r\n          margin-top: 40px;\r\n          position: relative;\r\n\r\n          .char-tabs {\r\n            position: absolute;\r\n            right: 60px;\r\n            top: 24px;\r\n            display: flex;\r\n            z-index: 99;\r\n\r\n            .tab {\r\n              font-size: 16px;\r\n              color: #6DC1CB;\r\n              height: 24px;\r\n              line-height: 22px;\r\n              box-sizing: border-box;\r\n              font-weight: 400;\r\n              cursor: pointer;\r\n\r\n              + .tab {\r\n                margin-left: 25px;\r\n              }\r\n\r\n              &.select {\r\n                color: #00F6FF;\r\n                font-weight: bold;\r\n                border-bottom: 2px solid #15E9FC;\r\n              }\r\n            }\r\n          }\r\n\r\n          .tra-search-line {\r\n            height: 100%;\r\n          }\r\n        }\r\n\r\n        .tra-search-enter {\r\n          text-align: center;\r\n          font-size: 16px;\r\n          font-weight: bold;\r\n          width: 245px;\r\n          height: 77px;\r\n          line-height: 61px;\r\n          position: absolute;\r\n          bottom: 25px;\r\n          left: 50%;\r\n          transform: translateX(-50%);\r\n          background: url(\"~@/assets/images/producee/tra-search-btn-bg.png\") no-repeat;\r\n          background-size: 100% 100%;\r\n          box-sizing: border-box;\r\n          padding: 18px 10px;\r\n          border: 0 none;\r\n          outline: none;\r\n          /*cursor: pointer;*/\r\n          a {\r\n            display: block;\r\n            line-height: 41px;\r\n            color: #00F6FF;\r\n          }\r\n\r\n          @media screen and (max-width: 1440px) {\r\n            bottom: 20px;\r\n          }\r\n          @media screen and (min-width: 1441px) and (max-width: 1660px) {\r\n            bottom: 20px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /deep/ .el-dialog__body {\r\n    .freeteck-box-container {\r\n      &.big {\r\n        background: url(\"../assets/images/alert-bg.png\");\r\n      }\r\n\r\n      .box-main {\r\n        &.big {\r\n          padding: 0 3.99% 5.42%;\r\n        }\r\n      }\r\n\r\n      .head-info {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        height: 60px;\r\n        box-sizing: border-box;\r\n        padding: 30px 40px 0;\r\n\r\n        .subject-select {\r\n          width: 110px;\r\n          height: 30px;\r\n          margin-left: 26px;\r\n\r\n          /deep/ .el-input__inner {\r\n            width: 100%;\r\n          }\r\n        }\r\n\r\n        .yield-info {\r\n          color: #00F6FF;\r\n          font-size: 14px;\r\n          height: 25px;\r\n          line-height: 25px;\r\n        }\r\n      }\r\n\r\n      .table-container {\r\n        height: calc(100% - 60px);\r\n        width: 100%;\r\n        box-sizing: border-box;\r\n        padding: 0 40px;\r\n      }\r\n    }\r\n  }\r\n\r\n  /deep/ .el-table--scrollable-y .el-table__body-wrapper {\r\n    overflow: hidden;\r\n  }\r\n /* /deep/ .el-select {\r\n    .el-input__inner {\r\n      width: 160px;\r\n    }\r\n  }*/\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/pages/produce.vue"],"mappings":"AA6SA","sourceRoot":""}